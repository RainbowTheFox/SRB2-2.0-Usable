; Listing generated by Microsoft (R) Optimizing Compiler Version 19.41.34123.0 

	TITLE	C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\objs\VC10\Win32\Debug\g_input.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_cv_controlperkey
PUBLIC	_cv_mousesens2
PUBLIC	_cv_mlooksens2
PUBLIC	_cv_mousesens
PUBLIC	_cv_mlooksens
PUBLIC	_cv_allowautoaim
PUBLIC	??_C@_03KGHEHEMH@MIN@				; `string'
PUBLIC	??_C@_03LEPPJAKI@MAX@				; `string'
PUBLIC	??_C@_03EHAPBBEA@One@				; `string'
PUBLIC	??_C@_07FFDIEMLL@Several@			; `string'
PUBLIC	??_C@_09COGOMMKG@mousesens@			; `string'
PUBLIC	??_C@_02PKFBJPLJ@10@				; `string'
PUBLIC	??_C@_09GAOMEKEK@mlooksens@			; `string'
PUBLIC	??_C@_0L@NCOLDMGA@mousesens2@			; `string'
PUBLIC	??_C@_0L@HLBJBALF@mlooksens2@			; `string'
PUBLIC	??_C@_0O@OFEEFFPJ@controlperkey@		; `string'
PUBLIC	??_C@_0N@NNFJOLPA@allowautoaim@			; `string'
PUBLIC	??_C@_03CCLAEDDF@Yes@				; `string'
PUBLIC	??_C@_05CAEOFMEP@SPACE@				; `string'
PUBLIC	??_C@_09NPIDGBMA@CAPS?5LOCK@			; `string'
PUBLIC	??_C@_05EMNIMLKD@ENTER@				; `string'
PUBLIC	??_C@_03CJMDHCGG@TAB@				; `string'
PUBLIC	??_C@_06CDPDIIDH@ESCAPE@			; `string'
PUBLIC	??_C@_09MALOLBMO@BACKSPACE@			; `string'
PUBLIC	??_C@_07FLMEHHJP@NUMLOCK@			; `string'
PUBLIC	??_C@_0L@GIKEHNEK@SCROLLLOCK@			; `string'
PUBLIC	??_C@_07KBCFMOEP@LEFTWIN@			; `string'
PUBLIC	??_C@_08JLNPBCEF@RIGHTWIN@			; `string'
PUBLIC	??_C@_04IILMDFMO@MENU@				; `string'
PUBLIC	??_C@_06EPHNCIMI@LSHIFT@			; `string'
PUBLIC	??_C@_06HIJMMPFL@RSHIFT@			; `string'
PUBLIC	??_C@_05OAHIEJBI@SHIFT@				; `string'
PUBLIC	??_C@_05FOGPNEPA@LCTRL@				; `string'
PUBLIC	??_C@_05GHLDLHBL@RCTRL@				; `string'
PUBLIC	??_C@_04FBBFEIFJ@CTRL@				; `string'
PUBLIC	??_C@_04CACBGOAG@LALT@				; `string'
PUBLIC	??_C@_04PPPBEHOF@RALT@				; `string'
PUBLIC	??_C@_03FKEEPDEP@ALT@				; `string'
PUBLIC	??_C@_08MFDLNOIP@KEYPAD?5?1@			; `string'
PUBLIC	??_C@_08EHCAEGNG@KEYPAD?57@			; `string'
PUBLIC	??_C@_08MALIFKBJ@KEYPAD?58@			; `string'
PUBLIC	??_C@_08NJKDGLFI@KEYPAD?59@			; `string'
PUBLIC	??_C@_08PHANLMAN@KEYPAD?5?9@			; `string'
PUBLIC	??_C@_08GMANBFBF@KEYPAD?54@			; `string'
PUBLIC	??_C@_08HFBGCEFE@KEYPAD?55@			; `string'
PUBLIC	??_C@_08FODLHHJH@KEYPAD?56@			; `string'
PUBLIC	??_C@_08KBFHBLIL@KEYPAD?5?$CL@			; `string'
PUBLIC	??_C@_08BBHKOBFA@KEYPAD?51@			; `string'
PUBLIC	??_C@_08DKFHLCJD@KEYPAD?52@			; `string'
PUBLIC	??_C@_08CDEMIDNC@KEYPAD?53@			; `string'
PUBLIC	??_C@_08IGBNABB@KEYPAD?50@			; `string'
PUBLIC	??_C@_08NMCAOPMO@KEYPAD?5?4@			; `string'
PUBLIC	??_C@_04GHGFPGNC@HOME@				; `string'
PUBLIC	??_C@_08NCEHKGBH@UP?5ARROW@			; `string'
PUBLIC	??_C@_04NHMBBGKC@PGUP@				; `string'
PUBLIC	??_C@_0L@OKAPDENH@LEFT?5ARROW@			; `string'
PUBLIC	??_C@_0M@JHHNCACK@RIGHT?5ARROW@			; `string'
PUBLIC	??_C@_03JMGAKCCH@END@				; `string'
PUBLIC	??_C@_0L@BBCODOIK@DOWN?5ARROW@			; `string'
PUBLIC	??_C@_04BOGEOADK@PGDN@				; `string'
PUBLIC	??_C@_03NDDFJJAJ@INS@				; `string'
PUBLIC	??_C@_03OAFAKAKL@DEL@				; `string'
PUBLIC	??_C@_02LCPENACN@F1@				; `string'
PUBLIC	??_C@_02JJNJIDOO@F2@				; `string'
PUBLIC	??_C@_02IAMCLCKP@F3@				; `string'
PUBLIC	??_C@_02MPIDCEGI@F4@				; `string'
PUBLIC	??_C@_02NGJIBFCJ@F5@				; `string'
PUBLIC	??_C@_02PNLFEGOK@F6@				; `string'
PUBLIC	??_C@_02OEKOHHKL@F7@				; `string'
PUBLIC	??_C@_02GDDGGLGE@F8@				; `string'
PUBLIC	??_C@_02HKCNFKCF@F9@				; `string'
PUBLIC	??_C@_03JKCLJOFG@F10@				; `string'
PUBLIC	??_C@_03IDDAKPBH@F11@				; `string'
PUBLIC	??_C@_03KIBNPMNE@F12@				; `string'
PUBLIC	??_C@_06CAAGCEOP@MOUSE1@			; `string'
PUBLIC	??_C@_06LCLHHCM@MOUSE2@				; `string'
PUBLIC	??_C@_06BCDAEGGN@MOUSE3@			; `string'
PUBLIC	??_C@_06FNHBNAKK@MOUSE4@			; `string'
PUBLIC	??_C@_06EEGKOBOL@MOUSE5@			; `string'
PUBLIC	??_C@_06GPEHLCCI@MOUSE6@			; `string'
PUBLIC	??_C@_06HGFMIDGJ@MOUSE7@			; `string'
PUBLIC	??_C@_06PBMEJPKG@MOUSE8@			; `string'
PUBLIC	??_C@_0L@PBGLANH@SEC_MOUSE2@			; `string'
PUBLIC	??_C@_0L@CEDLODBE@SEC_MOUSE1@			; `string'
PUBLIC	??_C@_0L@BGANIBJG@SEC_MOUSE3@			; `string'
PUBLIC	??_C@_0L@FJEMBHFB@SEC_MOUSE4@			; `string'
PUBLIC	??_C@_0L@EAFHCGBA@SEC_MOUSE5@			; `string'
PUBLIC	??_C@_0L@GLHKHFND@SEC_MOUSE6@			; `string'
PUBLIC	??_C@_0L@HCGBEEJC@SEC_MOUSE7@			; `string'
PUBLIC	??_C@_0L@PFPJFIFN@SEC_MOUSE8@			; `string'
PUBLIC	??_C@_0L@CODHAEKE@Wheel?51?5UP@			; `string'
PUBLIC	??_C@_0N@JCAOPNPK@Wheel?51?5Down@		; `string'
PUBLIC	??_C@_0L@GJJHHOHE@Wheel?52?5UP@			; `string'
PUBLIC	??_C@_0N@KDOGOHGH@Wheel?52?5Down@		; `string'
PUBLIC	??_C@_04ENNJBCOM@JOY1@				; `string'
PUBLIC	??_C@_04GGPEEBCP@JOY2@				; `string'
PUBLIC	??_C@_04HPOPHAGO@JOY3@				; `string'
PUBLIC	??_C@_04DAKOOGKJ@JOY4@				; `string'
PUBLIC	??_C@_04CJLFNHOI@JOY5@				; `string'
PUBLIC	??_C@_04CJIIECL@JOY6@				; `string'
PUBLIC	??_C@_04BLIDLFGK@JOY7@				; `string'
PUBLIC	??_C@_04JMBLKJKF@JOY8@				; `string'
PUBLIC	??_C@_04IFAAJIOE@JOY9@				; `string'
PUBLIC	??_C@_05HGLHEBLC@JOY10@				; `string'
PUBLIC	??_C@_05GPKMHAPD@JOY11@				; `string'
PUBLIC	??_C@_05EEIBCDDA@JOY12@				; `string'
PUBLIC	??_C@_05FNJKBCHB@JOY13@				; `string'
PUBLIC	??_C@_05BCNLIELG@JOY14@				; `string'
PUBLIC	??_C@_05LMALFPH@JOY15@				; `string'
PUBLIC	??_C@_05CAONOGDE@JOY16@				; `string'
PUBLIC	??_C@_05DJPGNHHF@JOY17@				; `string'
PUBLIC	??_C@_05LOGOMLLK@JOY18@				; `string'
PUBLIC	??_C@_05KHHFPKPL@JOY19@				; `string'
PUBLIC	??_C@_05HEPBPPOL@JOY20@				; `string'
PUBLIC	??_C@_05GNOKMOKK@JOY21@				; `string'
PUBLIC	??_C@_05EGMHJNGJ@JOY22@				; `string'
PUBLIC	??_C@_05FPNMKMCI@JOY23@				; `string'
PUBLIC	??_C@_05BAJNDKOP@JOY24@				; `string'
PUBLIC	??_C@_05JIGALKO@JOY25@				; `string'
PUBLIC	??_C@_05CCKLFIGN@JOY26@				; `string'
PUBLIC	??_C@_05DLLAGJCM@JOY27@				; `string'
PUBLIC	??_C@_05LMCIHFOD@JOY28@				; `string'
PUBLIC	??_C@_05KFDDEEKC@JOY29@				; `string'
PUBLIC	??_C@_05HFDDJFNM@JOY30@				; `string'
PUBLIC	??_C@_05GMCIKEJN@JOY31@				; `string'
PUBLIC	??_C@_05EHAFPHFO@JOY32@				; `string'
PUBLIC	??_C@_05FMAGIOFO@HATUP@				; `string'
PUBLIC	??_C@_07HMMLCBLO@HATDOWN@			; `string'
PUBLIC	??_C@_07IOMPLJIH@HATLEFT@			; `string'
PUBLIC	??_C@_08PMCJPCPB@HATRIGHT@			; `string'
PUBLIC	??_C@_06GBPPCOAM@HATUP2@			; `string'
PUBLIC	??_C@_08MBNFABNL@HATDOWN2@			; `string'
PUBLIC	??_C@_08JOCCINEL@HATLEFT2@			; `string'
PUBLIC	??_C@_09CHDGLPAJ@HATRIGHT2@			; `string'
PUBLIC	??_C@_06HIOEBPEN@HATUP3@			; `string'
PUBLIC	??_C@_08NIMODAJK@HATDOWN3@			; `string'
PUBLIC	??_C@_08IHDJLMAK@HATLEFT3@			; `string'
PUBLIC	??_C@_09DOCNIOEI@HATRIGHT3@			; `string'
PUBLIC	??_C@_06DHKFIJIK@HATUP4@			; `string'
PUBLIC	??_C@_08JHIPKGFN@HATDOWN4@			; `string'
PUBLIC	??_C@_08MIHICKMN@HATLEFT4@			; `string'
PUBLIC	??_C@_09HBGMBIIP@HATRIGHT4@			; `string'
PUBLIC	??_C@_09EHOHMIBO@DBLMOUSE1@			; `string'
PUBLIC	??_C@_09GMMKJLNN@DBLMOUSE2@			; `string'
PUBLIC	??_C@_09HFNBKKJM@DBLMOUSE3@			; `string'
PUBLIC	??_C@_09DKJADMFL@DBLMOUSE4@			; `string'
PUBLIC	??_C@_09CDILANBK@DBLMOUSE5@			; `string'
PUBLIC	??_C@_09IKGFONJ@DBLMOUSE6@			; `string'
PUBLIC	??_C@_09BBLNGPJI@DBLMOUSE7@			; `string'
PUBLIC	??_C@_09JGCFHDFH@DBLMOUSE8@			; `string'
PUBLIC	??_C@_0O@FIHNOIH@DBLSEC_MOUSE2@			; `string'
PUBLIC	??_C@_0O@COKKINEE@DBLSEC_MOUSE1@		; `string'
PUBLIC	??_C@_0O@BMJMOPMG@DBLSEC_MOUSE3@		; `string'
PUBLIC	??_C@_0O@FDNNHJAB@DBLSEC_MOUSE4@		; `string'
PUBLIC	??_C@_0O@EKMGEIEA@DBLSEC_MOUSE5@		; `string'
PUBLIC	??_C@_0O@GBOLBLID@DBLSEC_MOUSE6@		; `string'
PUBLIC	??_C@_0O@HIPACKMC@DBLSEC_MOUSE7@		; `string'
PUBLIC	??_C@_0O@PPGIDGAN@DBLSEC_MOUSE8@		; `string'
PUBLIC	??_C@_07OIAAFIMI@DBLJOY1@			; `string'
PUBLIC	??_C@_07MDCNALAL@DBLJOY2@			; `string'
PUBLIC	??_C@_07NKDGDKEK@DBLJOY3@			; `string'
PUBLIC	??_C@_07JFHHKMIN@DBLJOY4@			; `string'
PUBLIC	??_C@_07IMGMJNMM@DBLJOY5@			; `string'
PUBLIC	??_C@_07KHEBMOAP@DBLJOY6@			; `string'
PUBLIC	??_C@_07LOFKPPEO@DBLJOY7@			; `string'
PUBLIC	??_C@_07DJMCODIB@DBLJOY8@			; `string'
PUBLIC	??_C@_07CANJNCMA@DBLJOY9@			; `string'
PUBLIC	??_C@_08EKBBHMCJ@DBLJOY10@			; `string'
PUBLIC	??_C@_08FDAKENGI@DBLJOY11@			; `string'
PUBLIC	??_C@_08HICHBOKL@DBLJOY12@			; `string'
PUBLIC	??_C@_08GBDMCPOK@DBLJOY13@			; `string'
PUBLIC	??_C@_08COHNLJCN@DBLJOY14@			; `string'
PUBLIC	??_C@_08DHGGIIGM@DBLJOY15@			; `string'
PUBLIC	??_C@_08BMELNLKP@DBLJOY16@			; `string'
PUBLIC	??_C@_08FFAOKOO@DBLJOY17@			; `string'
PUBLIC	??_C@_08ICMIPGCB@DBLJOY18@			; `string'
PUBLIC	??_C@_08JLNDMHGA@DBLJOY19@			; `string'
PUBLIC	??_C@_08EIFHMCHA@DBLJOY20@			; `string'
PUBLIC	??_C@_08FBEMPDDB@DBLJOY21@			; `string'
PUBLIC	??_C@_08HKGBKAPC@DBLJOY22@			; `string'
PUBLIC	??_C@_08GDHKJBLD@DBLJOY23@			; `string'
PUBLIC	??_C@_08CMDLAHHE@DBLJOY24@			; `string'
PUBLIC	??_C@_08DFCADGDF@DBLJOY25@			; `string'
PUBLIC	??_C@_08BOANGFPG@DBLJOY26@			; `string'
PUBLIC	??_C@_08HBGFELH@DBLJOY27@			; `string'
PUBLIC	??_C@_08IAIOEIHI@DBLJOY28@			; `string'
PUBLIC	??_C@_08JJJFHJDJ@DBLJOY29@			; `string'
PUBLIC	??_C@_08EJJFKIEH@DBLJOY30@			; `string'
PUBLIC	??_C@_08FAIOJJAG@DBLJOY31@			; `string'
PUBLIC	??_C@_08HLKDMKMF@DBLJOY32@			; `string'
PUBLIC	??_C@_08GAKALDMF@DBLHATUP@			; `string'
PUBLIC	??_C@_0L@LGBGACNI@DBLHATDOWN@			; `string'
PUBLIC	??_C@_0L@EEBCJKOB@DBLHATLEFT@			; `string'
PUBLIC	??_C@_0M@FIDCOLLP@DBLHATRIGHT@			; `string'
PUBLIC	??_C@_09GBOMCPN@DBLHATUP2@			; `string'
PUBLIC	??_C@_0M@GFMOBIJF@DBLHATDOWN2@			; `string'
PUBLIC	??_C@_0M@DKDJJEAF@DBLHATLEFT2@			; `string'
PUBLIC	??_C@_0N@LGPGMIIH@DBLHATRIGHT2@			; `string'
PUBLIC	??_C@_09BPAFPDLM@DBLHATUP3@			; `string'
PUBLIC	??_C@_0M@HMNFCJNE@DBLHATDOWN3@			; `string'
PUBLIC	??_C@_0M@CDCCKFEE@DBLHATLEFT3@			; `string'
PUBLIC	??_C@_0N@KPONPJMG@DBLHATRIGHT3@			; `string'
PUBLIC	??_C@_09FAEEGFHL@DBLHATUP4@			; `string'
PUBLIC	??_C@_0M@DDJELPBD@DBLHATDOWN4@			; `string'
PUBLIC	??_C@_0M@GMGDDDID@DBLHATLEFT4@			; `string'
PUBLIC	??_C@_0N@OAKMGPAB@DBLHATRIGHT4@			; `string'
PUBLIC	??_C@_08MPGLJFKD@SEC_JOY1@			; `string'
PUBLIC	??_C@_08OEEGMGGA@SEC_JOY2@			; `string'
PUBLIC	??_C@_08PNFNPHCB@SEC_JOY3@			; `string'
PUBLIC	??_C@_08LCBMGBOG@SEC_JOY4@			; `string'
PUBLIC	??_C@_08KLAHFAKH@SEC_JOY5@			; `string'
PUBLIC	??_C@_08IACKADGE@SEC_JOY6@			; `string'
PUBLIC	??_C@_08JJDBDCCF@SEC_JOY7@			; `string'
PUBLIC	??_C@_08BOKJCOOK@SEC_JOY8@			; `string'
PUBLIC	??_C@_08HLCBPKL@SEC_JOY9@			; `string'
PUBLIC	??_C@_09JAFGKPDE@SEC_JOY10@			; `string'
PUBLIC	??_C@_09IJENJOHF@SEC_JOY11@			; `string'
PUBLIC	??_C@_09KCGAMNLG@SEC_JOY12@			; `string'
PUBLIC	??_C@_09LLHLPMPH@SEC_JOY13@			; `string'
PUBLIC	??_C@_09PEDKGKDA@SEC_JOY14@			; `string'
PUBLIC	??_C@_09ONCBFLHB@SEC_JOY15@			; `string'
PUBLIC	??_C@_09MGAMAILC@SEC_JOY16@			; `string'
PUBLIC	??_C@_09NPBHDJPD@SEC_JOY17@			; `string'
PUBLIC	??_C@_09FIIPCFDM@SEC_JOY18@			; `string'
PUBLIC	??_C@_09EBJEBEHN@SEC_JOY19@			; `string'
PUBLIC	??_C@_09JCBABBGN@SEC_JOY20@			; `string'
PUBLIC	??_C@_09ILALCACM@SEC_JOY21@			; `string'
PUBLIC	??_C@_09KACGHDOP@SEC_JOY22@			; `string'
PUBLIC	??_C@_09LJDNECKO@SEC_JOY23@			; `string'
PUBLIC	??_C@_09PGHMNEGJ@SEC_JOY24@			; `string'
PUBLIC	??_C@_09OPGHOFCI@SEC_JOY25@			; `string'
PUBLIC	??_C@_09MEEKLGOL@SEC_JOY26@			; `string'
PUBLIC	??_C@_09NNFBIHKK@SEC_JOY27@			; `string'
PUBLIC	??_C@_09FKMJJLGF@SEC_JOY28@			; `string'
PUBLIC	??_C@_09EDNCKKCE@SEC_JOY29@			; `string'
PUBLIC	??_C@_09JDNCHLFK@SEC_JOY30@			; `string'
PUBLIC	??_C@_09IKMJEKBL@SEC_JOY31@			; `string'
PUBLIC	??_C@_09KBOEBJNI@SEC_JOY32@			; `string'
PUBLIC	??_C@_09LKOHGANI@SEC_HATUP@			; `string'
PUBLIC	??_C@_0M@FGKADHON@SEC_HATDOWN@			; `string'
PUBLIC	??_C@_0M@KEKEKPNE@SEC_HATLEFT@			; `string'
PUBLIC	??_C@_0N@OGBJJKJ@SEC_HATRIGHT@			; `string'
PUBLIC	??_C@_0L@GFMCOJPH@SEC_HATUP2@			; `string'
PUBLIC	??_C@_0N@DDJNGKID@SEC_HATDOWN2@			; `string'
PUBLIC	??_C@_0N@GMGKOGBD@SEC_HATLEFT2@			; `string'
PUBLIC	??_C@_0O@ECHECOKE@SEC_HATRIGHT2@		; `string'
PUBLIC	??_C@_0L@HMNJNILG@SEC_HATUP3@			; `string'
PUBLIC	??_C@_0N@CKIGFLMC@SEC_HATDOWN3@			; `string'
PUBLIC	??_C@_0N@HFHBNHFC@SEC_HATLEFT3@			; `string'
PUBLIC	??_C@_0O@FLGPBPOF@SEC_HATRIGHT3@		; `string'
PUBLIC	??_C@_0L@DDJIEOHB@SEC_HATUP4@			; `string'
PUBLIC	??_C@_0N@GFMHMNAF@SEC_HATDOWN4@			; `string'
PUBLIC	??_C@_0N@DKDAEBJF@SEC_HATLEFT4@			; `string'
PUBLIC	??_C@_0O@BECOIJCC@SEC_HATRIGHT4@		; `string'
PUBLIC	??_C@_0M@GLHAIMON@DBLSEC_JOY1@			; `string'
PUBLIC	??_C@_0M@EAFNNPCO@DBLSEC_JOY2@			; `string'
PUBLIC	??_C@_0M@FJEGOOGP@DBLSEC_JOY3@			; `string'
PUBLIC	??_C@_0M@BGAHHIKI@DBLSEC_JOY4@			; `string'
PUBLIC	??_C@_0M@PBMEJOJ@DBLSEC_JOY5@			; `string'
PUBLIC	??_C@_0M@CEDBBKCK@DBLSEC_JOY6@			; `string'
PUBLIC	??_C@_0M@DNCKCLGL@DBLSEC_JOY7@			; `string'
PUBLIC	??_C@_0M@LKLCDHKE@DBLSEC_JOY8@			; `string'
PUBLIC	??_C@_0M@KDKJAGOF@DBLSEC_JOY9@			; `string'
PUBLIC	??_C@_0N@BJGNILK@DBLSEC_JOY10@			; `string'
PUBLIC	??_C@_0N@BIINOJPL@DBLSEC_JOY11@			; `string'
PUBLIC	??_C@_0N@DDKALKDI@DBLSEC_JOY12@			; `string'
PUBLIC	??_C@_0N@CKLLILHJ@DBLSEC_JOY13@			; `string'
PUBLIC	??_C@_0N@GFPKBNLO@DBLSEC_JOY14@			; `string'
PUBLIC	??_C@_0N@HMOBCMPP@DBLSEC_JOY15@			; `string'
PUBLIC	??_C@_0N@FHMMHPDM@DBLSEC_JOY16@			; `string'
PUBLIC	??_C@_0N@EONHEOHN@DBLSEC_JOY17@			; `string'
PUBLIC	??_C@_0N@MJEPFCLC@DBLSEC_JOY18@			; `string'
PUBLIC	??_C@_0N@NAFEGDPD@DBLSEC_JOY19@			; `string'
PUBLIC	??_C@_0N@DNAGGOD@DBLSEC_JOY20@			; `string'
PUBLIC	??_C@_0N@BKMLFHKC@DBLSEC_JOY21@			; `string'
PUBLIC	??_C@_0N@DBOGAEGB@DBLSEC_JOY22@			; `string'
PUBLIC	??_C@_0N@CIPNDFCA@DBLSEC_JOY23@			; `string'
PUBLIC	??_C@_0N@GHLMKDOH@DBLSEC_JOY24@			; `string'
PUBLIC	??_C@_0N@HOKHJCKG@DBLSEC_JOY25@			; `string'
PUBLIC	??_C@_0N@FFIKMBGF@DBLSEC_JOY26@			; `string'
PUBLIC	??_C@_0N@EMJBPACE@DBLSEC_JOY27@			; `string'
PUBLIC	??_C@_0N@MLAJOMOL@DBLSEC_JOY28@			; `string'
PUBLIC	??_C@_0N@NCBCNNKK@DBLSEC_JOY29@			; `string'
PUBLIC	??_C@_0N@CBCAMNE@DBLSEC_JOY30@			; `string'
PUBLIC	??_C@_0N@BLAJDNJF@DBLSEC_JOY31@			; `string'
PUBLIC	??_C@_0N@DACEGOFG@DBLSEC_JOY32@			; `string'
PUBLIC	??_C@_0N@CLCHBHFG@DBLSEC_HATUP@			; `string'
PUBLIC	??_C@_0P@DNMBPHHH@DBLSEC_HATDOWN@		; `string'
PUBLIC	??_C@_0P@MPMFGPEO@DBLSEC_HATLEFT@		; `string'
PUBLIC	??_C@_0BA@BONAICDD@DBLSEC_HATRIGHT@		; `string'
PUBLIC	??_C@_0O@GPFDIHKH@DBLSEC_HATUP2@		; `string'
PUBLIC	??_C@_0BA@CDCMHBBJ@DBLSEC_HATDOWN2@		; `string'
PUBLIC	??_C@_0BA@HMNLPNIJ@DBLSEC_HATLEFT2@		; `string'
PUBLIC	??_C@_0BB@FCLOOFOF@DBLSEC_HATRIGHT2@		; `string'
PUBLIC	??_C@_0O@HGEILGOG@DBLSEC_HATUP3@		; `string'
PUBLIC	??_C@_0BA@DKDHEAFI@DBLSEC_HATDOWN3@		; `string'
PUBLIC	??_C@_0BA@GFMAMMMI@DBLSEC_HATLEFT3@		; `string'
PUBLIC	??_C@_0BB@ELKFNEKE@DBLSEC_HATRIGHT3@		; `string'
PUBLIC	??_C@_0O@DJAJCACB@DBLSEC_HATUP4@		; `string'
PUBLIC	??_C@_0BA@HFHGNGJP@DBLSEC_HATDOWN4@		; `string'
PUBLIC	??_C@_0BA@CKIBFKAP@DBLSEC_HATLEFT4@		; `string'
PUBLIC	??_C@_0BB@EOEECGD@DBLSEC_HATRIGHT4@		; `string'
PUBLIC	??_C@_07DFGIHOIL@nothing@			; `string'
PUBLIC	??_C@_07CJMBKHEI@forward@			; `string'
PUBLIC	??_C@_08DBMDPFJD@backward@			; `string'
PUBLIC	??_C@_06HLPIKOFJ@strafe@			; `string'
PUBLIC	??_C@_0M@JGAFBBPP@straferight@			; `string'
PUBLIC	??_C@_0L@CJGCGFFO@strafeleft@			; `string'
PUBLIC	??_C@_08EODDNPEJ@turnleft@			; `string'
PUBLIC	??_C@_09BFLBMFIC@turnright@			; `string'
PUBLIC	??_C@_0L@OHKMNLAB@weaponnext@			; `string'
PUBLIC	??_C@_0L@NDHKMPGF@weaponprev@			; `string'
PUBLIC	??_C@_0L@NMLDGKPF@normalring@			; `string'
PUBLIC	??_C@_08PKBCLIJJ@autoring@			; `string'
PUBLIC	??_C@_0L@IMNHNCPJ@bouncering@			; `string'
PUBLIC	??_C@_0M@JHBFCHLE@scatterring@			; `string'
PUBLIC	??_C@_0M@ELIJIEHB@grenadering@			; `string'
PUBLIC	??_C@_0O@HMOGBEKJ@explosionring@		; `string'
PUBLIC	??_C@_08BHDDHGFM@railring@			; `string'
PUBLIC	??_C@_04CGHOBBFK@fire@				; `string'
PUBLIC	??_C@_0L@KPJNOLKE@firenormal@			; `string'
PUBLIC	??_C@_08OJGPOIGH@tossflag@			; `string'
PUBLIC	??_C@_03MMGHDJKG@use@				; `string'
PUBLIC	??_C@_05CPCHEFAA@taunt@				; `string'
PUBLIC	??_C@_07KCBEKAG@camleft@			; `string'
PUBLIC	??_C@_08PDJGILBG@camright@			; `string'
PUBLIC	??_C@_08OBMFDFIM@camreset@			; `string'
PUBLIC	??_C@_06FNGHPIEM@lookup@			; `string'
PUBLIC	??_C@_08BAJAOGEH@lookdown@			; `string'
PUBLIC	??_C@_0L@FHIBDANG@centerview@			; `string'
PUBLIC	??_C@_0M@PNPNCAGH@mouseaiming@			; `string'
PUBLIC	??_C@_07FCBEMKKG@talkkey@			; `string'
PUBLIC	??_C@_0M@NJCFFKOM@teamtalkkey@			; `string'
PUBLIC	??_C@_06KBCJDMLG@scores@			; `string'
PUBLIC	??_C@_04NJIOBGCF@jump@				; `string'
PUBLIC	??_C@_07PMJAFAE@console@			; `string'
PUBLIC	??_C@_05PDJBBECF@pause@				; `string'
EXTRN	_CV_YesNo:BYTE
_DATA	SEGMENT
COMM	_ATTRPACK:DWORD
COMM	_mousex:DWORD
COMM	_mousey:DWORD
COMM	_mlooky:DWORD
COMM	_mouse2x:DWORD
COMM	_mouse2y:DWORD
COMM	_mlook2y:DWORD
COMM	_joyxmove:DWORD:04H
COMM	_joyymove:DWORD:04H
COMM	_joy2xmove:DWORD:04H
COMM	_joy2ymove:DWORD:04H
COMM	_gamekeydown:BYTE:01e4H
COMM	_gamecontrol:DWORD:046H
COMM	_gamecontrolbis:DWORD:046H
_DATA	ENDS
;	COMDAT ??_C@_05PDJBBECF@pause@
CONST	SEGMENT
??_C@_05PDJBBECF@pause@ DB 'pause', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07PMJAFAE@console@
CONST	SEGMENT
??_C@_07PMJAFAE@console@ DB 'console', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NJIOBGCF@jump@
CONST	SEGMENT
??_C@_04NJIOBGCF@jump@ DB 'jump', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06KBCJDMLG@scores@
CONST	SEGMENT
??_C@_06KBCJDMLG@scores@ DB 'scores', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NJCFFKOM@teamtalkkey@
CONST	SEGMENT
??_C@_0M@NJCFFKOM@teamtalkkey@ DB 'teamtalkkey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FCBEMKKG@talkkey@
CONST	SEGMENT
??_C@_07FCBEMKKG@talkkey@ DB 'talkkey', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PNPNCAGH@mouseaiming@
CONST	SEGMENT
??_C@_0M@PNPNCAGH@mouseaiming@ DB 'mouseaiming', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FHIBDANG@centerview@
CONST	SEGMENT
??_C@_0L@FHIBDANG@centerview@ DB 'centerview', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BAJAOGEH@lookdown@
CONST	SEGMENT
??_C@_08BAJAOGEH@lookdown@ DB 'lookdown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FNGHPIEM@lookup@
CONST	SEGMENT
??_C@_06FNGHPIEM@lookup@ DB 'lookup', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OBMFDFIM@camreset@
CONST	SEGMENT
??_C@_08OBMFDFIM@camreset@ DB 'camreset', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PDJGILBG@camright@
CONST	SEGMENT
??_C@_08PDJGILBG@camright@ DB 'camright', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KCBEKAG@camleft@
CONST	SEGMENT
??_C@_07KCBEKAG@camleft@ DB 'camleft', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CPCHEFAA@taunt@
CONST	SEGMENT
??_C@_05CPCHEFAA@taunt@ DB 'taunt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MMGHDJKG@use@
CONST	SEGMENT
??_C@_03MMGHDJKG@use@ DB 'use', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08OJGPOIGH@tossflag@
CONST	SEGMENT
??_C@_08OJGPOIGH@tossflag@ DB 'tossflag', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KPJNOLKE@firenormal@
CONST	SEGMENT
??_C@_0L@KPJNOLKE@firenormal@ DB 'firenormal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGHOBBFK@fire@
CONST	SEGMENT
??_C@_04CGHOBBFK@fire@ DB 'fire', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08BHDDHGFM@railring@
CONST	SEGMENT
??_C@_08BHDDHGFM@railring@ DB 'railring', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HMOGBEKJ@explosionring@
CONST	SEGMENT
??_C@_0O@HMOGBEKJ@explosionring@ DB 'explosionring', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ELIJIEHB@grenadering@
CONST	SEGMENT
??_C@_0M@ELIJIEHB@grenadering@ DB 'grenadering', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JHBFCHLE@scatterring@
CONST	SEGMENT
??_C@_0M@JHBFCHLE@scatterring@ DB 'scatterring', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IMNHNCPJ@bouncering@
CONST	SEGMENT
??_C@_0L@IMNHNCPJ@bouncering@ DB 'bouncering', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PKBCLIJJ@autoring@
CONST	SEGMENT
??_C@_08PKBCLIJJ@autoring@ DB 'autoring', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NMLDGKPF@normalring@
CONST	SEGMENT
??_C@_0L@NMLDGKPF@normalring@ DB 'normalring', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NDHKMPGF@weaponprev@
CONST	SEGMENT
??_C@_0L@NDHKMPGF@weaponprev@ DB 'weaponprev', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OHKMNLAB@weaponnext@
CONST	SEGMENT
??_C@_0L@OHKMNLAB@weaponnext@ DB 'weaponnext', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BFLBMFIC@turnright@
CONST	SEGMENT
??_C@_09BFLBMFIC@turnright@ DB 'turnright', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EODDNPEJ@turnleft@
CONST	SEGMENT
??_C@_08EODDNPEJ@turnleft@ DB 'turnleft', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CJGCGFFO@strafeleft@
CONST	SEGMENT
??_C@_0L@CJGCGFFO@strafeleft@ DB 'strafeleft', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JGAFBBPP@straferight@
CONST	SEGMENT
??_C@_0M@JGAFBBPP@straferight@ DB 'straferight', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HLPIKOFJ@strafe@
CONST	SEGMENT
??_C@_06HLPIKOFJ@strafe@ DB 'strafe', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DBMDPFJD@backward@
CONST	SEGMENT
??_C@_08DBMDPFJD@backward@ DB 'backward', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CJMBKHEI@forward@
CONST	SEGMENT
??_C@_07CJMBKHEI@forward@ DB 'forward', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DFGIHOIL@nothing@
CONST	SEGMENT
??_C@_07DFGIHOIL@nothing@ DB 'nothing', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EOEECGD@DBLSEC_HATRIGHT4@
CONST	SEGMENT
??_C@_0BB@EOEECGD@DBLSEC_HATRIGHT4@ DB 'DBLSEC_HATRIGHT4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CKIBFKAP@DBLSEC_HATLEFT4@
CONST	SEGMENT
??_C@_0BA@CKIBFKAP@DBLSEC_HATLEFT4@ DB 'DBLSEC_HATLEFT4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HFHGNGJP@DBLSEC_HATDOWN4@
CONST	SEGMENT
??_C@_0BA@HFHGNGJP@DBLSEC_HATDOWN4@ DB 'DBLSEC_HATDOWN4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DJAJCACB@DBLSEC_HATUP4@
CONST	SEGMENT
??_C@_0O@DJAJCACB@DBLSEC_HATUP4@ DB 'DBLSEC_HATUP4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ELKFNEKE@DBLSEC_HATRIGHT3@
CONST	SEGMENT
??_C@_0BB@ELKFNEKE@DBLSEC_HATRIGHT3@ DB 'DBLSEC_HATRIGHT3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GFMAMMMI@DBLSEC_HATLEFT3@
CONST	SEGMENT
??_C@_0BA@GFMAMMMI@DBLSEC_HATLEFT3@ DB 'DBLSEC_HATLEFT3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DKDHEAFI@DBLSEC_HATDOWN3@
CONST	SEGMENT
??_C@_0BA@DKDHEAFI@DBLSEC_HATDOWN3@ DB 'DBLSEC_HATDOWN3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HGEILGOG@DBLSEC_HATUP3@
CONST	SEGMENT
??_C@_0O@HGEILGOG@DBLSEC_HATUP3@ DB 'DBLSEC_HATUP3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCLOOFOF@DBLSEC_HATRIGHT2@
CONST	SEGMENT
??_C@_0BB@FCLOOFOF@DBLSEC_HATRIGHT2@ DB 'DBLSEC_HATRIGHT2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HMNLPNIJ@DBLSEC_HATLEFT2@
CONST	SEGMENT
??_C@_0BA@HMNLPNIJ@DBLSEC_HATLEFT2@ DB 'DBLSEC_HATLEFT2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CDCMHBBJ@DBLSEC_HATDOWN2@
CONST	SEGMENT
??_C@_0BA@CDCMHBBJ@DBLSEC_HATDOWN2@ DB 'DBLSEC_HATDOWN2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GPFDIHKH@DBLSEC_HATUP2@
CONST	SEGMENT
??_C@_0O@GPFDIHKH@DBLSEC_HATUP2@ DB 'DBLSEC_HATUP2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BONAICDD@DBLSEC_HATRIGHT@
CONST	SEGMENT
??_C@_0BA@BONAICDD@DBLSEC_HATRIGHT@ DB 'DBLSEC_HATRIGHT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MPMFGPEO@DBLSEC_HATLEFT@
CONST	SEGMENT
??_C@_0P@MPMFGPEO@DBLSEC_HATLEFT@ DB 'DBLSEC_HATLEFT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DNMBPHHH@DBLSEC_HATDOWN@
CONST	SEGMENT
??_C@_0P@DNMBPHHH@DBLSEC_HATDOWN@ DB 'DBLSEC_HATDOWN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CLCHBHFG@DBLSEC_HATUP@
CONST	SEGMENT
??_C@_0N@CLCHBHFG@DBLSEC_HATUP@ DB 'DBLSEC_HATUP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DACEGOFG@DBLSEC_JOY32@
CONST	SEGMENT
??_C@_0N@DACEGOFG@DBLSEC_JOY32@ DB 'DBLSEC_JOY32', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BLAJDNJF@DBLSEC_JOY31@
CONST	SEGMENT
??_C@_0N@BLAJDNJF@DBLSEC_JOY31@ DB 'DBLSEC_JOY31', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CBCAMNE@DBLSEC_JOY30@
CONST	SEGMENT
??_C@_0N@CBCAMNE@DBLSEC_JOY30@ DB 'DBLSEC_JOY30', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NCBCNNKK@DBLSEC_JOY29@
CONST	SEGMENT
??_C@_0N@NCBCNNKK@DBLSEC_JOY29@ DB 'DBLSEC_JOY29', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MLAJOMOL@DBLSEC_JOY28@
CONST	SEGMENT
??_C@_0N@MLAJOMOL@DBLSEC_JOY28@ DB 'DBLSEC_JOY28', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EMJBPACE@DBLSEC_JOY27@
CONST	SEGMENT
??_C@_0N@EMJBPACE@DBLSEC_JOY27@ DB 'DBLSEC_JOY27', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FFIKMBGF@DBLSEC_JOY26@
CONST	SEGMENT
??_C@_0N@FFIKMBGF@DBLSEC_JOY26@ DB 'DBLSEC_JOY26', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HOKHJCKG@DBLSEC_JOY25@
CONST	SEGMENT
??_C@_0N@HOKHJCKG@DBLSEC_JOY25@ DB 'DBLSEC_JOY25', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GHLMKDOH@DBLSEC_JOY24@
CONST	SEGMENT
??_C@_0N@GHLMKDOH@DBLSEC_JOY24@ DB 'DBLSEC_JOY24', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CIPNDFCA@DBLSEC_JOY23@
CONST	SEGMENT
??_C@_0N@CIPNDFCA@DBLSEC_JOY23@ DB 'DBLSEC_JOY23', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DBOGAEGB@DBLSEC_JOY22@
CONST	SEGMENT
??_C@_0N@DBOGAEGB@DBLSEC_JOY22@ DB 'DBLSEC_JOY22', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BKMLFHKC@DBLSEC_JOY21@
CONST	SEGMENT
??_C@_0N@BKMLFHKC@DBLSEC_JOY21@ DB 'DBLSEC_JOY21', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DNAGGOD@DBLSEC_JOY20@
CONST	SEGMENT
??_C@_0N@DNAGGOD@DBLSEC_JOY20@ DB 'DBLSEC_JOY20', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NAFEGDPD@DBLSEC_JOY19@
CONST	SEGMENT
??_C@_0N@NAFEGDPD@DBLSEC_JOY19@ DB 'DBLSEC_JOY19', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MJEPFCLC@DBLSEC_JOY18@
CONST	SEGMENT
??_C@_0N@MJEPFCLC@DBLSEC_JOY18@ DB 'DBLSEC_JOY18', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EONHEOHN@DBLSEC_JOY17@
CONST	SEGMENT
??_C@_0N@EONHEOHN@DBLSEC_JOY17@ DB 'DBLSEC_JOY17', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHMMHPDM@DBLSEC_JOY16@
CONST	SEGMENT
??_C@_0N@FHMMHPDM@DBLSEC_JOY16@ DB 'DBLSEC_JOY16', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HMOBCMPP@DBLSEC_JOY15@
CONST	SEGMENT
??_C@_0N@HMOBCMPP@DBLSEC_JOY15@ DB 'DBLSEC_JOY15', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GFPKBNLO@DBLSEC_JOY14@
CONST	SEGMENT
??_C@_0N@GFPKBNLO@DBLSEC_JOY14@ DB 'DBLSEC_JOY14', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CKLLILHJ@DBLSEC_JOY13@
CONST	SEGMENT
??_C@_0N@CKLLILHJ@DBLSEC_JOY13@ DB 'DBLSEC_JOY13', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DDKALKDI@DBLSEC_JOY12@
CONST	SEGMENT
??_C@_0N@DDKALKDI@DBLSEC_JOY12@ DB 'DBLSEC_JOY12', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BIINOJPL@DBLSEC_JOY11@
CONST	SEGMENT
??_C@_0N@BIINOJPL@DBLSEC_JOY11@ DB 'DBLSEC_JOY11', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BJGNILK@DBLSEC_JOY10@
CONST	SEGMENT
??_C@_0N@BJGNILK@DBLSEC_JOY10@ DB 'DBLSEC_JOY10', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KDKJAGOF@DBLSEC_JOY9@
CONST	SEGMENT
??_C@_0M@KDKJAGOF@DBLSEC_JOY9@ DB 'DBLSEC_JOY9', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LKLCDHKE@DBLSEC_JOY8@
CONST	SEGMENT
??_C@_0M@LKLCDHKE@DBLSEC_JOY8@ DB 'DBLSEC_JOY8', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DNCKCLGL@DBLSEC_JOY7@
CONST	SEGMENT
??_C@_0M@DNCKCLGL@DBLSEC_JOY7@ DB 'DBLSEC_JOY7', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEDBBKCK@DBLSEC_JOY6@
CONST	SEGMENT
??_C@_0M@CEDBBKCK@DBLSEC_JOY6@ DB 'DBLSEC_JOY6', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PBMEJOJ@DBLSEC_JOY5@
CONST	SEGMENT
??_C@_0M@PBMEJOJ@DBLSEC_JOY5@ DB 'DBLSEC_JOY5', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BGAHHIKI@DBLSEC_JOY4@
CONST	SEGMENT
??_C@_0M@BGAHHIKI@DBLSEC_JOY4@ DB 'DBLSEC_JOY4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FJEGOOGP@DBLSEC_JOY3@
CONST	SEGMENT
??_C@_0M@FJEGOOGP@DBLSEC_JOY3@ DB 'DBLSEC_JOY3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EAFNNPCO@DBLSEC_JOY2@
CONST	SEGMENT
??_C@_0M@EAFNNPCO@DBLSEC_JOY2@ DB 'DBLSEC_JOY2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GLHAIMON@DBLSEC_JOY1@
CONST	SEGMENT
??_C@_0M@GLHAIMON@DBLSEC_JOY1@ DB 'DBLSEC_JOY1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BECOIJCC@SEC_HATRIGHT4@
CONST	SEGMENT
??_C@_0O@BECOIJCC@SEC_HATRIGHT4@ DB 'SEC_HATRIGHT4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DKDAEBJF@SEC_HATLEFT4@
CONST	SEGMENT
??_C@_0N@DKDAEBJF@SEC_HATLEFT4@ DB 'SEC_HATLEFT4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GFMHMNAF@SEC_HATDOWN4@
CONST	SEGMENT
??_C@_0N@GFMHMNAF@SEC_HATDOWN4@ DB 'SEC_HATDOWN4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DDJIEOHB@SEC_HATUP4@
CONST	SEGMENT
??_C@_0L@DDJIEOHB@SEC_HATUP4@ DB 'SEC_HATUP4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FLGPBPOF@SEC_HATRIGHT3@
CONST	SEGMENT
??_C@_0O@FLGPBPOF@SEC_HATRIGHT3@ DB 'SEC_HATRIGHT3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HFHBNHFC@SEC_HATLEFT3@
CONST	SEGMENT
??_C@_0N@HFHBNHFC@SEC_HATLEFT3@ DB 'SEC_HATLEFT3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CKIGFLMC@SEC_HATDOWN3@
CONST	SEGMENT
??_C@_0N@CKIGFLMC@SEC_HATDOWN3@ DB 'SEC_HATDOWN3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HMNJNILG@SEC_HATUP3@
CONST	SEGMENT
??_C@_0L@HMNJNILG@SEC_HATUP3@ DB 'SEC_HATUP3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ECHECOKE@SEC_HATRIGHT2@
CONST	SEGMENT
??_C@_0O@ECHECOKE@SEC_HATRIGHT2@ DB 'SEC_HATRIGHT2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GMGKOGBD@SEC_HATLEFT2@
CONST	SEGMENT
??_C@_0N@GMGKOGBD@SEC_HATLEFT2@ DB 'SEC_HATLEFT2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DDJNGKID@SEC_HATDOWN2@
CONST	SEGMENT
??_C@_0N@DDJNGKID@SEC_HATDOWN2@ DB 'SEC_HATDOWN2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GFMCOJPH@SEC_HATUP2@
CONST	SEGMENT
??_C@_0L@GFMCOJPH@SEC_HATUP2@ DB 'SEC_HATUP2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OGBJJKJ@SEC_HATRIGHT@
CONST	SEGMENT
??_C@_0N@OGBJJKJ@SEC_HATRIGHT@ DB 'SEC_HATRIGHT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KEKEKPNE@SEC_HATLEFT@
CONST	SEGMENT
??_C@_0M@KEKEKPNE@SEC_HATLEFT@ DB 'SEC_HATLEFT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FGKADHON@SEC_HATDOWN@
CONST	SEGMENT
??_C@_0M@FGKADHON@SEC_HATDOWN@ DB 'SEC_HATDOWN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LKOHGANI@SEC_HATUP@
CONST	SEGMENT
??_C@_09LKOHGANI@SEC_HATUP@ DB 'SEC_HATUP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KBOEBJNI@SEC_JOY32@
CONST	SEGMENT
??_C@_09KBOEBJNI@SEC_JOY32@ DB 'SEC_JOY32', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09IKMJEKBL@SEC_JOY31@
CONST	SEGMENT
??_C@_09IKMJEKBL@SEC_JOY31@ DB 'SEC_JOY31', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JDNCHLFK@SEC_JOY30@
CONST	SEGMENT
??_C@_09JDNCHLFK@SEC_JOY30@ DB 'SEC_JOY30', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09EDNCKKCE@SEC_JOY29@
CONST	SEGMENT
??_C@_09EDNCKKCE@SEC_JOY29@ DB 'SEC_JOY29', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FKMJJLGF@SEC_JOY28@
CONST	SEGMENT
??_C@_09FKMJJLGF@SEC_JOY28@ DB 'SEC_JOY28', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NNFBIHKK@SEC_JOY27@
CONST	SEGMENT
??_C@_09NNFBIHKK@SEC_JOY27@ DB 'SEC_JOY27', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MEEKLGOL@SEC_JOY26@
CONST	SEGMENT
??_C@_09MEEKLGOL@SEC_JOY26@ DB 'SEC_JOY26', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09OPGHOFCI@SEC_JOY25@
CONST	SEGMENT
??_C@_09OPGHOFCI@SEC_JOY25@ DB 'SEC_JOY25', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09PGHMNEGJ@SEC_JOY24@
CONST	SEGMENT
??_C@_09PGHMNEGJ@SEC_JOY24@ DB 'SEC_JOY24', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LJDNECKO@SEC_JOY23@
CONST	SEGMENT
??_C@_09LJDNECKO@SEC_JOY23@ DB 'SEC_JOY23', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KACGHDOP@SEC_JOY22@
CONST	SEGMENT
??_C@_09KACGHDOP@SEC_JOY22@ DB 'SEC_JOY22', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09ILALCACM@SEC_JOY21@
CONST	SEGMENT
??_C@_09ILALCACM@SEC_JOY21@ DB 'SEC_JOY21', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JCBABBGN@SEC_JOY20@
CONST	SEGMENT
??_C@_09JCBABBGN@SEC_JOY20@ DB 'SEC_JOY20', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09EBJEBEHN@SEC_JOY19@
CONST	SEGMENT
??_C@_09EBJEBEHN@SEC_JOY19@ DB 'SEC_JOY19', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FIIPCFDM@SEC_JOY18@
CONST	SEGMENT
??_C@_09FIIPCFDM@SEC_JOY18@ DB 'SEC_JOY18', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NPBHDJPD@SEC_JOY17@
CONST	SEGMENT
??_C@_09NPBHDJPD@SEC_JOY17@ DB 'SEC_JOY17', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MGAMAILC@SEC_JOY16@
CONST	SEGMENT
??_C@_09MGAMAILC@SEC_JOY16@ DB 'SEC_JOY16', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09ONCBFLHB@SEC_JOY15@
CONST	SEGMENT
??_C@_09ONCBFLHB@SEC_JOY15@ DB 'SEC_JOY15', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09PEDKGKDA@SEC_JOY14@
CONST	SEGMENT
??_C@_09PEDKGKDA@SEC_JOY14@ DB 'SEC_JOY14', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LLHLPMPH@SEC_JOY13@
CONST	SEGMENT
??_C@_09LLHLPMPH@SEC_JOY13@ DB 'SEC_JOY13', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KCGAMNLG@SEC_JOY12@
CONST	SEGMENT
??_C@_09KCGAMNLG@SEC_JOY12@ DB 'SEC_JOY12', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09IJENJOHF@SEC_JOY11@
CONST	SEGMENT
??_C@_09IJENJOHF@SEC_JOY11@ DB 'SEC_JOY11', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JAFGKPDE@SEC_JOY10@
CONST	SEGMENT
??_C@_09JAFGKPDE@SEC_JOY10@ DB 'SEC_JOY10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HLCBPKL@SEC_JOY9@
CONST	SEGMENT
??_C@_08HLCBPKL@SEC_JOY9@ DB 'SEC_JOY9', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BOKJCOOK@SEC_JOY8@
CONST	SEGMENT
??_C@_08BOKJCOOK@SEC_JOY8@ DB 'SEC_JOY8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JJDBDCCF@SEC_JOY7@
CONST	SEGMENT
??_C@_08JJDBDCCF@SEC_JOY7@ DB 'SEC_JOY7', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IACKADGE@SEC_JOY6@
CONST	SEGMENT
??_C@_08IACKADGE@SEC_JOY6@ DB 'SEC_JOY6', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KLAHFAKH@SEC_JOY5@
CONST	SEGMENT
??_C@_08KLAHFAKH@SEC_JOY5@ DB 'SEC_JOY5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCBMGBOG@SEC_JOY4@
CONST	SEGMENT
??_C@_08LCBMGBOG@SEC_JOY4@ DB 'SEC_JOY4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PNFNPHCB@SEC_JOY3@
CONST	SEGMENT
??_C@_08PNFNPHCB@SEC_JOY3@ DB 'SEC_JOY3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OEEGMGGA@SEC_JOY2@
CONST	SEGMENT
??_C@_08OEEGMGGA@SEC_JOY2@ DB 'SEC_JOY2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MPGLJFKD@SEC_JOY1@
CONST	SEGMENT
??_C@_08MPGLJFKD@SEC_JOY1@ DB 'SEC_JOY1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OAKMGPAB@DBLHATRIGHT4@
CONST	SEGMENT
??_C@_0N@OAKMGPAB@DBLHATRIGHT4@ DB 'DBLHATRIGHT4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GMGDDDID@DBLHATLEFT4@
CONST	SEGMENT
??_C@_0M@GMGDDDID@DBLHATLEFT4@ DB 'DBLHATLEFT4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DDJELPBD@DBLHATDOWN4@
CONST	SEGMENT
??_C@_0M@DDJELPBD@DBLHATDOWN4@ DB 'DBLHATDOWN4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FAEEGFHL@DBLHATUP4@
CONST	SEGMENT
??_C@_09FAEEGFHL@DBLHATUP4@ DB 'DBLHATUP4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KPONPJMG@DBLHATRIGHT3@
CONST	SEGMENT
??_C@_0N@KPONPJMG@DBLHATRIGHT3@ DB 'DBLHATRIGHT3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CDCCKFEE@DBLHATLEFT3@
CONST	SEGMENT
??_C@_0M@CDCCKFEE@DBLHATLEFT3@ DB 'DBLHATLEFT3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HMNFCJNE@DBLHATDOWN3@
CONST	SEGMENT
??_C@_0M@HMNFCJNE@DBLHATDOWN3@ DB 'DBLHATDOWN3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BPAFPDLM@DBLHATUP3@
CONST	SEGMENT
??_C@_09BPAFPDLM@DBLHATUP3@ DB 'DBLHATUP3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LGPGMIIH@DBLHATRIGHT2@
CONST	SEGMENT
??_C@_0N@LGPGMIIH@DBLHATRIGHT2@ DB 'DBLHATRIGHT2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DKDJJEAF@DBLHATLEFT2@
CONST	SEGMENT
??_C@_0M@DKDJJEAF@DBLHATLEFT2@ DB 'DBLHATLEFT2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GFMOBIJF@DBLHATDOWN2@
CONST	SEGMENT
??_C@_0M@GFMOBIJF@DBLHATDOWN2@ DB 'DBLHATDOWN2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GBOMCPN@DBLHATUP2@
CONST	SEGMENT
??_C@_09GBOMCPN@DBLHATUP2@ DB 'DBLHATUP2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FIDCOLLP@DBLHATRIGHT@
CONST	SEGMENT
??_C@_0M@FIDCOLLP@DBLHATRIGHT@ DB 'DBLHATRIGHT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EEBCJKOB@DBLHATLEFT@
CONST	SEGMENT
??_C@_0L@EEBCJKOB@DBLHATLEFT@ DB 'DBLHATLEFT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LGBGACNI@DBLHATDOWN@
CONST	SEGMENT
??_C@_0L@LGBGACNI@DBLHATDOWN@ DB 'DBLHATDOWN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GAKALDMF@DBLHATUP@
CONST	SEGMENT
??_C@_08GAKALDMF@DBLHATUP@ DB 'DBLHATUP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HLKDMKMF@DBLJOY32@
CONST	SEGMENT
??_C@_08HLKDMKMF@DBLJOY32@ DB 'DBLJOY32', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FAIOJJAG@DBLJOY31@
CONST	SEGMENT
??_C@_08FAIOJJAG@DBLJOY31@ DB 'DBLJOY31', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EJJFKIEH@DBLJOY30@
CONST	SEGMENT
??_C@_08EJJFKIEH@DBLJOY30@ DB 'DBLJOY30', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JJJFHJDJ@DBLJOY29@
CONST	SEGMENT
??_C@_08JJJFHJDJ@DBLJOY29@ DB 'DBLJOY29', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IAIOEIHI@DBLJOY28@
CONST	SEGMENT
??_C@_08IAIOEIHI@DBLJOY28@ DB 'DBLJOY28', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HBGFELH@DBLJOY27@
CONST	SEGMENT
??_C@_08HBGFELH@DBLJOY27@ DB 'DBLJOY27', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BOANGFPG@DBLJOY26@
CONST	SEGMENT
??_C@_08BOANGFPG@DBLJOY26@ DB 'DBLJOY26', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DFCADGDF@DBLJOY25@
CONST	SEGMENT
??_C@_08DFCADGDF@DBLJOY25@ DB 'DBLJOY25', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CMDLAHHE@DBLJOY24@
CONST	SEGMENT
??_C@_08CMDLAHHE@DBLJOY24@ DB 'DBLJOY24', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GDHKJBLD@DBLJOY23@
CONST	SEGMENT
??_C@_08GDHKJBLD@DBLJOY23@ DB 'DBLJOY23', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HKGBKAPC@DBLJOY22@
CONST	SEGMENT
??_C@_08HKGBKAPC@DBLJOY22@ DB 'DBLJOY22', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FBEMPDDB@DBLJOY21@
CONST	SEGMENT
??_C@_08FBEMPDDB@DBLJOY21@ DB 'DBLJOY21', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EIFHMCHA@DBLJOY20@
CONST	SEGMENT
??_C@_08EIFHMCHA@DBLJOY20@ DB 'DBLJOY20', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JLNDMHGA@DBLJOY19@
CONST	SEGMENT
??_C@_08JLNDMHGA@DBLJOY19@ DB 'DBLJOY19', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08ICMIPGCB@DBLJOY18@
CONST	SEGMENT
??_C@_08ICMIPGCB@DBLJOY18@ DB 'DBLJOY18', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FFAOKOO@DBLJOY17@
CONST	SEGMENT
??_C@_08FFAOKOO@DBLJOY17@ DB 'DBLJOY17', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BMELNLKP@DBLJOY16@
CONST	SEGMENT
??_C@_08BMELNLKP@DBLJOY16@ DB 'DBLJOY16', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DHGGIIGM@DBLJOY15@
CONST	SEGMENT
??_C@_08DHGGIIGM@DBLJOY15@ DB 'DBLJOY15', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08COHNLJCN@DBLJOY14@
CONST	SEGMENT
??_C@_08COHNLJCN@DBLJOY14@ DB 'DBLJOY14', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GBDMCPOK@DBLJOY13@
CONST	SEGMENT
??_C@_08GBDMCPOK@DBLJOY13@ DB 'DBLJOY13', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HICHBOKL@DBLJOY12@
CONST	SEGMENT
??_C@_08HICHBOKL@DBLJOY12@ DB 'DBLJOY12', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FDAKENGI@DBLJOY11@
CONST	SEGMENT
??_C@_08FDAKENGI@DBLJOY11@ DB 'DBLJOY11', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EKBBHMCJ@DBLJOY10@
CONST	SEGMENT
??_C@_08EKBBHMCJ@DBLJOY10@ DB 'DBLJOY10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CANJNCMA@DBLJOY9@
CONST	SEGMENT
??_C@_07CANJNCMA@DBLJOY9@ DB 'DBLJOY9', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DJMCODIB@DBLJOY8@
CONST	SEGMENT
??_C@_07DJMCODIB@DBLJOY8@ DB 'DBLJOY8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LOFKPPEO@DBLJOY7@
CONST	SEGMENT
??_C@_07LOFKPPEO@DBLJOY7@ DB 'DBLJOY7', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KHEBMOAP@DBLJOY6@
CONST	SEGMENT
??_C@_07KHEBMOAP@DBLJOY6@ DB 'DBLJOY6', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07IMGMJNMM@DBLJOY5@
CONST	SEGMENT
??_C@_07IMGMJNMM@DBLJOY5@ DB 'DBLJOY5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JFHHKMIN@DBLJOY4@
CONST	SEGMENT
??_C@_07JFHHKMIN@DBLJOY4@ DB 'DBLJOY4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NKDGDKEK@DBLJOY3@
CONST	SEGMENT
??_C@_07NKDGDKEK@DBLJOY3@ DB 'DBLJOY3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MDCNALAL@DBLJOY2@
CONST	SEGMENT
??_C@_07MDCNALAL@DBLJOY2@ DB 'DBLJOY2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OIAAFIMI@DBLJOY1@
CONST	SEGMENT
??_C@_07OIAAFIMI@DBLJOY1@ DB 'DBLJOY1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PPGIDGAN@DBLSEC_MOUSE8@
CONST	SEGMENT
??_C@_0O@PPGIDGAN@DBLSEC_MOUSE8@ DB 'DBLSEC_MOUSE8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HIPACKMC@DBLSEC_MOUSE7@
CONST	SEGMENT
??_C@_0O@HIPACKMC@DBLSEC_MOUSE7@ DB 'DBLSEC_MOUSE7', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GBOLBLID@DBLSEC_MOUSE6@
CONST	SEGMENT
??_C@_0O@GBOLBLID@DBLSEC_MOUSE6@ DB 'DBLSEC_MOUSE6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EKMGEIEA@DBLSEC_MOUSE5@
CONST	SEGMENT
??_C@_0O@EKMGEIEA@DBLSEC_MOUSE5@ DB 'DBLSEC_MOUSE5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FDNNHJAB@DBLSEC_MOUSE4@
CONST	SEGMENT
??_C@_0O@FDNNHJAB@DBLSEC_MOUSE4@ DB 'DBLSEC_MOUSE4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BMJMOPMG@DBLSEC_MOUSE3@
CONST	SEGMENT
??_C@_0O@BMJMOPMG@DBLSEC_MOUSE3@ DB 'DBLSEC_MOUSE3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@COKKINEE@DBLSEC_MOUSE1@
CONST	SEGMENT
??_C@_0O@COKKINEE@DBLSEC_MOUSE1@ DB 'DBLSEC_MOUSE1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FIHNOIH@DBLSEC_MOUSE2@
CONST	SEGMENT
??_C@_0O@FIHNOIH@DBLSEC_MOUSE2@ DB 'DBLSEC_MOUSE2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JGCFHDFH@DBLMOUSE8@
CONST	SEGMENT
??_C@_09JGCFHDFH@DBLMOUSE8@ DB 'DBLMOUSE8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BBLNGPJI@DBLMOUSE7@
CONST	SEGMENT
??_C@_09BBLNGPJI@DBLMOUSE7@ DB 'DBLMOUSE7', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09IKGFONJ@DBLMOUSE6@
CONST	SEGMENT
??_C@_09IKGFONJ@DBLMOUSE6@ DB 'DBLMOUSE6', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CDILANBK@DBLMOUSE5@
CONST	SEGMENT
??_C@_09CDILANBK@DBLMOUSE5@ DB 'DBLMOUSE5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09DKJADMFL@DBLMOUSE4@
CONST	SEGMENT
??_C@_09DKJADMFL@DBLMOUSE4@ DB 'DBLMOUSE4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HFNBKKJM@DBLMOUSE3@
CONST	SEGMENT
??_C@_09HFNBKKJM@DBLMOUSE3@ DB 'DBLMOUSE3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09GMMKJLNN@DBLMOUSE2@
CONST	SEGMENT
??_C@_09GMMKJLNN@DBLMOUSE2@ DB 'DBLMOUSE2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09EHOHMIBO@DBLMOUSE1@
CONST	SEGMENT
??_C@_09EHOHMIBO@DBLMOUSE1@ DB 'DBLMOUSE1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HBGMBIIP@HATRIGHT4@
CONST	SEGMENT
??_C@_09HBGMBIIP@HATRIGHT4@ DB 'HATRIGHT4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MIHICKMN@HATLEFT4@
CONST	SEGMENT
??_C@_08MIHICKMN@HATLEFT4@ DB 'HATLEFT4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JHIPKGFN@HATDOWN4@
CONST	SEGMENT
??_C@_08JHIPKGFN@HATDOWN4@ DB 'HATDOWN4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DHKFIJIK@HATUP4@
CONST	SEGMENT
??_C@_06DHKFIJIK@HATUP4@ DB 'HATUP4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09DOCNIOEI@HATRIGHT3@
CONST	SEGMENT
??_C@_09DOCNIOEI@HATRIGHT3@ DB 'HATRIGHT3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IHDJLMAK@HATLEFT3@
CONST	SEGMENT
??_C@_08IHDJLMAK@HATLEFT3@ DB 'HATLEFT3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NIMODAJK@HATDOWN3@
CONST	SEGMENT
??_C@_08NIMODAJK@HATDOWN3@ DB 'HATDOWN3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HIOEBPEN@HATUP3@
CONST	SEGMENT
??_C@_06HIOEBPEN@HATUP3@ DB 'HATUP3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CHDGLPAJ@HATRIGHT2@
CONST	SEGMENT
??_C@_09CHDGLPAJ@HATRIGHT2@ DB 'HATRIGHT2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JOCCINEL@HATLEFT2@
CONST	SEGMENT
??_C@_08JOCCINEL@HATLEFT2@ DB 'HATLEFT2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MBNFABNL@HATDOWN2@
CONST	SEGMENT
??_C@_08MBNFABNL@HATDOWN2@ DB 'HATDOWN2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GBPPCOAM@HATUP2@
CONST	SEGMENT
??_C@_06GBPPCOAM@HATUP2@ DB 'HATUP2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PMCJPCPB@HATRIGHT@
CONST	SEGMENT
??_C@_08PMCJPCPB@HATRIGHT@ DB 'HATRIGHT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07IOMPLJIH@HATLEFT@
CONST	SEGMENT
??_C@_07IOMPLJIH@HATLEFT@ DB 'HATLEFT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HMMLCBLO@HATDOWN@
CONST	SEGMENT
??_C@_07HMMLCBLO@HATDOWN@ DB 'HATDOWN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FMAGIOFO@HATUP@
CONST	SEGMENT
??_C@_05FMAGIOFO@HATUP@ DB 'HATUP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05EHAFPHFO@JOY32@
CONST	SEGMENT
??_C@_05EHAFPHFO@JOY32@ DB 'JOY32', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GMCIKEJN@JOY31@
CONST	SEGMENT
??_C@_05GMCIKEJN@JOY31@ DB 'JOY31', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HFDDJFNM@JOY30@
CONST	SEGMENT
??_C@_05HFDDJFNM@JOY30@ DB 'JOY30', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05KFDDEEKC@JOY29@
CONST	SEGMENT
??_C@_05KFDDEEKC@JOY29@ DB 'JOY29', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LMCIHFOD@JOY28@
CONST	SEGMENT
??_C@_05LMCIHFOD@JOY28@ DB 'JOY28', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DLLAGJCM@JOY27@
CONST	SEGMENT
??_C@_05DLLAGJCM@JOY27@ DB 'JOY27', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05CCKLFIGN@JOY26@
CONST	SEGMENT
??_C@_05CCKLFIGN@JOY26@ DB 'JOY26', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05JIGALKO@JOY25@
CONST	SEGMENT
??_C@_05JIGALKO@JOY25@ DB 'JOY25', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BAJNDKOP@JOY24@
CONST	SEGMENT
??_C@_05BAJNDKOP@JOY24@ DB 'JOY24', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05FPNMKMCI@JOY23@
CONST	SEGMENT
??_C@_05FPNMKMCI@JOY23@ DB 'JOY23', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05EGMHJNGJ@JOY22@
CONST	SEGMENT
??_C@_05EGMHJNGJ@JOY22@ DB 'JOY22', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GNOKMOKK@JOY21@
CONST	SEGMENT
??_C@_05GNOKMOKK@JOY21@ DB 'JOY21', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HEPBPPOL@JOY20@
CONST	SEGMENT
??_C@_05HEPBPPOL@JOY20@ DB 'JOY20', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05KHHFPKPL@JOY19@
CONST	SEGMENT
??_C@_05KHHFPKPL@JOY19@ DB 'JOY19', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LOGOMLLK@JOY18@
CONST	SEGMENT
??_C@_05LOGOMLLK@JOY18@ DB 'JOY18', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DJPGNHHF@JOY17@
CONST	SEGMENT
??_C@_05DJPGNHHF@JOY17@ DB 'JOY17', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05CAONOGDE@JOY16@
CONST	SEGMENT
??_C@_05CAONOGDE@JOY16@ DB 'JOY16', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LMALFPH@JOY15@
CONST	SEGMENT
??_C@_05LMALFPH@JOY15@ DB 'JOY15', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BCNLIELG@JOY14@
CONST	SEGMENT
??_C@_05BCNLIELG@JOY14@ DB 'JOY14', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05FNJKBCHB@JOY13@
CONST	SEGMENT
??_C@_05FNJKBCHB@JOY13@ DB 'JOY13', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05EEIBCDDA@JOY12@
CONST	SEGMENT
??_C@_05EEIBCDDA@JOY12@ DB 'JOY12', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GPKMHAPD@JOY11@
CONST	SEGMENT
??_C@_05GPKMHAPD@JOY11@ DB 'JOY11', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HGLHEBLC@JOY10@
CONST	SEGMENT
??_C@_05HGLHEBLC@JOY10@ DB 'JOY10', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04IFAAJIOE@JOY9@
CONST	SEGMENT
??_C@_04IFAAJIOE@JOY9@ DB 'JOY9', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04JMBLKJKF@JOY8@
CONST	SEGMENT
??_C@_04JMBLKJKF@JOY8@ DB 'JOY8', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04BLIDLFGK@JOY7@
CONST	SEGMENT
??_C@_04BLIDLFGK@JOY7@ DB 'JOY7', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CJIIECL@JOY6@
CONST	SEGMENT
??_C@_04CJIIECL@JOY6@ DB 'JOY6', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CJLFNHOI@JOY5@
CONST	SEGMENT
??_C@_04CJLFNHOI@JOY5@ DB 'JOY5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04DAKOOGKJ@JOY4@
CONST	SEGMENT
??_C@_04DAKOOGKJ@JOY4@ DB 'JOY4', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HPOPHAGO@JOY3@
CONST	SEGMENT
??_C@_04HPOPHAGO@JOY3@ DB 'JOY3', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GGPEEBCP@JOY2@
CONST	SEGMENT
??_C@_04GGPEEBCP@JOY2@ DB 'JOY2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04ENNJBCOM@JOY1@
CONST	SEGMENT
??_C@_04ENNJBCOM@JOY1@ DB 'JOY1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KDOGOHGH@Wheel?52?5Down@
CONST	SEGMENT
??_C@_0N@KDOGOHGH@Wheel?52?5Down@ DB 'Wheel 2 Down', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GJJHHOHE@Wheel?52?5UP@
CONST	SEGMENT
??_C@_0L@GJJHHOHE@Wheel?52?5UP@ DB 'Wheel 2 UP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JCAOPNPK@Wheel?51?5Down@
CONST	SEGMENT
??_C@_0N@JCAOPNPK@Wheel?51?5Down@ DB 'Wheel 1 Down', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CODHAEKE@Wheel?51?5UP@
CONST	SEGMENT
??_C@_0L@CODHAEKE@Wheel?51?5UP@ DB 'Wheel 1 UP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PFPJFIFN@SEC_MOUSE8@
CONST	SEGMENT
??_C@_0L@PFPJFIFN@SEC_MOUSE8@ DB 'SEC_MOUSE8', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HCGBEEJC@SEC_MOUSE7@
CONST	SEGMENT
??_C@_0L@HCGBEEJC@SEC_MOUSE7@ DB 'SEC_MOUSE7', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GLHKHFND@SEC_MOUSE6@
CONST	SEGMENT
??_C@_0L@GLHKHFND@SEC_MOUSE6@ DB 'SEC_MOUSE6', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EAFHCGBA@SEC_MOUSE5@
CONST	SEGMENT
??_C@_0L@EAFHCGBA@SEC_MOUSE5@ DB 'SEC_MOUSE5', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FJEMBHFB@SEC_MOUSE4@
CONST	SEGMENT
??_C@_0L@FJEMBHFB@SEC_MOUSE4@ DB 'SEC_MOUSE4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BGANIBJG@SEC_MOUSE3@
CONST	SEGMENT
??_C@_0L@BGANIBJG@SEC_MOUSE3@ DB 'SEC_MOUSE3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CEDLODBE@SEC_MOUSE1@
CONST	SEGMENT
??_C@_0L@CEDLODBE@SEC_MOUSE1@ DB 'SEC_MOUSE1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PBGLANH@SEC_MOUSE2@
CONST	SEGMENT
??_C@_0L@PBGLANH@SEC_MOUSE2@ DB 'SEC_MOUSE2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PBMEJPKG@MOUSE8@
CONST	SEGMENT
??_C@_06PBMEJPKG@MOUSE8@ DB 'MOUSE8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HGFMIDGJ@MOUSE7@
CONST	SEGMENT
??_C@_06HGFMIDGJ@MOUSE7@ DB 'MOUSE7', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPEHLCCI@MOUSE6@
CONST	SEGMENT
??_C@_06GPEHLCCI@MOUSE6@ DB 'MOUSE6', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EEGKOBOL@MOUSE5@
CONST	SEGMENT
??_C@_06EEGKOBOL@MOUSE5@ DB 'MOUSE5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FNHBNAKK@MOUSE4@
CONST	SEGMENT
??_C@_06FNHBNAKK@MOUSE4@ DB 'MOUSE4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BCDAEGGN@MOUSE3@
CONST	SEGMENT
??_C@_06BCDAEGGN@MOUSE3@ DB 'MOUSE3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LCLHHCM@MOUSE2@
CONST	SEGMENT
??_C@_06LCLHHCM@MOUSE2@ DB 'MOUSE2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CAAGCEOP@MOUSE1@
CONST	SEGMENT
??_C@_06CAAGCEOP@MOUSE1@ DB 'MOUSE1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KIBNPMNE@F12@
CONST	SEGMENT
??_C@_03KIBNPMNE@F12@ DB 'F12', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IDDAKPBH@F11@
CONST	SEGMENT
??_C@_03IDDAKPBH@F11@ DB 'F11', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JKCLJOFG@F10@
CONST	SEGMENT
??_C@_03JKCLJOFG@F10@ DB 'F10', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HKCNFKCF@F9@
CONST	SEGMENT
??_C@_02HKCNFKCF@F9@ DB 'F9', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GDDGGLGE@F8@
CONST	SEGMENT
??_C@_02GDDGGLGE@F8@ DB 'F8', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OEKOHHKL@F7@
CONST	SEGMENT
??_C@_02OEKOHHKL@F7@ DB 'F7', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PNLFEGOK@F6@
CONST	SEGMENT
??_C@_02PNLFEGOK@F6@ DB 'F6', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NGJIBFCJ@F5@
CONST	SEGMENT
??_C@_02NGJIBFCJ@F5@ DB 'F5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MPIDCEGI@F4@
CONST	SEGMENT
??_C@_02MPIDCEGI@F4@ DB 'F4', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IAMCLCKP@F3@
CONST	SEGMENT
??_C@_02IAMCLCKP@F3@ DB 'F3', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JJNJIDOO@F2@
CONST	SEGMENT
??_C@_02JJNJIDOO@F2@ DB 'F2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LCPENACN@F1@
CONST	SEGMENT
??_C@_02LCPENACN@F1@ DB 'F1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OAFAKAKL@DEL@
CONST	SEGMENT
??_C@_03OAFAKAKL@DEL@ DB 'DEL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NDDFJJAJ@INS@
CONST	SEGMENT
??_C@_03NDDFJJAJ@INS@ DB 'INS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04BOGEOADK@PGDN@
CONST	SEGMENT
??_C@_04BOGEOADK@PGDN@ DB 'PGDN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BBCODOIK@DOWN?5ARROW@
CONST	SEGMENT
??_C@_0L@BBCODOIK@DOWN?5ARROW@ DB 'DOWN ARROW', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03JMGAKCCH@END@
CONST	SEGMENT
??_C@_03JMGAKCCH@END@ DB 'END', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JHHNCACK@RIGHT?5ARROW@
CONST	SEGMENT
??_C@_0M@JHHNCACK@RIGHT?5ARROW@ DB 'RIGHT ARROW', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OKAPDENH@LEFT?5ARROW@
CONST	SEGMENT
??_C@_0L@OKAPDENH@LEFT?5ARROW@ DB 'LEFT ARROW', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04NHMBBGKC@PGUP@
CONST	SEGMENT
??_C@_04NHMBBGKC@PGUP@ DB 'PGUP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NCEHKGBH@UP?5ARROW@
CONST	SEGMENT
??_C@_08NCEHKGBH@UP?5ARROW@ DB 'UP ARROW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GHGFPGNC@HOME@
CONST	SEGMENT
??_C@_04GHGFPGNC@HOME@ DB 'HOME', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NMCAOPMO@KEYPAD?5?4@
CONST	SEGMENT
??_C@_08NMCAOPMO@KEYPAD?5?4@ DB 'KEYPAD .', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IGBNABB@KEYPAD?50@
CONST	SEGMENT
??_C@_08IGBNABB@KEYPAD?50@ DB 'KEYPAD 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CDEMIDNC@KEYPAD?53@
CONST	SEGMENT
??_C@_08CDEMIDNC@KEYPAD?53@ DB 'KEYPAD 3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DKFHLCJD@KEYPAD?52@
CONST	SEGMENT
??_C@_08DKFHLCJD@KEYPAD?52@ DB 'KEYPAD 2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BBHKOBFA@KEYPAD?51@
CONST	SEGMENT
??_C@_08BBHKOBFA@KEYPAD?51@ DB 'KEYPAD 1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KBFHBLIL@KEYPAD?5?$CL@
CONST	SEGMENT
??_C@_08KBFHBLIL@KEYPAD?5?$CL@ DB 'KEYPAD +', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FODLHHJH@KEYPAD?56@
CONST	SEGMENT
??_C@_08FODLHHJH@KEYPAD?56@ DB 'KEYPAD 6', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HFBGCEFE@KEYPAD?55@
CONST	SEGMENT
??_C@_08HFBGCEFE@KEYPAD?55@ DB 'KEYPAD 5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GMANBFBF@KEYPAD?54@
CONST	SEGMENT
??_C@_08GMANBFBF@KEYPAD?54@ DB 'KEYPAD 4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PHANLMAN@KEYPAD?5?9@
CONST	SEGMENT
??_C@_08PHANLMAN@KEYPAD?5?9@ DB 'KEYPAD -', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJKDGLFI@KEYPAD?59@
CONST	SEGMENT
??_C@_08NJKDGLFI@KEYPAD?59@ DB 'KEYPAD 9', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MALIFKBJ@KEYPAD?58@
CONST	SEGMENT
??_C@_08MALIFKBJ@KEYPAD?58@ DB 'KEYPAD 8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EHCAEGNG@KEYPAD?57@
CONST	SEGMENT
??_C@_08EHCAEGNG@KEYPAD?57@ DB 'KEYPAD 7', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MFDLNOIP@KEYPAD?5?1@
CONST	SEGMENT
??_C@_08MFDLNOIP@KEYPAD?5?1@ DB 'KEYPAD /', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FKEEPDEP@ALT@
CONST	SEGMENT
??_C@_03FKEEPDEP@ALT@ DB 'ALT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04PPPBEHOF@RALT@
CONST	SEGMENT
??_C@_04PPPBEHOF@RALT@ DB 'RALT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CACBGOAG@LALT@
CONST	SEGMENT
??_C@_04CACBGOAG@LALT@ DB 'LALT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FBBFEIFJ@CTRL@
CONST	SEGMENT
??_C@_04FBBFEIFJ@CTRL@ DB 'CTRL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GHLDLHBL@RCTRL@
CONST	SEGMENT
??_C@_05GHLDLHBL@RCTRL@ DB 'RCTRL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05FOGPNEPA@LCTRL@
CONST	SEGMENT
??_C@_05FOGPNEPA@LCTRL@ DB 'LCTRL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05OAHIEJBI@SHIFT@
CONST	SEGMENT
??_C@_05OAHIEJBI@SHIFT@ DB 'SHIFT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06HIJMMPFL@RSHIFT@
CONST	SEGMENT
??_C@_06HIJMMPFL@RSHIFT@ DB 'RSHIFT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EPHNCIMI@LSHIFT@
CONST	SEGMENT
??_C@_06EPHNCIMI@LSHIFT@ DB 'LSHIFT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IILMDFMO@MENU@
CONST	SEGMENT
??_C@_04IILMDFMO@MENU@ DB 'MENU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08JLNPBCEF@RIGHTWIN@
CONST	SEGMENT
??_C@_08JLNPBCEF@RIGHTWIN@ DB 'RIGHTWIN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBCFMOEP@LEFTWIN@
CONST	SEGMENT
??_C@_07KBCFMOEP@LEFTWIN@ DB 'LEFTWIN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GIKEHNEK@SCROLLLOCK@
CONST	SEGMENT
??_C@_0L@GIKEHNEK@SCROLLLOCK@ DB 'SCROLLLOCK', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FLMEHHJP@NUMLOCK@
CONST	SEGMENT
??_C@_07FLMEHHJP@NUMLOCK@ DB 'NUMLOCK', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MALOLBMO@BACKSPACE@
CONST	SEGMENT
??_C@_09MALOLBMO@BACKSPACE@ DB 'BACKSPACE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CDPDIIDH@ESCAPE@
CONST	SEGMENT
??_C@_06CDPDIIDH@ESCAPE@ DB 'ESCAPE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03CJMDHCGG@TAB@
CONST	SEGMENT
??_C@_03CJMDHCGG@TAB@ DB 'TAB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05EMNIMLKD@ENTER@
CONST	SEGMENT
??_C@_05EMNIMLKD@ENTER@ DB 'ENTER', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09NPIDGBMA@CAPS?5LOCK@
CONST	SEGMENT
??_C@_09NPIDGBMA@CAPS?5LOCK@ DB 'CAPS LOCK', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05CAEOFMEP@SPACE@
CONST	SEGMENT
??_C@_05CAEOFMEP@SPACE@ DB 'SPACE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CCLAEDDF@Yes@
CONST	SEGMENT
??_C@_03CCLAEDDF@Yes@ DB 'Yes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NNFJOLPA@allowautoaim@
CONST	SEGMENT
??_C@_0N@NNFJOLPA@allowautoaim@ DB 'allowautoaim', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OFEEFFPJ@controlperkey@
CONST	SEGMENT
??_C@_0O@OFEEFFPJ@controlperkey@ DB 'controlperkey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HLBJBALF@mlooksens2@
CONST	SEGMENT
??_C@_0L@HLBJBALF@mlooksens2@ DB 'mlooksens2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NCOLDMGA@mousesens2@
CONST	SEGMENT
??_C@_0L@NCOLDMGA@mousesens2@ DB 'mousesens2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GAOMEKEK@mlooksens@
CONST	SEGMENT
??_C@_09GAOMEKEK@mlooksens@ DB 'mlooksens', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02PKFBJPLJ@10@
CONST	SEGMENT
??_C@_02PKFBJPLJ@10@ DB '10', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09COGOMMKG@mousesens@
CONST	SEGMENT
??_C@_09COGOMMKG@mousesens@ DB 'mousesens', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FFDIEMLL@Several@
CONST	SEGMENT
??_C@_07FFDIEMLL@Several@ DB 'Several', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03EHAPBBEA@One@
CONST	SEGMENT
??_C@_03EHAPBBEA@One@ DB 'One', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LEPPJAKI@MAX@
CONST	SEGMENT
??_C@_03LEPPJAKI@MAX@ DB 'MAX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KGHEHEMH@MIN@
CONST	SEGMENT
??_C@_03KGHEHEMH@MIN@ DB 'MIN', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_cv_controlperkey DD FLAT:??_C@_0O@OFEEFFPJ@controlperkey@
	DD	FLAT:??_C@_03EHAPBBEA@One@
	DD	01H
	DD	FLAT:_onecontrolperkey_cons_t
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DW	00H
	DB	00H
	ORG $+1
	DD	00H
_cv_mousesens2 DD FLAT:??_C@_0L@NCOLDMGA@mousesens2@
	DD	FLAT:??_C@_02PKFBJPLJ@10@
	DD	01H
	DD	FLAT:_mousesens_cons_t
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DW	00H
	DB	00H
	ORG $+1
	DD	00H
_cv_mlooksens2 DD FLAT:??_C@_0L@HLBJBALF@mlooksens2@
	DD	FLAT:??_C@_02PKFBJPLJ@10@
	DD	01H
	DD	FLAT:_mousesens_cons_t
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DW	00H
	DB	00H
	ORG $+1
	DD	00H
_cv_mousesens DD FLAT:??_C@_09COGOMMKG@mousesens@
	DD	FLAT:??_C@_02PKFBJPLJ@10@
	DD	01H
	DD	FLAT:_mousesens_cons_t
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DW	00H
	DB	00H
	ORG $+1
	DD	00H
_cv_mlooksens DD FLAT:??_C@_09GAOMEKEK@mlooksens@
	DD	FLAT:??_C@_02PKFBJPLJ@10@
	DD	01H
	DD	FLAT:_mousesens_cons_t
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DW	00H
	DB	00H
	ORG $+1
	DD	00H
_cv_allowautoaim DD FLAT:??_C@_0N@NNFJOLPA@allowautoaim@
	DD	FLAT:??_C@_03CCLAEDDF@Yes@
	DD	04H
	DD	FLAT:_CV_YesNo
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DW	00H
	DB	00H
	ORG $+1
	DD	00H
_mousesens_cons_t DD 01H
	DD	FLAT:??_C@_03KGHEHEMH@MIN@
	DD	064H
	DD	FLAT:??_C@_03LEPPJAKI@MAX@
	DD	00H
	DD	00H
_onecontrolperkey_cons_t DD 01H
	DD	FLAT:??_C@_03EHAPBBEA@One@
	DD	02H
	DD	FLAT:??_C@_07FFDIEMLL@Several@
	DD	00H
	DD	00H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_G_MapEventsToControls
PUBLIC	_G_KeynumToString
PUBLIC	_G_KeyStringtoNum
PUBLIC	_G_ClearControlKeys
PUBLIC	_Command_Setcontrol_f
PUBLIC	_Command_Setcontrol2_f
PUBLIC	_G_Controldefault
PUBLIC	_G_SaveKeySetting
PUBLIC	_G_CheckDoubleUsage
PUBLIC	??_C@_05DCKDBJEK@KEY?$CFd@			; `string'
PUBLIC	??_C@_0BF@PPPIDBOD@setcontrol?5?$CC?$CFs?$CC?5?$CC?$CFs?$CC@ ; `string'
PUBLIC	??_C@_06FGMHGICC@?5?$CC?$CFs?$CC?6@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0BG@LHHGGPGH@setcontrol2?5?$CC?$CFs?$CC?5?$CC?$CFs?$CC@ ; `string'
PUBLIC	??_C@_0BG@GHBLBPLB@Control?5?8?$CFs?8?5unknown?6@ ; `string'
PUBLIC	??_C@_0DE@OCBDLJAA@setcontrol?5?$DMcontrolname?$DO?5?$DMkeyna@ ; `string'
PUBLIC	??_C@_0DF@KMKKDCIH@setcontrol2?5?$DMcontrolname?$DO?5?$DMkeyn@ ; `string'
PUBLIC	__real@3dcccccd
PUBLIC	__real@42dc0000
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_strlen:PROC
EXTRN	_stricmp:PROC
EXTRN	_atoi:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	_CONS_Printf:PROC
EXTRN	_COM_Argc:PROC
EXTRN	_COM_Argv:PROC
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
_mousedclicks DB 018H DUP (?)
_joydclicks DB	090H DUP (?)
_mouse2dclicks DB 018H DUP (?)
_joy2dclicks DB	090H DUP (?)
?keynamestr@?1??G_KeynumToString@@9@9 DB 08H DUP (?)	; `G_KeynumToString'::`2'::keynamestr
_BSS	ENDS
;	COMDAT __real@42dc0000
CONST	SEGMENT
__real@42dc0000 DD 042dc0000r			; 110
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT ??_C@_0DF@KMKKDCIH@setcontrol2?5?$DMcontrolname?$DO?5?$DMkeyn@
CONST	SEGMENT
??_C@_0DF@KMKKDCIH@setcontrol2?5?$DMcontrolname?$DO?5?$DMkeyn@ DB 'setcon'
	DB	'trol2 <controlname> <keyname> [<2nd keyname>]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@OCBDLJAA@setcontrol?5?$DMcontrolname?$DO?5?$DMkeyna@
CONST	SEGMENT
??_C@_0DE@OCBDLJAA@setcontrol?5?$DMcontrolname?$DO?5?$DMkeyna@ DB 'setcon'
	DB	'trol <controlname> <keyname> [<2nd keyname>]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GHBLBPLB@Control?5?8?$CFs?8?5unknown?6@
CONST	SEGMENT
??_C@_0BG@GHBLBPLB@Control?5?8?$CFs?8?5unknown?6@ DB 'Control ''%s'' unkn'
	DB	'own', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LHHGGPGH@setcontrol2?5?$CC?$CFs?$CC?5?$CC?$CFs?$CC@
CONST	SEGMENT
??_C@_0BG@LHHGGPGH@setcontrol2?5?$CC?$CFs?$CC?5?$CC?$CFs?$CC@ DB 'setcont'
	DB	'rol2 "%s" "%s"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FGMHGICC@?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_06FGMHGICC@?5?$CC?$CFs?$CC?6@ DB ' "%s"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PPPIDBOD@setcontrol?5?$CC?$CFs?$CC?5?$CC?$CFs?$CC@
CONST	SEGMENT
??_C@_0BF@PPPIDBOD@setcontrol?5?$CC?$CFs?$CC?5?$CC?$CFs?$CC@ DB 'setcontr'
	DB	'ol "%s" "%s"', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05DCKDBJEK@KEY?$CFd@
CONST	SEGMENT
??_C@_05DCKDBJEK@KEY?$CFd@ DB 'KEY%d', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_keynames DD	020H
	DD	FLAT:??_C@_05CAEOFMEP@SPACE@
	DD	0baH
	DD	FLAT:??_C@_09NPIDGBMA@CAPS?5LOCK@
	DD	0dH
	DD	FLAT:??_C@_05EMNIMLKD@ENTER@
	DD	09H
	DD	FLAT:??_C@_03CJMDHCGG@TAB@
	DD	01bH
	DD	FLAT:??_C@_06CDPDIIDH@ESCAPE@
	DD	08H
	DD	FLAT:??_C@_09MALOLBMO@BACKSPACE@
	DD	0c5H
	DD	FLAT:??_C@_07FLMEHHJP@NUMLOCK@
	DD	0c6H
	DD	FLAT:??_C@_0L@GIKEHNEK@SCROLLLOCK@
	DD	0dbH
	DD	FLAT:??_C@_07KBCFMOEP@LEFTWIN@
	DD	0dcH
	DD	FLAT:??_C@_08JLNPBCEF@RIGHTWIN@
	DD	0ddH
	DD	FLAT:??_C@_04IILMDFMO@MENU@
	DD	0b6H
	DD	FLAT:??_C@_06EPHNCIMI@LSHIFT@
	DD	0b7H
	DD	FLAT:??_C@_06HIJMMPFL@RSHIFT@
	DD	0b6H
	DD	FLAT:??_C@_05OAHIEJBI@SHIFT@
	DD	09dH
	DD	FLAT:??_C@_05FOGPNEPA@LCTRL@
	DD	09eH
	DD	FLAT:??_C@_05GHLDLHBL@RCTRL@
	DD	09dH
	DD	FLAT:??_C@_04FBBFEIFJ@CTRL@
	DD	0b8H
	DD	FLAT:??_C@_04CACBGOAG@LALT@
	DD	0b9H
	DD	FLAT:??_C@_04PPPBEHOF@RALT@
	DD	0b8H
	DD	FLAT:??_C@_03FKEEPDEP@ALT@
	DD	0e4H
	DD	FLAT:??_C@_08MFDLNOIP@KEYPAD?5?1@
	DD	0c7H
	DD	FLAT:??_C@_08EHCAEGNG@KEYPAD?57@
	DD	0c8H
	DD	FLAT:??_C@_08MALIFKBJ@KEYPAD?58@
	DD	0c9H
	DD	FLAT:??_C@_08NJKDGLFI@KEYPAD?59@
	DD	0caH
	DD	FLAT:??_C@_08PHANLMAN@KEYPAD?5?9@
	DD	0cbH
	DD	FLAT:??_C@_08GMANBFBF@KEYPAD?54@
	DD	0ccH
	DD	FLAT:??_C@_08HFBGCEFE@KEYPAD?55@
	DD	0cdH
	DD	FLAT:??_C@_08FODLHHJH@KEYPAD?56@
	DD	0ceH
	DD	FLAT:??_C@_08KBFHBLIL@KEYPAD?5?$CL@
	DD	0cfH
	DD	FLAT:??_C@_08BBHKOBFA@KEYPAD?51@
	DD	0d0H
	DD	FLAT:??_C@_08DKFHLCJD@KEYPAD?52@
	DD	0d1H
	DD	FLAT:??_C@_08CDEMIDNC@KEYPAD?53@
	DD	0d2H
	DD	FLAT:??_C@_08IGBNABB@KEYPAD?50@
	DD	0d3H
	DD	FLAT:??_C@_08NMCAOPMO@KEYPAD?5?4@
	DD	0e5H
	DD	FLAT:??_C@_04GHGFPGNC@HOME@
	DD	0e6H
	DD	FLAT:??_C@_08NCEHKGBH@UP?5ARROW@
	DD	0e7H
	DD	FLAT:??_C@_04NHMBBGKC@PGUP@
	DD	0e9H
	DD	FLAT:??_C@_0L@OKAPDENH@LEFT?5ARROW@
	DD	0ebH
	DD	FLAT:??_C@_0M@JHHNCACK@RIGHT?5ARROW@
	DD	0edH
	DD	FLAT:??_C@_03JMGAKCCH@END@
	DD	0eeH
	DD	FLAT:??_C@_0L@BBCODOIK@DOWN?5ARROW@
	DD	0efH
	DD	FLAT:??_C@_04BOGEOADK@PGDN@
	DD	0f0H
	DD	FLAT:??_C@_03NDDFJJAJ@INS@
	DD	0f1H
	DD	FLAT:??_C@_03OAFAKAKL@DEL@
	DD	0bbH
	DD	FLAT:??_C@_02LCPENACN@F1@
	DD	0bcH
	DD	FLAT:??_C@_02JJNJIDOO@F2@
	DD	0bdH
	DD	FLAT:??_C@_02IAMCLCKP@F3@
	DD	0beH
	DD	FLAT:??_C@_02MPIDCEGI@F4@
	DD	0bfH
	DD	FLAT:??_C@_02NGJIBFCJ@F5@
	DD	0c0H
	DD	FLAT:??_C@_02PNLFEGOK@F6@
	DD	0c1H
	DD	FLAT:??_C@_02OEKOHHKL@F7@
	DD	0c2H
	DD	FLAT:??_C@_02GDDGGLGE@F8@
	DD	0c3H
	DD	FLAT:??_C@_02HKCNFKCF@F9@
	DD	0c4H
	DD	FLAT:??_C@_03JKCLJOFG@F10@
	DD	0d7H
	DD	FLAT:??_C@_03IDDAKPBH@F11@
	DD	0d8H
	DD	FLAT:??_C@_03KIBNPMNE@F12@
	DD	0100H
	DD	FLAT:??_C@_06CAAGCEOP@MOUSE1@
	DD	0101H
	DD	FLAT:??_C@_06LCLHHCM@MOUSE2@
	DD	0102H
	DD	FLAT:??_C@_06BCDAEGGN@MOUSE3@
	DD	0103H
	DD	FLAT:??_C@_06FNHBNAKK@MOUSE4@
	DD	0104H
	DD	FLAT:??_C@_06EEGKOBOL@MOUSE5@
	DD	0105H
	DD	FLAT:??_C@_06GPEHLCCI@MOUSE6@
	DD	0106H
	DD	FLAT:??_C@_06HGFMIDGJ@MOUSE7@
	DD	0107H
	DD	FLAT:??_C@_06PBMEJPKG@MOUSE8@
	DD	0170H
	DD	FLAT:??_C@_0L@PBGLANH@SEC_MOUSE2@
	DD	0171H
	DD	FLAT:??_C@_0L@CEDLODBE@SEC_MOUSE1@
	DD	0172H
	DD	FLAT:??_C@_0L@BGANIBJG@SEC_MOUSE3@
	DD	0173H
	DD	FLAT:??_C@_0L@FJEMBHFB@SEC_MOUSE4@
	DD	0174H
	DD	FLAT:??_C@_0L@EAFHCGBA@SEC_MOUSE5@
	DD	0175H
	DD	FLAT:??_C@_0L@GLHKHFND@SEC_MOUSE6@
	DD	0176H
	DD	FLAT:??_C@_0L@HCGBEEJC@SEC_MOUSE7@
	DD	0177H
	DD	FLAT:??_C@_0L@PFPJFIFN@SEC_MOUSE8@
	DD	01e0H
	DD	FLAT:??_C@_0L@CODHAEKE@Wheel?51?5UP@
	DD	01e1H
	DD	FLAT:??_C@_0N@JCAOPNPK@Wheel?51?5Down@
	DD	01e2H
	DD	FLAT:??_C@_0L@GJJHHOHE@Wheel?52?5UP@
	DD	01e3H
	DD	FLAT:??_C@_0N@KDOGOHGH@Wheel?52?5Down@
	DD	0108H
	DD	FLAT:??_C@_04ENNJBCOM@JOY1@
	DD	0109H
	DD	FLAT:??_C@_04GGPEEBCP@JOY2@
	DD	010aH
	DD	FLAT:??_C@_04HPOPHAGO@JOY3@
	DD	010bH
	DD	FLAT:??_C@_04DAKOOGKJ@JOY4@
	DD	010cH
	DD	FLAT:??_C@_04CJLFNHOI@JOY5@
	DD	010dH
	DD	FLAT:??_C@_04CJIIECL@JOY6@
	DD	010eH
	DD	FLAT:??_C@_04BLIDLFGK@JOY7@
	DD	010fH
	DD	FLAT:??_C@_04JMBLKJKF@JOY8@
	DD	0110H
	DD	FLAT:??_C@_04IFAAJIOE@JOY9@
	DD	0111H
	DD	FLAT:??_C@_05HGLHEBLC@JOY10@
	DD	0112H
	DD	FLAT:??_C@_05GPKMHAPD@JOY11@
	DD	0113H
	DD	FLAT:??_C@_05EEIBCDDA@JOY12@
	DD	0114H
	DD	FLAT:??_C@_05FNJKBCHB@JOY13@
	DD	0115H
	DD	FLAT:??_C@_05BCNLIELG@JOY14@
	DD	0116H
	DD	FLAT:??_C@_05LMALFPH@JOY15@
	DD	0117H
	DD	FLAT:??_C@_05CAONOGDE@JOY16@
	DD	0118H
	DD	FLAT:??_C@_05DJPGNHHF@JOY17@
	DD	0119H
	DD	FLAT:??_C@_05LOGOMLLK@JOY18@
	DD	011aH
	DD	FLAT:??_C@_05KHHFPKPL@JOY19@
	DD	011bH
	DD	FLAT:??_C@_05HEPBPPOL@JOY20@
	DD	011cH
	DD	FLAT:??_C@_05GNOKMOKK@JOY21@
	DD	011dH
	DD	FLAT:??_C@_05EGMHJNGJ@JOY22@
	DD	011eH
	DD	FLAT:??_C@_05FPNMKMCI@JOY23@
	DD	011fH
	DD	FLAT:??_C@_05BAJNDKOP@JOY24@
	DD	0120H
	DD	FLAT:??_C@_05JIGALKO@JOY25@
	DD	0121H
	DD	FLAT:??_C@_05CCKLFIGN@JOY26@
	DD	0122H
	DD	FLAT:??_C@_05DLLAGJCM@JOY27@
	DD	0123H
	DD	FLAT:??_C@_05LMCIHFOD@JOY28@
	DD	0124H
	DD	FLAT:??_C@_05KFDDEEKC@JOY29@
	DD	0125H
	DD	FLAT:??_C@_05HFDDJFNM@JOY30@
	DD	0126H
	DD	FLAT:??_C@_05GMCIKEJN@JOY31@
	DD	0127H
	DD	FLAT:??_C@_05EHAFPHFO@JOY32@
	DD	0128H
	DD	FLAT:??_C@_05FMAGIOFO@HATUP@
	DD	0129H
	DD	FLAT:??_C@_07HMMLCBLO@HATDOWN@
	DD	012aH
	DD	FLAT:??_C@_07IOMPLJIH@HATLEFT@
	DD	012bH
	DD	FLAT:??_C@_08PMCJPCPB@HATRIGHT@
	DD	012cH
	DD	FLAT:??_C@_06GBPPCOAM@HATUP2@
	DD	012dH
	DD	FLAT:??_C@_08MBNFABNL@HATDOWN2@
	DD	012eH
	DD	FLAT:??_C@_08JOCCINEL@HATLEFT2@
	DD	012fH
	DD	FLAT:??_C@_09CHDGLPAJ@HATRIGHT2@
	DD	0130H
	DD	FLAT:??_C@_06HIOEBPEN@HATUP3@
	DD	0131H
	DD	FLAT:??_C@_08NIMODAJK@HATDOWN3@
	DD	0132H
	DD	FLAT:??_C@_08IHDJLMAK@HATLEFT3@
	DD	0133H
	DD	FLAT:??_C@_09DOCNIOEI@HATRIGHT3@
	DD	0134H
	DD	FLAT:??_C@_06DHKFIJIK@HATUP4@
	DD	0135H
	DD	FLAT:??_C@_08JHIPKGFN@HATDOWN4@
	DD	0136H
	DD	FLAT:??_C@_08MIHICKMN@HATLEFT4@
	DD	0137H
	DD	FLAT:??_C@_09HBGMBIIP@HATRIGHT4@
	DD	0138H
	DD	FLAT:??_C@_09EHOHMIBO@DBLMOUSE1@
	DD	0139H
	DD	FLAT:??_C@_09GMMKJLNN@DBLMOUSE2@
	DD	013aH
	DD	FLAT:??_C@_09HFNBKKJM@DBLMOUSE3@
	DD	013bH
	DD	FLAT:??_C@_09DKJADMFL@DBLMOUSE4@
	DD	013cH
	DD	FLAT:??_C@_09CDILANBK@DBLMOUSE5@
	DD	013dH
	DD	FLAT:??_C@_09IKGFONJ@DBLMOUSE6@
	DD	013eH
	DD	FLAT:??_C@_09BBLNGPJI@DBLMOUSE7@
	DD	013fH
	DD	FLAT:??_C@_09JGCFHDFH@DBLMOUSE8@
	DD	01a8H
	DD	FLAT:??_C@_0O@FIHNOIH@DBLSEC_MOUSE2@
	DD	01a9H
	DD	FLAT:??_C@_0O@COKKINEE@DBLSEC_MOUSE1@
	DD	01aaH
	DD	FLAT:??_C@_0O@BMJMOPMG@DBLSEC_MOUSE3@
	DD	01abH
	DD	FLAT:??_C@_0O@FDNNHJAB@DBLSEC_MOUSE4@
	DD	01acH
	DD	FLAT:??_C@_0O@EKMGEIEA@DBLSEC_MOUSE5@
	DD	01adH
	DD	FLAT:??_C@_0O@GBOLBLID@DBLSEC_MOUSE6@
	DD	01aeH
	DD	FLAT:??_C@_0O@HIPACKMC@DBLSEC_MOUSE7@
	DD	01afH
	DD	FLAT:??_C@_0O@PPGIDGAN@DBLSEC_MOUSE8@
	DD	0140H
	DD	FLAT:??_C@_07OIAAFIMI@DBLJOY1@
	DD	0141H
	DD	FLAT:??_C@_07MDCNALAL@DBLJOY2@
	DD	0142H
	DD	FLAT:??_C@_07NKDGDKEK@DBLJOY3@
	DD	0143H
	DD	FLAT:??_C@_07JFHHKMIN@DBLJOY4@
	DD	0144H
	DD	FLAT:??_C@_07IMGMJNMM@DBLJOY5@
	DD	0145H
	DD	FLAT:??_C@_07KHEBMOAP@DBLJOY6@
	DD	0146H
	DD	FLAT:??_C@_07LOFKPPEO@DBLJOY7@
	DD	0147H
	DD	FLAT:??_C@_07DJMCODIB@DBLJOY8@
	DD	0148H
	DD	FLAT:??_C@_07CANJNCMA@DBLJOY9@
	DD	0149H
	DD	FLAT:??_C@_08EKBBHMCJ@DBLJOY10@
	DD	014aH
	DD	FLAT:??_C@_08FDAKENGI@DBLJOY11@
	DD	014bH
	DD	FLAT:??_C@_08HICHBOKL@DBLJOY12@
	DD	014cH
	DD	FLAT:??_C@_08GBDMCPOK@DBLJOY13@
	DD	014dH
	DD	FLAT:??_C@_08COHNLJCN@DBLJOY14@
	DD	014eH
	DD	FLAT:??_C@_08DHGGIIGM@DBLJOY15@
	DD	014fH
	DD	FLAT:??_C@_08BMELNLKP@DBLJOY16@
	DD	0150H
	DD	FLAT:??_C@_08FFAOKOO@DBLJOY17@
	DD	0151H
	DD	FLAT:??_C@_08ICMIPGCB@DBLJOY18@
	DD	0152H
	DD	FLAT:??_C@_08JLNDMHGA@DBLJOY19@
	DD	0153H
	DD	FLAT:??_C@_08EIFHMCHA@DBLJOY20@
	DD	0154H
	DD	FLAT:??_C@_08FBEMPDDB@DBLJOY21@
	DD	0155H
	DD	FLAT:??_C@_08HKGBKAPC@DBLJOY22@
	DD	0156H
	DD	FLAT:??_C@_08GDHKJBLD@DBLJOY23@
	DD	0157H
	DD	FLAT:??_C@_08CMDLAHHE@DBLJOY24@
	DD	0158H
	DD	FLAT:??_C@_08DFCADGDF@DBLJOY25@
	DD	0159H
	DD	FLAT:??_C@_08BOANGFPG@DBLJOY26@
	DD	015aH
	DD	FLAT:??_C@_08HBGFELH@DBLJOY27@
	DD	015bH
	DD	FLAT:??_C@_08IAIOEIHI@DBLJOY28@
	DD	015cH
	DD	FLAT:??_C@_08JJJFHJDJ@DBLJOY29@
	DD	015dH
	DD	FLAT:??_C@_08EJJFKIEH@DBLJOY30@
	DD	015eH
	DD	FLAT:??_C@_08FAIOJJAG@DBLJOY31@
	DD	015fH
	DD	FLAT:??_C@_08HLKDMKMF@DBLJOY32@
	DD	0160H
	DD	FLAT:??_C@_08GAKALDMF@DBLHATUP@
	DD	0161H
	DD	FLAT:??_C@_0L@LGBGACNI@DBLHATDOWN@
	DD	0162H
	DD	FLAT:??_C@_0L@EEBCJKOB@DBLHATLEFT@
	DD	0163H
	DD	FLAT:??_C@_0M@FIDCOLLP@DBLHATRIGHT@
	DD	0164H
	DD	FLAT:??_C@_09GBOMCPN@DBLHATUP2@
	DD	0165H
	DD	FLAT:??_C@_0M@GFMOBIJF@DBLHATDOWN2@
	DD	0166H
	DD	FLAT:??_C@_0M@DKDJJEAF@DBLHATLEFT2@
	DD	0167H
	DD	FLAT:??_C@_0N@LGPGMIIH@DBLHATRIGHT2@
	DD	0168H
	DD	FLAT:??_C@_09BPAFPDLM@DBLHATUP3@
	DD	0169H
	DD	FLAT:??_C@_0M@HMNFCJNE@DBLHATDOWN3@
	DD	016aH
	DD	FLAT:??_C@_0M@CDCCKFEE@DBLHATLEFT3@
	DD	016bH
	DD	FLAT:??_C@_0N@KPONPJMG@DBLHATRIGHT3@
	DD	016cH
	DD	FLAT:??_C@_09FAEEGFHL@DBLHATUP4@
	DD	016dH
	DD	FLAT:??_C@_0M@DDJELPBD@DBLHATDOWN4@
	DD	016eH
	DD	FLAT:??_C@_0M@GMGDDDID@DBLHATLEFT4@
	DD	016fH
	DD	FLAT:??_C@_0N@OAKMGPAB@DBLHATRIGHT4@
	DD	0178H
	DD	FLAT:??_C@_08MPGLJFKD@SEC_JOY1@
	DD	0179H
	DD	FLAT:??_C@_08OEEGMGGA@SEC_JOY2@
	DD	017aH
	DD	FLAT:??_C@_08PNFNPHCB@SEC_JOY3@
	DD	017bH
	DD	FLAT:??_C@_08LCBMGBOG@SEC_JOY4@
	DD	017cH
	DD	FLAT:??_C@_08KLAHFAKH@SEC_JOY5@
	DD	017dH
	DD	FLAT:??_C@_08IACKADGE@SEC_JOY6@
	DD	017eH
	DD	FLAT:??_C@_08JJDBDCCF@SEC_JOY7@
	DD	017fH
	DD	FLAT:??_C@_08BOKJCOOK@SEC_JOY8@
	DD	0180H
	DD	FLAT:??_C@_08HLCBPKL@SEC_JOY9@
	DD	0181H
	DD	FLAT:??_C@_09JAFGKPDE@SEC_JOY10@
	DD	0182H
	DD	FLAT:??_C@_09IJENJOHF@SEC_JOY11@
	DD	0183H
	DD	FLAT:??_C@_09KCGAMNLG@SEC_JOY12@
	DD	0184H
	DD	FLAT:??_C@_09LLHLPMPH@SEC_JOY13@
	DD	0185H
	DD	FLAT:??_C@_09PEDKGKDA@SEC_JOY14@
	DD	0186H
	DD	FLAT:??_C@_09ONCBFLHB@SEC_JOY15@
	DD	0187H
	DD	FLAT:??_C@_09MGAMAILC@SEC_JOY16@
	DD	0188H
	DD	FLAT:??_C@_09NPBHDJPD@SEC_JOY17@
	DD	0189H
	DD	FLAT:??_C@_09FIIPCFDM@SEC_JOY18@
	DD	018aH
	DD	FLAT:??_C@_09EBJEBEHN@SEC_JOY19@
	DD	018bH
	DD	FLAT:??_C@_09JCBABBGN@SEC_JOY20@
	DD	018cH
	DD	FLAT:??_C@_09ILALCACM@SEC_JOY21@
	DD	018dH
	DD	FLAT:??_C@_09KACGHDOP@SEC_JOY22@
	DD	018eH
	DD	FLAT:??_C@_09LJDNECKO@SEC_JOY23@
	DD	018fH
	DD	FLAT:??_C@_09PGHMNEGJ@SEC_JOY24@
	DD	0190H
	DD	FLAT:??_C@_09OPGHOFCI@SEC_JOY25@
	DD	0191H
	DD	FLAT:??_C@_09MEEKLGOL@SEC_JOY26@
	DD	0192H
	DD	FLAT:??_C@_09NNFBIHKK@SEC_JOY27@
	DD	0193H
	DD	FLAT:??_C@_09FKMJJLGF@SEC_JOY28@
	DD	0194H
	DD	FLAT:??_C@_09EDNCKKCE@SEC_JOY29@
	DD	0195H
	DD	FLAT:??_C@_09JDNCHLFK@SEC_JOY30@
	DD	0196H
	DD	FLAT:??_C@_09IKMJEKBL@SEC_JOY31@
	DD	0197H
	DD	FLAT:??_C@_09KBOEBJNI@SEC_JOY32@
	DD	0198H
	DD	FLAT:??_C@_09LKOHGANI@SEC_HATUP@
	DD	0199H
	DD	FLAT:??_C@_0M@FGKADHON@SEC_HATDOWN@
	DD	019aH
	DD	FLAT:??_C@_0M@KEKEKPNE@SEC_HATLEFT@
	DD	019bH
	DD	FLAT:??_C@_0N@OGBJJKJ@SEC_HATRIGHT@
	DD	019cH
	DD	FLAT:??_C@_0L@GFMCOJPH@SEC_HATUP2@
	DD	019dH
	DD	FLAT:??_C@_0N@DDJNGKID@SEC_HATDOWN2@
	DD	019eH
	DD	FLAT:??_C@_0N@GMGKOGBD@SEC_HATLEFT2@
	DD	019fH
	DD	FLAT:??_C@_0O@ECHECOKE@SEC_HATRIGHT2@
	DD	01a0H
	DD	FLAT:??_C@_0L@HMNJNILG@SEC_HATUP3@
	DD	01a1H
	DD	FLAT:??_C@_0N@CKIGFLMC@SEC_HATDOWN3@
	DD	01a2H
	DD	FLAT:??_C@_0N@HFHBNHFC@SEC_HATLEFT3@
	DD	01a3H
	DD	FLAT:??_C@_0O@FLGPBPOF@SEC_HATRIGHT3@
	DD	01a4H
	DD	FLAT:??_C@_0L@DDJIEOHB@SEC_HATUP4@
	DD	01a5H
	DD	FLAT:??_C@_0N@GFMHMNAF@SEC_HATDOWN4@
	DD	01a6H
	DD	FLAT:??_C@_0N@DKDAEBJF@SEC_HATLEFT4@
	DD	01a7H
	DD	FLAT:??_C@_0O@BECOIJCC@SEC_HATRIGHT4@
	DD	01b0H
	DD	FLAT:??_C@_0M@GLHAIMON@DBLSEC_JOY1@
	DD	01b1H
	DD	FLAT:??_C@_0M@EAFNNPCO@DBLSEC_JOY2@
	DD	01b2H
	DD	FLAT:??_C@_0M@FJEGOOGP@DBLSEC_JOY3@
	DD	01b3H
	DD	FLAT:??_C@_0M@BGAHHIKI@DBLSEC_JOY4@
	DD	01b4H
	DD	FLAT:??_C@_0M@PBMEJOJ@DBLSEC_JOY5@
	DD	01b5H
	DD	FLAT:??_C@_0M@CEDBBKCK@DBLSEC_JOY6@
	DD	01b6H
	DD	FLAT:??_C@_0M@DNCKCLGL@DBLSEC_JOY7@
	DD	01b7H
	DD	FLAT:??_C@_0M@LKLCDHKE@DBLSEC_JOY8@
	DD	01b8H
	DD	FLAT:??_C@_0M@KDKJAGOF@DBLSEC_JOY9@
	DD	01b9H
	DD	FLAT:??_C@_0N@BJGNILK@DBLSEC_JOY10@
	DD	01baH
	DD	FLAT:??_C@_0N@BIINOJPL@DBLSEC_JOY11@
	DD	01bbH
	DD	FLAT:??_C@_0N@DDKALKDI@DBLSEC_JOY12@
	DD	01bcH
	DD	FLAT:??_C@_0N@CKLLILHJ@DBLSEC_JOY13@
	DD	01bdH
	DD	FLAT:??_C@_0N@GFPKBNLO@DBLSEC_JOY14@
	DD	01beH
	DD	FLAT:??_C@_0N@HMOBCMPP@DBLSEC_JOY15@
	DD	01bfH
	DD	FLAT:??_C@_0N@FHMMHPDM@DBLSEC_JOY16@
	DD	01c0H
	DD	FLAT:??_C@_0N@EONHEOHN@DBLSEC_JOY17@
	DD	01c1H
	DD	FLAT:??_C@_0N@MJEPFCLC@DBLSEC_JOY18@
	DD	01c2H
	DD	FLAT:??_C@_0N@NAFEGDPD@DBLSEC_JOY19@
	DD	01c3H
	DD	FLAT:??_C@_0N@DNAGGOD@DBLSEC_JOY20@
	DD	01c4H
	DD	FLAT:??_C@_0N@BKMLFHKC@DBLSEC_JOY21@
	DD	01c5H
	DD	FLAT:??_C@_0N@DBOGAEGB@DBLSEC_JOY22@
	DD	01c6H
	DD	FLAT:??_C@_0N@CIPNDFCA@DBLSEC_JOY23@
	DD	01c7H
	DD	FLAT:??_C@_0N@GHLMKDOH@DBLSEC_JOY24@
	DD	01c8H
	DD	FLAT:??_C@_0N@HOKHJCKG@DBLSEC_JOY25@
	DD	01c9H
	DD	FLAT:??_C@_0N@FFIKMBGF@DBLSEC_JOY26@
	DD	01caH
	DD	FLAT:??_C@_0N@EMJBPACE@DBLSEC_JOY27@
	DD	01cbH
	DD	FLAT:??_C@_0N@MLAJOMOL@DBLSEC_JOY28@
	DD	01ccH
	DD	FLAT:??_C@_0N@NCBCNNKK@DBLSEC_JOY29@
	DD	01cdH
	DD	FLAT:??_C@_0N@CBCAMNE@DBLSEC_JOY30@
	DD	01ceH
	DD	FLAT:??_C@_0N@BLAJDNJF@DBLSEC_JOY31@
	DD	01cfH
	DD	FLAT:??_C@_0N@DACEGOFG@DBLSEC_JOY32@
	DD	01d0H
	DD	FLAT:??_C@_0N@CLCHBHFG@DBLSEC_HATUP@
	DD	01d1H
	DD	FLAT:??_C@_0P@DNMBPHHH@DBLSEC_HATDOWN@
	DD	01d2H
	DD	FLAT:??_C@_0P@MPMFGPEO@DBLSEC_HATLEFT@
	DD	01d3H
	DD	FLAT:??_C@_0BA@BONAICDD@DBLSEC_HATRIGHT@
	DD	01d4H
	DD	FLAT:??_C@_0O@GPFDIHKH@DBLSEC_HATUP2@
	DD	01d5H
	DD	FLAT:??_C@_0BA@CDCMHBBJ@DBLSEC_HATDOWN2@
	DD	01d6H
	DD	FLAT:??_C@_0BA@HMNLPNIJ@DBLSEC_HATLEFT2@
	DD	01d7H
	DD	FLAT:??_C@_0BB@FCLOOFOF@DBLSEC_HATRIGHT2@
	DD	01d8H
	DD	FLAT:??_C@_0O@HGEILGOG@DBLSEC_HATUP3@
	DD	01d9H
	DD	FLAT:??_C@_0BA@DKDHEAFI@DBLSEC_HATDOWN3@
	DD	01daH
	DD	FLAT:??_C@_0BA@GFMAMMMI@DBLSEC_HATLEFT3@
	DD	01dbH
	DD	FLAT:??_C@_0BB@ELKFNEKE@DBLSEC_HATRIGHT3@
	DD	01dcH
	DD	FLAT:??_C@_0O@DJAJCACB@DBLSEC_HATUP4@
	DD	01ddH
	DD	FLAT:??_C@_0BA@HFHGNGJP@DBLSEC_HATDOWN4@
	DD	01deH
	DD	FLAT:??_C@_0BA@CKIBFKAP@DBLSEC_HATLEFT4@
	DD	01dfH
	DD	FLAT:??_C@_0BB@EOEECGD@DBLSEC_HATRIGHT4@
_gamecontrolname DD FLAT:??_C@_07DFGIHOIL@nothing@
	DD	FLAT:??_C@_07CJMBKHEI@forward@
	DD	FLAT:??_C@_08DBMDPFJD@backward@
	DD	FLAT:??_C@_06HLPIKOFJ@strafe@
	DD	FLAT:??_C@_0M@JGAFBBPP@straferight@
	DD	FLAT:??_C@_0L@CJGCGFFO@strafeleft@
	DD	FLAT:??_C@_08EODDNPEJ@turnleft@
	DD	FLAT:??_C@_09BFLBMFIC@turnright@
	DD	FLAT:??_C@_0L@OHKMNLAB@weaponnext@
	DD	FLAT:??_C@_0L@NDHKMPGF@weaponprev@
	DD	FLAT:??_C@_0L@NMLDGKPF@normalring@
	DD	FLAT:??_C@_08PKBCLIJJ@autoring@
	DD	FLAT:??_C@_0L@IMNHNCPJ@bouncering@
	DD	FLAT:??_C@_0M@JHBFCHLE@scatterring@
	DD	FLAT:??_C@_0M@ELIJIEHB@grenadering@
	DD	FLAT:??_C@_0O@HMOGBEKJ@explosionring@
	DD	FLAT:??_C@_08BHDDHGFM@railring@
	DD	FLAT:??_C@_04CGHOBBFK@fire@
	DD	FLAT:??_C@_0L@KPJNOLKE@firenormal@
	DD	FLAT:??_C@_08OJGPOIGH@tossflag@
	DD	FLAT:??_C@_03MMGHDJKG@use@
	DD	FLAT:??_C@_05CPCHEFAA@taunt@
	DD	FLAT:??_C@_07KCBEKAG@camleft@
	DD	FLAT:??_C@_08PDJGILBG@camright@
	DD	FLAT:??_C@_08OBMFDFIM@camreset@
	DD	FLAT:??_C@_06FNGHPIEM@lookup@
	DD	FLAT:??_C@_08BAJAOGEH@lookdown@
	DD	FLAT:??_C@_0L@FHIBDANG@centerview@
	DD	FLAT:??_C@_0M@PNPNCAGH@mouseaiming@
	DD	FLAT:??_C@_07FCBEMKKG@talkkey@
	DD	FLAT:??_C@_0M@NJCFFKOM@teamtalkkey@
	DD	FLAT:??_C@_06KBCJDMLG@scores@
	DD	FLAT:??_C@_04NJIOBGCF@jump@
	DD	FLAT:??_C@_07PMJAFAE@console@
	DD	FLAT:??_C@_05PDJBBECF@pause@
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _setcontrol
_TEXT	SEGMENT
_keynum$ = -12						; size = 4
_namectrl$ = -8						; size = 4
_numctrl$ = -4						; size = 4
_gc$ = 8						; size = 4
_na$ = 12						; size = 4
_setcontrol PROC					; COMDAT

; 1151 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1152 : 	INT32 numctrl;
; 1153 : 	const char *namectrl;
; 1154 : 	INT32 keynum;
; 1155 : 
; 1156 : 	namectrl = COM_Argv(1);

  00009	6a 01		 push	 1
  0000b	e8 00 00 00 00	 call	 _COM_Argv
  00010	83 c4 04	 add	 esp, 4
  00013	89 45 f8	 mov	 DWORD PTR _namectrl$[ebp], eax

; 1157 : 	for (numctrl = 0; numctrl < num_gamecontrols && stricmp(namectrl, gamecontrolname[numctrl]);

  00016	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _numctrl$[ebp], 0
  0001d	eb 09		 jmp	 SHORT $LN4@setcontrol
$LN2@setcontrol:

; 1158 : 		numctrl++)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _numctrl$[ebp]
  00022	83 c0 01	 add	 eax, 1
  00025	89 45 fc	 mov	 DWORD PTR _numctrl$[ebp], eax
$LN4@setcontrol:

; 1157 : 	for (numctrl = 0; numctrl < num_gamecontrols && stricmp(namectrl, gamecontrolname[numctrl]);

  00028	83 7d fc 23	 cmp	 DWORD PTR _numctrl$[ebp], 35 ; 00000023H
  0002c	7d 1d		 jge	 SHORT $LN3@setcontrol
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _numctrl$[ebp]
  00031	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR _gamecontrolname[eax*4]
  00038	51		 push	 ecx
  00039	8b 55 f8	 mov	 edx, DWORD PTR _namectrl$[ebp]
  0003c	52		 push	 edx
  0003d	e8 00 00 00 00	 call	 _stricmp
  00042	83 c4 08	 add	 esp, 8
  00045	85 c0		 test	 eax, eax
  00047	74 02		 je	 SHORT $LN3@setcontrol

; 1159 : 		;

  00049	eb d4		 jmp	 SHORT $LN2@setcontrol
$LN3@setcontrol:

; 1160 : 	if (numctrl == num_gamecontrols)

  0004b	83 7d fc 23	 cmp	 DWORD PTR _numctrl$[ebp], 35 ; 00000023H
  0004f	75 16		 jne	 SHORT $LN5@setcontrol

; 1161 : 	{
; 1162 : 		CONS_Printf("Control '%s' unknown\n", namectrl);

  00051	8b 45 f8	 mov	 eax, DWORD PTR _namectrl$[ebp]
  00054	50		 push	 eax
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GHBLBPLB@Control?5?8?$CFs?8?5unknown?6@
  0005a	e8 00 00 00 00	 call	 _CONS_Printf
  0005f	83 c4 08	 add	 esp, 8

; 1163 : 		return;

  00062	e9 80 00 00 00	 jmp	 $LN7@setcontrol
$LN5@setcontrol:

; 1164 : 	}
; 1165 : 	keynum = G_KeyStringtoNum(COM_Argv(2));

  00067	6a 02		 push	 2
  00069	e8 00 00 00 00	 call	 _COM_Argv
  0006e	83 c4 04	 add	 esp, 4
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 _G_KeyStringtoNum
  00077	83 c4 04	 add	 esp, 4
  0007a	89 45 f4	 mov	 DWORD PTR _keynum$[ebp], eax

; 1166 : 	G_CheckDoubleUsage(keynum);

  0007d	8b 45 f4	 mov	 eax, DWORD PTR _keynum$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 _G_CheckDoubleUsage
  00086	83 c4 04	 add	 esp, 4

; 1167 : 	gc[numctrl][0] = keynum;

  00089	8b 45 fc	 mov	 eax, DWORD PTR _numctrl$[ebp]
  0008c	8b 4d 08	 mov	 ecx, DWORD PTR _gc$[ebp]
  0008f	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  00092	b8 04 00 00 00	 mov	 eax, 4
  00097	6b c8 00	 imul	 ecx, eax, 0
  0009a	8b 45 f4	 mov	 eax, DWORD PTR _keynum$[ebp]
  0009d	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 1168 : 
; 1169 : 	if (na == 4)

  000a0	83 7d 0c 04	 cmp	 DWORD PTR _na$[ebp], 4
  000a4	75 29		 jne	 SHORT $LN6@setcontrol

; 1170 : 		gc[numctrl][1] = G_KeyStringtoNum(COM_Argv(3));

  000a6	6a 03		 push	 3
  000a8	e8 00 00 00 00	 call	 _COM_Argv
  000ad	83 c4 04	 add	 esp, 4
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 _G_KeyStringtoNum
  000b6	83 c4 04	 add	 esp, 4
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR _numctrl$[ebp]
  000bc	8b 55 08	 mov	 edx, DWORD PTR _gc$[ebp]
  000bf	8d 0c ca	 lea	 ecx, DWORD PTR [edx+ecx*8]
  000c2	ba 04 00 00 00	 mov	 edx, 4
  000c7	c1 e2 00	 shl	 edx, 0
  000ca	89 04 11	 mov	 DWORD PTR [ecx+edx], eax
  000cd	eb 18		 jmp	 SHORT $LN7@setcontrol
$LN6@setcontrol:

; 1171 : 	else
; 1172 : 		gc[numctrl][1] = 0;

  000cf	8b 45 fc	 mov	 eax, DWORD PTR _numctrl$[ebp]
  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _gc$[ebp]
  000d5	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  000d8	b8 04 00 00 00	 mov	 eax, 4
  000dd	c1 e0 00	 shl	 eax, 0
  000e0	c7 04 02 00 00
	00 00		 mov	 DWORD PTR [edx+eax], 0
$LN7@setcontrol:

; 1173 : }

  000e7	5f		 pop	 edi
  000e8	5e		 pop	 esi
  000e9	5b		 pop	 ebx
  000ea	8b e5		 mov	 esp, ebp
  000ec	5d		 pop	 ebp
  000ed	c3		 ret	 0
_setcontrol ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _G_CheckDoubleClick
_TEXT	SEGMENT
_state$ = 8						; size = 1
_dt$ = 12						; size = 4
_G_CheckDoubleClick PROC				; COMDAT

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 172  : 	if (state != dt->state && dt->time > 1)

  00009	0f b6 45 08	 movzx	 eax, BYTE PTR _state$[ebp]
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR _dt$[ebp]
  00010	0f b6 51 01	 movzx	 edx, BYTE PTR [ecx+1]
  00014	3b c2		 cmp	 eax, edx
  00016	74 4c		 je	 SHORT $LN2@G_CheckDou
  00018	8b 45 0c	 mov	 eax, DWORD PTR _dt$[ebp]
  0001b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0001e	83 f9 01	 cmp	 ecx, 1
  00021	7e 41		 jle	 SHORT $LN2@G_CheckDou

; 173  : 	{
; 174  : 		dt->state = state;

  00023	8b 45 0c	 mov	 eax, DWORD PTR _dt$[ebp]
  00026	8a 4d 08	 mov	 cl, BYTE PTR _state$[ebp]
  00029	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 175  : 		if (state)

  0002c	0f b6 45 08	 movzx	 eax, BYTE PTR _state$[ebp]
  00030	85 c0		 test	 eax, eax
  00032	74 0f		 je	 SHORT $LN4@G_CheckDou

; 176  : 			dt->clicks++;

  00034	8b 45 0c	 mov	 eax, DWORD PTR _dt$[ebp]
  00037	8a 48 02	 mov	 cl, BYTE PTR [eax+2]
  0003a	80 c1 01	 add	 cl, 1
  0003d	8b 55 0c	 mov	 edx, DWORD PTR _dt$[ebp]
  00040	88 4a 02	 mov	 BYTE PTR [edx+2], cl
$LN4@G_CheckDou:

; 177  : 		if (dt->clicks == 2)

  00043	8b 45 0c	 mov	 eax, DWORD PTR _dt$[ebp]
  00046	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  0004a	83 f9 02	 cmp	 ecx, 2
  0004d	75 0d		 jne	 SHORT $LN5@G_CheckDou

; 178  : 		{
; 179  : 			dt->clicks = 0;

  0004f	8b 45 0c	 mov	 eax, DWORD PTR _dt$[ebp]
  00052	c6 40 02 00	 mov	 BYTE PTR [eax+2], 0

; 180  : 			return true;

  00056	b0 01		 mov	 al, 1
  00058	eb 32		 jmp	 SHORT $LN1@G_CheckDou

; 181  : 		}

  0005a	eb 06		 jmp	 SHORT $LN6@G_CheckDou
$LN5@G_CheckDou:

; 182  : 		else
; 183  : 			dt->time = 0;

  0005c	8b 45 0c	 mov	 eax, DWORD PTR _dt$[ebp]
  0005f	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN6@G_CheckDou:

; 184  : 	}

  00062	eb 26		 jmp	 SHORT $LN7@G_CheckDou
$LN2@G_CheckDou:

; 185  : 	else
; 186  : 	{
; 187  : 		dt->time++;

  00064	8b 45 0c	 mov	 eax, DWORD PTR _dt$[ebp]
  00067	8a 08		 mov	 cl, BYTE PTR [eax]
  00069	80 c1 01	 add	 cl, 1
  0006c	8b 55 0c	 mov	 edx, DWORD PTR _dt$[ebp]
  0006f	88 0a		 mov	 BYTE PTR [edx], cl

; 188  : 		if (dt->time > 20)

  00071	8b 45 0c	 mov	 eax, DWORD PTR _dt$[ebp]
  00074	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00077	83 f9 14	 cmp	 ecx, 20			; 00000014H
  0007a	7e 0e		 jle	 SHORT $LN7@G_CheckDou

; 189  : 		{
; 190  : 			dt->clicks = 0;

  0007c	8b 45 0c	 mov	 eax, DWORD PTR _dt$[ebp]
  0007f	c6 40 02 00	 mov	 BYTE PTR [eax+2], 0

; 191  : 			dt->state = 0;

  00083	8b 45 0c	 mov	 eax, DWORD PTR _dt$[ebp]
  00086	c6 40 01 00	 mov	 BYTE PTR [eax+1], 0
$LN7@G_CheckDou:

; 192  : 		}
; 193  : 	}
; 194  : 	return false;

  0008a	32 c0		 xor	 al, al
$LN1@G_CheckDou:

; 195  : }

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
_G_CheckDoubleClick ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _G_CheckDoubleUsage
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_keynum$ = 8						; size = 4
_G_CheckDoubleUsage PROC				; COMDAT

; 1132 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1133 : 	if (cv_controlperkey.value == 1)

  00009	83 3d 14 00 00
	00 01		 cmp	 DWORD PTR _cv_controlperkey+20, 1
  00010	0f 85 d5 00 00
	00		 jne	 $LN3@G_CheckDou

; 1134 : 	{
; 1135 : 		INT32 i;
; 1136 : 		for (i = 0; i < num_gamecontrols; i++)

  00016	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0001d	eb 09		 jmp	 SHORT $LN4@G_CheckDou
$LN2@G_CheckDou:
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00022	83 c0 01	 add	 eax, 1
  00025	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@G_CheckDou:
  00028	83 7d fc 23	 cmp	 DWORD PTR _i$1[ebp], 35	; 00000023H
  0002c	0f 8d b9 00 00
	00		 jge	 $LN3@G_CheckDou

; 1137 : 		{
; 1138 : 			if (gamecontrol[i][0] == keynum)

  00032	b8 04 00 00 00	 mov	 eax, 4
  00037	6b c8 00	 imul	 ecx, eax, 0
  0003a	8b 55 fc	 mov	 edx, DWORD PTR _i$1[ebp]
  0003d	8b 84 d1 00 00
	00 00		 mov	 eax, DWORD PTR _gamecontrol[ecx+edx*8]
  00044	3b 45 08	 cmp	 eax, DWORD PTR _keynum$[ebp]
  00047	75 16		 jne	 SHORT $LN6@G_CheckDou

; 1139 : 				gamecontrol[i][0] = KEY_NULL;

  00049	b8 04 00 00 00	 mov	 eax, 4
  0004e	6b c8 00	 imul	 ecx, eax, 0
  00051	8b 55 fc	 mov	 edx, DWORD PTR _i$1[ebp]
  00054	c7 84 d1 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+edx*8], 0
$LN6@G_CheckDou:

; 1140 : 			if (gamecontrol[i][1] == keynum)

  0005f	b8 04 00 00 00	 mov	 eax, 4
  00064	c1 e0 00	 shl	 eax, 0
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  0006a	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR _gamecontrol[eax+ecx*8]
  00071	3b 55 08	 cmp	 edx, DWORD PTR _keynum$[ebp]
  00074	75 16		 jne	 SHORT $LN7@G_CheckDou

; 1141 : 				gamecontrol[i][1] = KEY_NULL;

  00076	b8 04 00 00 00	 mov	 eax, 4
  0007b	c1 e0 00	 shl	 eax, 0
  0007e	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  00081	c7 84 c8 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _gamecontrol[eax+ecx*8], 0
$LN7@G_CheckDou:

; 1142 : 			if (gamecontrolbis[i][0] == keynum)

  0008c	b8 04 00 00 00	 mov	 eax, 4
  00091	6b c8 00	 imul	 ecx, eax, 0
  00094	8b 55 fc	 mov	 edx, DWORD PTR _i$1[ebp]
  00097	8b 84 d1 00 00
	00 00		 mov	 eax, DWORD PTR _gamecontrolbis[ecx+edx*8]
  0009e	3b 45 08	 cmp	 eax, DWORD PTR _keynum$[ebp]
  000a1	75 16		 jne	 SHORT $LN8@G_CheckDou

; 1143 : 				gamecontrolbis[i][0] = KEY_NULL;

  000a3	b8 04 00 00 00	 mov	 eax, 4
  000a8	6b c8 00	 imul	 ecx, eax, 0
  000ab	8b 55 fc	 mov	 edx, DWORD PTR _i$1[ebp]
  000ae	c7 84 d1 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _gamecontrolbis[ecx+edx*8], 0
$LN8@G_CheckDou:

; 1144 : 			if (gamecontrolbis[i][1] == keynum)

  000b9	b8 04 00 00 00	 mov	 eax, 4
  000be	c1 e0 00	 shl	 eax, 0
  000c1	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  000c4	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR _gamecontrolbis[eax+ecx*8]
  000cb	3b 55 08	 cmp	 edx, DWORD PTR _keynum$[ebp]
  000ce	75 16		 jne	 SHORT $LN9@G_CheckDou

; 1145 : 				gamecontrolbis[i][1] = KEY_NULL;

  000d0	b8 04 00 00 00	 mov	 eax, 4
  000d5	c1 e0 00	 shl	 eax, 0
  000d8	8b 4d fc	 mov	 ecx, DWORD PTR _i$1[ebp]
  000db	c7 84 c8 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _gamecontrolbis[eax+ecx*8], 0
$LN9@G_CheckDou:

; 1146 : 		}

  000e6	e9 34 ff ff ff	 jmp	 $LN2@G_CheckDou
$LN3@G_CheckDou:

; 1147 : 	}
; 1148 : }

  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c3		 ret	 0
_G_CheckDoubleUsage ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _G_SaveKeySetting
_TEXT	SEGMENT
_i$ = -4						; size = 4
_f$ = 8							; size = 4
_G_SaveKeySetting PROC					; COMDAT

; 1105 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1106 : 	INT32 i;
; 1107 : 
; 1108 : 	for (i = 1; i < num_gamecontrols; i++)

  00009	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _i$[ebp], 1
  00010	eb 09		 jmp	 SHORT $LN4@G_SaveKeyS
$LN2@G_SaveKeyS:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN4@G_SaveKeyS:
  0001b	83 7d fc 23	 cmp	 DWORD PTR _i$[ebp], 35	; 00000023H
  0001f	0f 8d 92 00 00
	00		 jge	 $LN3@G_SaveKeyS

; 1109 : 	{
; 1110 : 		fprintf(f, "setcontrol \"%s\" \"%s\"", gamecontrolname[i],

  00025	b8 04 00 00 00	 mov	 eax, 4
  0002a	6b c8 00	 imul	 ecx, eax, 0
  0002d	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00030	8b 84 d1 00 00
	00 00		 mov	 eax, DWORD PTR _gamecontrol[ecx+edx*8]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 _G_KeynumToString
  0003d	83 c4 04	 add	 esp, 4
  00040	50		 push	 eax
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00044	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR _gamecontrolname[ecx*4]
  0004b	52		 push	 edx
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@PPPIDBOD@setcontrol?5?$CC?$CFs?$CC?5?$CC?$CFs?$CC@
  00051	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 _fprintf
  0005a	83 c4 10	 add	 esp, 16			; 00000010H

; 1111 : 			G_KeynumToString(gamecontrol[i][0]));
; 1112 : 
; 1113 : 		if (gamecontrol[i][1])

  0005d	b8 04 00 00 00	 mov	 eax, 4
  00062	c1 e0 00	 shl	 eax, 0
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00068	83 bc c8 00 00
	00 00 00	 cmp	 DWORD PTR _gamecontrol[eax+ecx*8], 0
  00070	74 2f		 je	 SHORT $LN8@G_SaveKeyS

; 1114 : 			fprintf(f, " \"%s\"\n", G_KeynumToString(gamecontrol[i][1]));

  00072	b8 04 00 00 00	 mov	 eax, 4
  00077	c1 e0 00	 shl	 eax, 0
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0007d	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR _gamecontrol[eax+ecx*8]
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 _G_KeynumToString
  0008a	83 c4 04	 add	 esp, 4
  0008d	50		 push	 eax
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_06FGMHGICC@?5?$CC?$CFs?$CC?6@
  00093	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 _fprintf
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	eb 11		 jmp	 SHORT $LN9@G_SaveKeyS
$LN8@G_SaveKeyS:

; 1115 : 		else
; 1116 : 			fprintf(f, "\n");

  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000a6	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 _fprintf
  000af	83 c4 08	 add	 esp, 8
$LN9@G_SaveKeyS:

; 1117 : 	}

  000b2	e9 5b ff ff ff	 jmp	 $LN2@G_SaveKeyS
$LN3@G_SaveKeyS:

; 1118 : 
; 1119 : 	for (i = 1; i < num_gamecontrols; i++)

  000b7	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _i$[ebp], 1
  000be	eb 09		 jmp	 SHORT $LN7@G_SaveKeyS
$LN5@G_SaveKeyS:
  000c0	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000c3	83 c0 01	 add	 eax, 1
  000c6	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN7@G_SaveKeyS:
  000c9	83 7d fc 23	 cmp	 DWORD PTR _i$[ebp], 35	; 00000023H
  000cd	0f 8d 92 00 00
	00		 jge	 $LN6@G_SaveKeyS

; 1120 : 	{
; 1121 : 		fprintf(f, "setcontrol2 \"%s\" \"%s\"", gamecontrolname[i],

  000d3	b8 04 00 00 00	 mov	 eax, 4
  000d8	6b c8 00	 imul	 ecx, eax, 0
  000db	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  000de	8b 84 d1 00 00
	00 00		 mov	 eax, DWORD PTR _gamecontrolbis[ecx+edx*8]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 _G_KeynumToString
  000eb	83 c4 04	 add	 esp, 4
  000ee	50		 push	 eax
  000ef	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  000f2	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR _gamecontrolname[ecx*4]
  000f9	52		 push	 edx
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LHHGGPGH@setcontrol2?5?$CC?$CFs?$CC?5?$CC?$CFs?$CC@
  000ff	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 _fprintf
  00108	83 c4 10	 add	 esp, 16			; 00000010H

; 1122 : 			G_KeynumToString(gamecontrolbis[i][0]));
; 1123 : 
; 1124 : 		if (gamecontrolbis[i][1])

  0010b	b8 04 00 00 00	 mov	 eax, 4
  00110	c1 e0 00	 shl	 eax, 0
  00113	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00116	83 bc c8 00 00
	00 00 00	 cmp	 DWORD PTR _gamecontrolbis[eax+ecx*8], 0
  0011e	74 2f		 je	 SHORT $LN10@G_SaveKeyS

; 1125 : 			fprintf(f, " \"%s\"\n", G_KeynumToString(gamecontrolbis[i][1]));

  00120	b8 04 00 00 00	 mov	 eax, 4
  00125	c1 e0 00	 shl	 eax, 0
  00128	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0012b	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR _gamecontrolbis[eax+ecx*8]
  00132	52		 push	 edx
  00133	e8 00 00 00 00	 call	 _G_KeynumToString
  00138	83 c4 04	 add	 esp, 4
  0013b	50		 push	 eax
  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_06FGMHGICC@?5?$CC?$CFs?$CC?6@
  00141	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 _fprintf
  0014a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014d	eb 11		 jmp	 SHORT $LN11@G_SaveKeyS
$LN10@G_SaveKeyS:

; 1126 : 		else
; 1127 : 			fprintf(f, "\n");

  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00154	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]
  00157	50		 push	 eax
  00158	e8 00 00 00 00	 call	 _fprintf
  0015d	83 c4 08	 add	 esp, 8
$LN11@G_SaveKeyS:

; 1128 : 	}

  00160	e9 5b ff ff ff	 jmp	 $LN5@G_SaveKeyS
$LN6@G_SaveKeyS:

; 1129 : }

  00165	5f		 pop	 edi
  00166	5e		 pop	 esi
  00167	5b		 pop	 ebx
  00168	8b e5		 mov	 esp, ebp
  0016a	5d		 pop	 ebp
  0016b	c3		 ret	 0
_G_SaveKeySetting ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _G_Controldefault
_TEXT	SEGMENT
_G_Controldefault PROC					; COMDAT

; 1035 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1036 : 	gamecontrol[gc_forward    ][0] = KEY_UPARROW;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	c1 e0 00	 shl	 eax, 0
  00011	b9 04 00 00 00	 mov	 ecx, 4
  00016	6b d1 00	 imul	 edx, ecx, 0
  00019	c7 84 10 00 00
	00 00 e6 00 00
	00		 mov	 DWORD PTR _gamecontrol[eax+edx], 230 ; 000000e6H

; 1037 : 	gamecontrol[gc_forward    ][1] = 'w';

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	c1 e0 00	 shl	 eax, 0
  0002c	b9 04 00 00 00	 mov	 ecx, 4
  00031	c1 e1 00	 shl	 ecx, 0
  00034	c7 84 08 00 00
	00 00 77 00 00
	00		 mov	 DWORD PTR _gamecontrol[eax+ecx], 119 ; 00000077H

; 1038 : 	gamecontrol[gc_backward   ][0] = KEY_DOWNARROW;

  0003f	b8 08 00 00 00	 mov	 eax, 8
  00044	d1 e0		 shl	 eax, 1
  00046	b9 04 00 00 00	 mov	 ecx, 4
  0004b	6b d1 00	 imul	 edx, ecx, 0
  0004e	c7 84 10 00 00
	00 00 ee 00 00
	00		 mov	 DWORD PTR _gamecontrol[eax+edx], 238 ; 000000eeH

; 1039 : 	gamecontrol[gc_backward   ][1] = 's';

  00059	b8 08 00 00 00	 mov	 eax, 8
  0005e	d1 e0		 shl	 eax, 1
  00060	b9 04 00 00 00	 mov	 ecx, 4
  00065	c1 e1 00	 shl	 ecx, 0
  00068	c7 84 08 00 00
	00 00 73 00 00
	00		 mov	 DWORD PTR _gamecontrol[eax+ecx], 115 ; 00000073H

; 1040 : 	gamecontrol[gc_strafe     ][0] = KEY_RALT;

  00073	b8 08 00 00 00	 mov	 eax, 8
  00078	6b c8 03	 imul	 ecx, eax, 3
  0007b	ba 04 00 00 00	 mov	 edx, 4
  00080	6b c2 00	 imul	 eax, edx, 0
  00083	c7 84 01 00 00
	00 00 b9 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 185 ; 000000b9H

; 1041 : 	gamecontrol[gc_straferight][0] = 'd';

  0008e	b8 08 00 00 00	 mov	 eax, 8
  00093	c1 e0 02	 shl	 eax, 2
  00096	b9 04 00 00 00	 mov	 ecx, 4
  0009b	6b d1 00	 imul	 edx, ecx, 0
  0009e	c7 84 10 00 00
	00 00 64 00 00
	00		 mov	 DWORD PTR _gamecontrol[eax+edx], 100 ; 00000064H

; 1042 : 	gamecontrol[gc_strafeleft ][0] = 'a';

  000a9	b8 08 00 00 00	 mov	 eax, 8
  000ae	6b c8 05	 imul	 ecx, eax, 5
  000b1	ba 04 00 00 00	 mov	 edx, 4
  000b6	6b c2 00	 imul	 eax, edx, 0
  000b9	c7 84 01 00 00
	00 00 61 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 97 ; 00000061H

; 1043 : 	gamecontrol[gc_turnleft   ][0] = KEY_LEFTARROW;

  000c4	b8 08 00 00 00	 mov	 eax, 8
  000c9	6b c8 06	 imul	 ecx, eax, 6
  000cc	ba 04 00 00 00	 mov	 edx, 4
  000d1	6b c2 00	 imul	 eax, edx, 0
  000d4	c7 84 01 00 00
	00 00 e9 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 233 ; 000000e9H

; 1044 : 	gamecontrol[gc_turnright  ][0] = KEY_RIGHTARROW;

  000df	b8 08 00 00 00	 mov	 eax, 8
  000e4	6b c8 07	 imul	 ecx, eax, 7
  000e7	ba 04 00 00 00	 mov	 edx, 4
  000ec	6b c2 00	 imul	 eax, edx, 0
  000ef	c7 84 01 00 00
	00 00 eb 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 235 ; 000000ebH

; 1045 : 	gamecontrol[gc_weaponnext ][0] = 'e';

  000fa	b8 08 00 00 00	 mov	 eax, 8
  000ff	c1 e0 03	 shl	 eax, 3
  00102	b9 04 00 00 00	 mov	 ecx, 4
  00107	6b d1 00	 imul	 edx, ecx, 0
  0010a	c7 84 10 00 00
	00 00 65 00 00
	00		 mov	 DWORD PTR _gamecontrol[eax+edx], 101 ; 00000065H

; 1046 : 	gamecontrol[gc_weaponprev ][0] = 'q';

  00115	b8 08 00 00 00	 mov	 eax, 8
  0011a	6b c8 09	 imul	 ecx, eax, 9
  0011d	ba 04 00 00 00	 mov	 edx, 4
  00122	6b c2 00	 imul	 eax, edx, 0
  00125	c7 84 01 00 00
	00 00 71 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 113 ; 00000071H

; 1047 : 	gamecontrol[gc_normalring ][0] = '1';

  00130	b8 08 00 00 00	 mov	 eax, 8
  00135	6b c8 0a	 imul	 ecx, eax, 10
  00138	ba 04 00 00 00	 mov	 edx, 4
  0013d	6b c2 00	 imul	 eax, edx, 0
  00140	c7 84 01 00 00
	00 00 31 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 49 ; 00000031H

; 1048 : 	gamecontrol[gc_autoring   ][0] = '2';

  0014b	b8 08 00 00 00	 mov	 eax, 8
  00150	6b c8 0b	 imul	 ecx, eax, 11
  00153	ba 04 00 00 00	 mov	 edx, 4
  00158	6b c2 00	 imul	 eax, edx, 0
  0015b	c7 84 01 00 00
	00 00 32 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 50 ; 00000032H

; 1049 : 	gamecontrol[gc_bouncering ][0] = '3';

  00166	b8 08 00 00 00	 mov	 eax, 8
  0016b	6b c8 0c	 imul	 ecx, eax, 12
  0016e	ba 04 00 00 00	 mov	 edx, 4
  00173	6b c2 00	 imul	 eax, edx, 0
  00176	c7 84 01 00 00
	00 00 33 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 51 ; 00000033H

; 1050 : 	gamecontrol[gc_scatterring][0] = '4';

  00181	b8 08 00 00 00	 mov	 eax, 8
  00186	6b c8 0d	 imul	 ecx, eax, 13
  00189	ba 04 00 00 00	 mov	 edx, 4
  0018e	6b c2 00	 imul	 eax, edx, 0
  00191	c7 84 01 00 00
	00 00 34 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 52 ; 00000034H

; 1051 : 	gamecontrol[gc_grenadering][0] = '5';

  0019c	b8 08 00 00 00	 mov	 eax, 8
  001a1	6b c8 0e	 imul	 ecx, eax, 14
  001a4	ba 04 00 00 00	 mov	 edx, 4
  001a9	6b c2 00	 imul	 eax, edx, 0
  001ac	c7 84 01 00 00
	00 00 35 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 53 ; 00000035H

; 1052 : 	gamecontrol[gc_explosionring][0] = '6';

  001b7	b8 08 00 00 00	 mov	 eax, 8
  001bc	6b c8 0f	 imul	 ecx, eax, 15
  001bf	ba 04 00 00 00	 mov	 edx, 4
  001c4	6b c2 00	 imul	 eax, edx, 0
  001c7	c7 84 01 00 00
	00 00 36 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 54 ; 00000036H

; 1053 : 	gamecontrol[gc_railring   ][0] = '7';

  001d2	b8 08 00 00 00	 mov	 eax, 8
  001d7	c1 e0 04	 shl	 eax, 4
  001da	b9 04 00 00 00	 mov	 ecx, 4
  001df	6b d1 00	 imul	 edx, ecx, 0
  001e2	c7 84 10 00 00
	00 00 37 00 00
	00		 mov	 DWORD PTR _gamecontrol[eax+edx], 55 ; 00000037H

; 1054 : 	gamecontrol[gc_fire       ][0] = KEY_RCTRL;

  001ed	b8 08 00 00 00	 mov	 eax, 8
  001f2	6b c8 11	 imul	 ecx, eax, 17
  001f5	ba 04 00 00 00	 mov	 edx, 4
  001fa	6b c2 00	 imul	 eax, edx, 0
  001fd	c7 84 01 00 00
	00 00 9e 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 158 ; 0000009eH

; 1055 : 	gamecontrol[gc_fire       ][1] = KEY_MOUSE1+0;

  00208	b8 08 00 00 00	 mov	 eax, 8
  0020d	6b c8 11	 imul	 ecx, eax, 17
  00210	ba 04 00 00 00	 mov	 edx, 4
  00215	c1 e2 00	 shl	 edx, 0
  00218	c7 84 11 00 00
	00 00 00 01 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+edx], 256 ; 00000100H

; 1056 : 	gamecontrol[gc_firenormal ][0] = 'c';

  00223	b8 08 00 00 00	 mov	 eax, 8
  00228	6b c8 12	 imul	 ecx, eax, 18
  0022b	ba 04 00 00 00	 mov	 edx, 4
  00230	6b c2 00	 imul	 eax, edx, 0
  00233	c7 84 01 00 00
	00 00 63 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 99 ; 00000063H

; 1057 : 	gamecontrol[gc_tossflag   ][0] = '\'';

  0023e	b8 08 00 00 00	 mov	 eax, 8
  00243	6b c8 13	 imul	 ecx, eax, 19
  00246	ba 04 00 00 00	 mov	 edx, 4
  0024b	6b c2 00	 imul	 eax, edx, 0
  0024e	c7 84 01 00 00
	00 00 27 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 39 ; 00000027H

; 1058 : 	gamecontrol[gc_use        ][0] = 'x';

  00259	b8 08 00 00 00	 mov	 eax, 8
  0025e	6b c8 14	 imul	 ecx, eax, 20
  00261	ba 04 00 00 00	 mov	 edx, 4
  00266	6b c2 00	 imul	 eax, edx, 0
  00269	c7 84 01 00 00
	00 00 78 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 120 ; 00000078H

; 1059 : 	gamecontrol[gc_taunt      ][0] = 'v';

  00274	b8 08 00 00 00	 mov	 eax, 8
  00279	6b c8 15	 imul	 ecx, eax, 21
  0027c	ba 04 00 00 00	 mov	 edx, 4
  00281	6b c2 00	 imul	 eax, edx, 0
  00284	c7 84 01 00 00
	00 00 76 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 118 ; 00000076H

; 1060 : 	gamecontrol[gc_camleft    ][0] = '[';

  0028f	b8 08 00 00 00	 mov	 eax, 8
  00294	6b c8 16	 imul	 ecx, eax, 22
  00297	ba 04 00 00 00	 mov	 edx, 4
  0029c	6b c2 00	 imul	 eax, edx, 0
  0029f	c7 84 01 00 00
	00 00 5b 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 91 ; 0000005bH

; 1061 : 	gamecontrol[gc_camright   ][0] = ']';

  002aa	b8 08 00 00 00	 mov	 eax, 8
  002af	6b c8 17	 imul	 ecx, eax, 23
  002b2	ba 04 00 00 00	 mov	 edx, 4
  002b7	6b c2 00	 imul	 eax, edx, 0
  002ba	c7 84 01 00 00
	00 00 5d 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 93 ; 0000005dH

; 1062 : 	gamecontrol[gc_camreset   ][0] = 'r';

  002c5	b8 08 00 00 00	 mov	 eax, 8
  002ca	6b c8 18	 imul	 ecx, eax, 24
  002cd	ba 04 00 00 00	 mov	 edx, 4
  002d2	6b c2 00	 imul	 eax, edx, 0
  002d5	c7 84 01 00 00
	00 00 72 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 114 ; 00000072H

; 1063 : 	gamecontrol[gc_lookup     ][0] = KEY_PGUP;

  002e0	b8 08 00 00 00	 mov	 eax, 8
  002e5	6b c8 19	 imul	 ecx, eax, 25
  002e8	ba 04 00 00 00	 mov	 edx, 4
  002ed	6b c2 00	 imul	 eax, edx, 0
  002f0	c7 84 01 00 00
	00 00 e7 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 231 ; 000000e7H

; 1064 : 	gamecontrol[gc_lookdown   ][0] = KEY_PGDN;

  002fb	b8 08 00 00 00	 mov	 eax, 8
  00300	6b c8 1a	 imul	 ecx, eax, 26
  00303	ba 04 00 00 00	 mov	 edx, 4
  00308	6b c2 00	 imul	 eax, edx, 0
  0030b	c7 84 01 00 00
	00 00 ef 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 239 ; 000000efH

; 1065 : 	gamecontrol[gc_centerview ][0] = KEY_END;

  00316	b8 08 00 00 00	 mov	 eax, 8
  0031b	6b c8 1b	 imul	 ecx, eax, 27
  0031e	ba 04 00 00 00	 mov	 edx, 4
  00323	6b c2 00	 imul	 eax, edx, 0
  00326	c7 84 01 00 00
	00 00 ed 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 237 ; 000000edH

; 1066 : 	gamecontrol[gc_talkkey    ][0] = 't';

  00331	b8 08 00 00 00	 mov	 eax, 8
  00336	6b c8 1d	 imul	 ecx, eax, 29
  00339	ba 04 00 00 00	 mov	 edx, 4
  0033e	6b c2 00	 imul	 eax, edx, 0
  00341	c7 84 01 00 00
	00 00 74 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 116 ; 00000074H

; 1067 : 	gamecontrol[gc_teamkey    ][0] = 'y';

  0034c	b8 08 00 00 00	 mov	 eax, 8
  00351	6b c8 1e	 imul	 ecx, eax, 30
  00354	ba 04 00 00 00	 mov	 edx, 4
  00359	6b c2 00	 imul	 eax, edx, 0
  0035c	c7 84 01 00 00
	00 00 79 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 121 ; 00000079H

; 1068 : 	gamecontrol[gc_scores     ][0] = KEY_TAB;

  00367	b8 08 00 00 00	 mov	 eax, 8
  0036c	6b c8 1f	 imul	 ecx, eax, 31
  0036f	ba 04 00 00 00	 mov	 edx, 4
  00374	6b c2 00	 imul	 eax, edx, 0
  00377	c7 84 01 00 00
	00 00 09 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 9

; 1069 : 	gamecontrol[gc_jump       ][0] = 'z';

  00382	b8 08 00 00 00	 mov	 eax, 8
  00387	c1 e0 05	 shl	 eax, 5
  0038a	b9 04 00 00 00	 mov	 ecx, 4
  0038f	6b d1 00	 imul	 edx, ecx, 0
  00392	c7 84 10 00 00
	00 00 7a 00 00
	00		 mov	 DWORD PTR _gamecontrol[eax+edx], 122 ; 0000007aH

; 1070 : 	gamecontrol[gc_jump       ][1] = KEY_MOUSE1+1;

  0039d	b8 08 00 00 00	 mov	 eax, 8
  003a2	c1 e0 05	 shl	 eax, 5
  003a5	b9 04 00 00 00	 mov	 ecx, 4
  003aa	c1 e1 00	 shl	 ecx, 0
  003ad	c7 84 08 00 00
	00 00 01 01 00
	00		 mov	 DWORD PTR _gamecontrol[eax+ecx], 257 ; 00000101H

; 1071 : 	gamecontrol[gc_console    ][0] = KEY_CONSOLE;

  003b8	b8 08 00 00 00	 mov	 eax, 8
  003bd	6b c8 21	 imul	 ecx, eax, 33
  003c0	ba 04 00 00 00	 mov	 edx, 4
  003c5	6b c2 00	 imul	 eax, edx, 0
  003c8	c7 84 01 00 00
	00 00 60 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 96 ; 00000060H

; 1072 : 	gamecontrol[gc_pause      ][0] = KEY_PAUSE;

  003d3	b8 08 00 00 00	 mov	 eax, 8
  003d8	6b c8 22	 imul	 ecx, eax, 34
  003db	ba 04 00 00 00	 mov	 edx, 4
  003e0	6b c2 00	 imul	 eax, edx, 0
  003e3	c7 84 01 00 00
	00 00 ff 00 00
	00		 mov	 DWORD PTR _gamecontrol[ecx+eax], 255 ; 000000ffH

; 1073 : #ifdef WMINPUT
; 1074 : 	gamecontrol[gc_forward    ][0] = KEY_JOY1+02; //UP
; 1075 : 	gamecontrol[gc_backward   ][0] = KEY_JOY1+03; //DOWN
; 1076 : 	gamecontrol[gc_turnleft   ][0] = KEY_JOY1+04; //LEFT
; 1077 : 	gamecontrol[gc_turnright  ][0] = KEY_JOY1+05; //RIGHIT
; 1078 : 	gamecontrol[gc_weaponnext ][0] = KEY_JOY1+10; //y
; 1079 : 	gamecontrol[gc_weaponprev ][0] = KEY_JOY1+9; //x
; 1080 : 	gamecontrol[gc_fire       ][0] = KEY_JOY1+12; //L
; 1081 : 	gamecontrol[gc_firenormal ][0] = KEY_JOY1+13; //R
; 1082 : 	gamecontrol[gc_use        ][0] = KEY_JOY1+00; //B
; 1083 : 	gamecontrol[gc_use        ][1] = KEY_JOY1+07; //b
; 1084 : 	gamecontrol[gc_jump       ][0] = KEY_JOY1+01; //A
; 1085 : 	gamecontrol[gc_jump       ][1] = KEY_JOY1+06; //a
; 1086 : 	gamecontrol[gc_pause      ][0] = KEY_JOY1+18; //Home
; 1087 : 	gamecontrolbis[gc_forward    ][0] = KEY_2JOY1+02; //UP
; 1088 : 	gamecontrolbis[gc_backward   ][0] = KEY_2JOY1+03; //DOWN
; 1089 : 	gamecontrolbis[gc_turnleft   ][0] = KEY_2JOY1+04; //LEFT
; 1090 : 	gamecontrolbis[gc_turnright  ][0] = KEY_2JOY1+05; //RIGHIT
; 1091 : 	gamecontrolbis[gc_weaponnext ][0] = KEY_2JOY1+10; //y
; 1092 : 	gamecontrolbis[gc_weaponprev ][0] = KEY_2JOY1+9; //x
; 1093 : 	gamecontrolbis[gc_fire       ][0] = KEY_2JOY1+12; //L
; 1094 : 	gamecontrolbis[gc_firenormal ][0] = KEY_2JOY1+13; //R
; 1095 : 	gamecontrolbis[gc_use        ][0] = KEY_2JOY1+00; //B
; 1096 : 	gamecontrolbis[gc_use        ][1] = KEY_2JOY1+07; //b
; 1097 : 	gamecontrolbis[gc_jump       ][0] = KEY_2JOY1+01; //A
; 1098 : 	gamecontrolbis[gc_jump       ][1] = KEY_2JOY1+06; //a
; 1099 : 	gamecontrolbis[gc_pause      ][0] = KEY_2JOY1+18; //Home
; 1100 : #endif
; 1101 : }

  003ee	5f		 pop	 edi
  003ef	5e		 pop	 esi
  003f0	5b		 pop	 ebx
  003f1	8b e5		 mov	 esp, ebp
  003f3	5d		 pop	 ebp
  003f4	c3		 ret	 0
_G_Controldefault ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _Command_Setcontrol2_f
_TEXT	SEGMENT
_na$ = -4						; size = 4
_Command_Setcontrol2_f PROC				; COMDAT

; 1191 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1192 : 	INT32 na;
; 1193 : 
; 1194 : 	na = (INT32)COM_Argc();

  00009	e8 00 00 00 00	 call	 _COM_Argc
  0000e	89 45 fc	 mov	 DWORD PTR _na$[ebp], eax

; 1195 : 
; 1196 : 	if (na != 3 && na != 4)

  00011	83 7d fc 03	 cmp	 DWORD PTR _na$[ebp], 3
  00015	74 15		 je	 SHORT $LN2@Command_Se
  00017	83 7d fc 04	 cmp	 DWORD PTR _na$[ebp], 4
  0001b	74 0f		 je	 SHORT $LN2@Command_Se

; 1197 : 	{
; 1198 : 		CONS_Printf("setcontrol2 <controlname> <keyname> [<2nd keyname>]\n");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@KMKKDCIH@setcontrol2?5?$DMcontrolname?$DO?5?$DMkeyn@
  00022	e8 00 00 00 00	 call	 _CONS_Printf
  00027	83 c4 04	 add	 esp, 4

; 1199 : 		return;

  0002a	eb 11		 jmp	 SHORT $LN1@Command_Se
$LN2@Command_Se:

; 1200 : 	}
; 1201 : 
; 1202 : 	setcontrol(gamecontrolbis, na);

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _na$[ebp]
  0002f	50		 push	 eax
  00030	68 00 00 00 00	 push	 OFFSET _gamecontrolbis
  00035	e8 00 00 00 00	 call	 _setcontrol
  0003a	83 c4 08	 add	 esp, 8
$LN1@Command_Se:

; 1203 : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
_Command_Setcontrol2_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _Command_Setcontrol_f
_TEXT	SEGMENT
_na$ = -4						; size = 4
_Command_Setcontrol_f PROC				; COMDAT

; 1176 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1177 : 	INT32 na;
; 1178 : 
; 1179 : 	na = (INT32)COM_Argc();

  00009	e8 00 00 00 00	 call	 _COM_Argc
  0000e	89 45 fc	 mov	 DWORD PTR _na$[ebp], eax

; 1180 : 
; 1181 : 	if (na != 3 && na != 4)

  00011	83 7d fc 03	 cmp	 DWORD PTR _na$[ebp], 3
  00015	74 15		 je	 SHORT $LN2@Command_Se
  00017	83 7d fc 04	 cmp	 DWORD PTR _na$[ebp], 4
  0001b	74 0f		 je	 SHORT $LN2@Command_Se

; 1182 : 	{
; 1183 : 		CONS_Printf("setcontrol <controlname> <keyname> [<2nd keyname>]\n");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@OCBDLJAA@setcontrol?5?$DMcontrolname?$DO?5?$DMkeyna@
  00022	e8 00 00 00 00	 call	 _CONS_Printf
  00027	83 c4 04	 add	 esp, 4

; 1184 : 		return;

  0002a	eb 11		 jmp	 SHORT $LN1@Command_Se
$LN2@Command_Se:

; 1185 : 	}
; 1186 : 
; 1187 : 	setcontrol(gamecontrol, na);

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _na$[ebp]
  0002f	50		 push	 eax
  00030	68 00 00 00 00	 push	 OFFSET _gamecontrol
  00035	e8 00 00 00 00	 call	 _setcontrol
  0003a	83 c4 08	 add	 esp, 8
$LN1@Command_Se:

; 1188 : }

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
_Command_Setcontrol_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _G_ClearControlKeys
_TEXT	SEGMENT
_setupcontrols$ = 8					; size = 4
_control$ = 12						; size = 4
_G_ClearControlKeys PROC				; COMDAT

; 896  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 897  : 	setupcontrols[control][0] = KEY_NULL;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _control$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _setupcontrols$[ebp]
  0000f	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  00012	b8 04 00 00 00	 mov	 eax, 4
  00017	6b c8 00	 imul	 ecx, eax, 0
  0001a	c7 04 0a 00 00
	00 00		 mov	 DWORD PTR [edx+ecx], 0

; 898  : 	setupcontrols[control][1] = KEY_NULL;

  00021	8b 45 0c	 mov	 eax, DWORD PTR _control$[ebp]
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _setupcontrols$[ebp]
  00027	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  0002a	b8 04 00 00 00	 mov	 eax, 4
  0002f	c1 e0 00	 shl	 eax, 0
  00032	c7 04 02 00 00
	00 00		 mov	 DWORD PTR [edx+eax], 0

; 899  : }

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
_G_ClearControlKeys ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _G_KeyStringtoNum
_TEXT	SEGMENT
_j$ = -4						; size = 4
_keystr$ = 8						; size = 4
_G_KeyStringtoNum PROC					; COMDAT

; 930  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 931  : 	UINT32 j;
; 932  : 
; 933  : 	if (!keystr[1] && keystr[0] > ' ' && keystr[0] <= 'z')

  00009	b8 01 00 00 00	 mov	 eax, 1
  0000e	c1 e0 00	 shl	 eax, 0
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _keystr$[ebp]
  00014	0f be 14 01	 movsx	 edx, BYTE PTR [ecx+eax]
  00018	85 d2		 test	 edx, edx
  0001a	75 39		 jne	 SHORT $LN5@G_KeyStrin
  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	6b c8 00	 imul	 ecx, eax, 0
  00024	8b 55 08	 mov	 edx, DWORD PTR _keystr$[ebp]
  00027	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  0002b	83 f8 20	 cmp	 eax, 32			; 00000020H
  0002e	7e 25		 jle	 SHORT $LN5@G_KeyStrin
  00030	b8 01 00 00 00	 mov	 eax, 1
  00035	6b c8 00	 imul	 ecx, eax, 0
  00038	8b 55 08	 mov	 edx, DWORD PTR _keystr$[ebp]
  0003b	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  0003f	83 f8 7a	 cmp	 eax, 122		; 0000007aH
  00042	7f 11		 jg	 SHORT $LN5@G_KeyStrin

; 934  : 		return keystr[0];

  00044	b8 01 00 00 00	 mov	 eax, 1
  00049	6b c8 00	 imul	 ecx, eax, 0
  0004c	8b 55 08	 mov	 edx, DWORD PTR _keystr$[ebp]
  0004f	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  00053	eb 6d		 jmp	 SHORT $LN1@G_KeyStrin
$LN5@G_KeyStrin:

; 935  : 
; 936  : 	for (j = 0; j < NUMKEYNAMES; j++)

  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _j$[ebp], 0
  0005c	eb 09		 jmp	 SHORT $LN4@G_KeyStrin
$LN2@G_KeyStrin:
  0005e	8b 45 fc	 mov	 eax, DWORD PTR _j$[ebp]
  00061	83 c0 01	 add	 eax, 1
  00064	89 45 fc	 mov	 DWORD PTR _j$[ebp], eax
$LN4@G_KeyStrin:
  00067	81 7d fc 1c 01
	00 00		 cmp	 DWORD PTR _j$[ebp], 284	; 0000011cH
  0006e	73 29		 jae	 SHORT $LN3@G_KeyStrin

; 937  : 		if (!stricmp(keynames[j].name, keystr))

  00070	8b 45 08	 mov	 eax, DWORD PTR _keystr$[ebp]
  00073	50		 push	 eax
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _j$[ebp]
  00077	8b 14 cd 04 00
	00 00		 mov	 edx, DWORD PTR _keynames[ecx*8+4]
  0007e	52		 push	 edx
  0007f	e8 00 00 00 00	 call	 _stricmp
  00084	83 c4 08	 add	 esp, 8
  00087	85 c0		 test	 eax, eax
  00089	75 0c		 jne	 SHORT $LN6@G_KeyStrin

; 938  : 			return keynames[j].keynum;

  0008b	8b 45 fc	 mov	 eax, DWORD PTR _j$[ebp]
  0008e	8b 04 c5 00 00
	00 00		 mov	 eax, DWORD PTR _keynames[eax*8]
  00095	eb 2b		 jmp	 SHORT $LN1@G_KeyStrin
$LN6@G_KeyStrin:
  00097	eb c5		 jmp	 SHORT $LN2@G_KeyStrin
$LN3@G_KeyStrin:

; 939  : 
; 940  : 	if (strlen(keystr) > 3)

  00099	8b 45 08	 mov	 eax, DWORD PTR _keystr$[ebp]
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 _strlen
  000a2	83 c4 04	 add	 esp, 4
  000a5	83 f8 03	 cmp	 eax, 3
  000a8	76 16		 jbe	 SHORT $LN7@G_KeyStrin

; 941  : 		return atoi(&keystr[3]);

  000aa	b8 01 00 00 00	 mov	 eax, 1
  000af	6b c8 03	 imul	 ecx, eax, 3
  000b2	03 4d 08	 add	 ecx, DWORD PTR _keystr$[ebp]
  000b5	51		 push	 ecx
  000b6	e8 00 00 00 00	 call	 _atoi
  000bb	83 c4 04	 add	 esp, 4
  000be	eb 02		 jmp	 SHORT $LN1@G_KeyStrin
$LN7@G_KeyStrin:

; 942  : 
; 943  : 	return 0;

  000c0	33 c0		 xor	 eax, eax
$LN1@G_KeyStrin:

; 944  : }

  000c2	5f		 pop	 edi
  000c3	5e		 pop	 esi
  000c4	5b		 pop	 ebx
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c3		 ret	 0
_G_KeyStringtoNum ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _G_KeynumToString
_TEXT	SEGMENT
$T1 = -72						; size = 4
_j$ = -4						; size = 4
_keynum$ = 8						; size = 4
_G_KeynumToString PROC					; COMDAT

; 906  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 907  : 	static char keynamestr[8];
; 908  : 
; 909  : 	UINT32 j;
; 910  : 
; 911  : 	// return a string with the ascii char if displayable
; 912  : 	if (keynum > ' ' && keynum <= 'z' && keynum != KEY_CONSOLE)

  00009	83 7d 08 20	 cmp	 DWORD PTR _keynum$[ebp], 32 ; 00000020H
  0000d	7e 43		 jle	 SHORT $LN5@G_KeynumTo
  0000f	83 7d 08 7a	 cmp	 DWORD PTR _keynum$[ebp], 122 ; 0000007aH
  00013	7f 3d		 jg	 SHORT $LN5@G_KeynumTo
  00015	83 7d 08 60	 cmp	 DWORD PTR _keynum$[ebp], 96 ; 00000060H
  00019	74 37		 je	 SHORT $LN5@G_KeynumTo

; 913  : 	{
; 914  : 		keynamestr[0] = (char)keynum;

  0001b	b8 01 00 00 00	 mov	 eax, 1
  00020	6b c8 00	 imul	 ecx, eax, 0
  00023	8a 55 08	 mov	 dl, BYTE PTR _keynum$[ebp]
  00026	88 91 00 00 00
	00		 mov	 BYTE PTR ?keynamestr@?1??G_KeynumToString@@9@9[ecx], dl

; 915  : 		keynamestr[1] = '\0';

  0002c	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR $T1[ebp], 1
  00033	83 7d b8 08	 cmp	 DWORD PTR $T1[ebp], 8
  00037	73 02		 jae	 SHORT $LN8@G_KeynumTo
  00039	eb 06		 jmp	 SHORT $LN9@G_KeynumTo
$LN8@G_KeynumTo:
  0003b	e8 00 00 00 00	 call	 ___report_rangecheckfailure
  00040	90		 npad	 1
$LN9@G_KeynumTo:
  00041	8b 45 b8	 mov	 eax, DWORD PTR $T1[ebp]
  00044	c6 80 00 00 00
	00 00		 mov	 BYTE PTR ?keynamestr@?1??G_KeynumToString@@9@9[eax], 0

; 916  : 		return keynamestr;

  0004b	b8 00 00 00 00	 mov	 eax, OFFSET ?keynamestr@?1??G_KeynumToString@@9@9
  00050	eb 53		 jmp	 SHORT $LN1@G_KeynumTo
$LN5@G_KeynumTo:

; 917  : 	}
; 918  : 
; 919  : 	// find a description for special keys
; 920  : 	for (j = 0; j < NUMKEYNAMES; j++)

  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _j$[ebp], 0
  00059	eb 09		 jmp	 SHORT $LN4@G_KeynumTo
$LN2@G_KeynumTo:
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _j$[ebp]
  0005e	83 c0 01	 add	 eax, 1
  00061	89 45 fc	 mov	 DWORD PTR _j$[ebp], eax
$LN4@G_KeynumTo:
  00064	81 7d fc 1c 01
	00 00		 cmp	 DWORD PTR _j$[ebp], 284	; 0000011cH
  0006b	73 1d		 jae	 SHORT $LN3@G_KeynumTo

; 921  : 		if (keynames[j].keynum == keynum)

  0006d	8b 45 fc	 mov	 eax, DWORD PTR _j$[ebp]
  00070	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR _keynames[eax*8]
  00077	3b 4d 08	 cmp	 ecx, DWORD PTR _keynum$[ebp]
  0007a	75 0c		 jne	 SHORT $LN6@G_KeynumTo

; 922  : 			return keynames[j].name;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _j$[ebp]
  0007f	8b 04 c5 04 00
	00 00		 mov	 eax, DWORD PTR _keynames[eax*8+4]
  00086	eb 1d		 jmp	 SHORT $LN1@G_KeynumTo
$LN6@G_KeynumTo:
  00088	eb d1		 jmp	 SHORT $LN2@G_KeynumTo
$LN3@G_KeynumTo:

; 923  : 
; 924  : 	// create a name for unknown keys
; 925  : 	sprintf(keynamestr, "KEY%d", keynum);

  0008a	8b 45 08	 mov	 eax, DWORD PTR _keynum$[ebp]
  0008d	50		 push	 eax
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_05DCKDBJEK@KEY?$CFd@
  00093	68 00 00 00 00	 push	 OFFSET ?keynamestr@?1??G_KeynumToString@@9@9
  00098	e8 00 00 00 00	 call	 _sprintf
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 926  : 	return keynamestr;

  000a0	b8 00 00 00 00	 mov	 eax, OFFSET ?keynamestr@?1??G_KeynumToString@@9@9
$LN1@G_KeynumTo:

; 927  : }

  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c3		 ret	 0
_G_KeynumToString ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\g_input.c
;	COMDAT _G_MapEventsToControls
_TEXT	SEGMENT
tv65 = -80						; size = 4
$T1 = -76						; size = 4
_flag$ = -5						; size = 1
_i$ = -4						; size = 4
_ev$ = 8						; size = 4
_G_MapEventsToControls PROC				; COMDAT

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 80   : 	INT32 i;
; 81   : 	UINT8 flag;
; 82   : 
; 83   : 	switch (ev->type)

  00009	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d b0	 mov	 DWORD PTR tv65[ebp], ecx
  00011	83 7d b0 06	 cmp	 DWORD PTR tv65[ebp], 6
  00015	0f 87 4e 02 00
	00		 ja	 $LN30@G_MapEvent
  0001b	8b 55 b0	 mov	 edx, DWORD PTR tv65[ebp]
  0001e	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN34@G_MapEvent[edx*4]
$LN16@G_MapEvent:

; 84   : 	{
; 85   : 		case ev_keydown:
; 86   : 			if (ev->data1 < NUMINPUTS)

  00025	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00028	81 78 04 e4 01
	00 00		 cmp	 DWORD PTR [eax+4], 484	; 000001e4H
  0002f	7d 0d		 jge	 SHORT $LN17@G_MapEvent

; 87   : 				gamekeydown[ev->data1] = 1;

  00031	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00034	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00037	c6 81 00 00 00
	00 01		 mov	 BYTE PTR _gamekeydown[ecx], 1
$LN17@G_MapEvent:

; 88   : #ifdef PARANOIA
; 89   : 			else
; 90   : 				CONS_Printf("Bad downkey input %d\n",ev->data1);
; 91   : #endif
; 92   : 			break;

  0003e	e9 26 02 00 00	 jmp	 $LN2@G_MapEvent
$LN18@G_MapEvent:

; 93   : 
; 94   : 		case ev_keyup:
; 95   : 			if (ev->data1 < NUMINPUTS)

  00043	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00046	81 78 04 e4 01
	00 00		 cmp	 DWORD PTR [eax+4], 484	; 000001e4H
  0004d	7d 24		 jge	 SHORT $LN19@G_MapEvent

; 96   : 				gamekeydown[ev->data1] = 0;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00052	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00055	89 4d b4	 mov	 DWORD PTR $T1[ebp], ecx
  00058	81 7d b4 e4 01
	00 00		 cmp	 DWORD PTR $T1[ebp], 484	; 000001e4H
  0005f	73 02		 jae	 SHORT $LN32@G_MapEvent
  00061	eb 06		 jmp	 SHORT $LN33@G_MapEvent
$LN32@G_MapEvent:
  00063	e8 00 00 00 00	 call	 ___report_rangecheckfailure
  00068	90		 npad	 1
$LN33@G_MapEvent:
  00069	8b 55 b4	 mov	 edx, DWORD PTR $T1[ebp]
  0006c	c6 82 00 00 00
	00 00		 mov	 BYTE PTR _gamekeydown[edx], 0
$LN19@G_MapEvent:

; 97   : #ifdef PARANOIA
; 98   : 			else
; 99   : 				CONS_Printf("Bad upkey input %d\n",ev->data1);
; 100  : #endif
; 101  : 			break;

  00073	e9 f1 01 00 00	 jmp	 $LN2@G_MapEvent
$LN20@G_MapEvent:

; 102  : 
; 103  : 		case ev_mouse: // buttons are virtual keys
; 104  : 			mousex = (INT32)(ev->data2*((cv_mousesens.value*cv_mousesens.value)/110.0f + 0.1f));

  00078	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0007b	f3 0f 2a 40 08	 cvtsi2ss xmm0, DWORD PTR [eax+8]
  00080	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR _cv_mousesens+20
  00086	0f af 0d 14 00
	00 00		 imul	 ecx, DWORD PTR _cv_mousesens+20
  0008d	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  00091	f3 0f 5e 0d 00
	00 00 00	 divss	 xmm1, DWORD PTR __real@42dc0000
  00099	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3dcccccd
  000a1	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000a5	f3 0f 2c d0	 cvttss2si edx, xmm0
  000a9	89 15 00 00 00
	00		 mov	 DWORD PTR _mousex, edx

; 105  : 			mousey = (INT32)(ev->data3*((cv_mousesens.value*cv_mousesens.value)/110.0f + 0.1f));

  000af	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  000b2	f3 0f 2a 40 0c	 cvtsi2ss xmm0, DWORD PTR [eax+12]
  000b7	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR _cv_mousesens+20
  000bd	0f af 0d 14 00
	00 00		 imul	 ecx, DWORD PTR _cv_mousesens+20
  000c4	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  000c8	f3 0f 5e 0d 00
	00 00 00	 divss	 xmm1, DWORD PTR __real@42dc0000
  000d0	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3dcccccd
  000d8	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000dc	f3 0f 2c d0	 cvttss2si edx, xmm0
  000e0	89 15 00 00 00
	00		 mov	 DWORD PTR _mousey, edx

; 106  : 
; 107  : 			// for now I use the mlook sensitivity just for mlook,
; 108  : 			// instead of having a general mouse y sensitivity.
; 109  : 			mlooky = (INT32)(ev->data3*((cv_mlooksens.value*cv_mlooksens.value)/110.0f + 0.1f));

  000e6	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  000e9	f3 0f 2a 40 0c	 cvtsi2ss xmm0, DWORD PTR [eax+12]
  000ee	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR _cv_mlooksens+20
  000f4	0f af 0d 14 00
	00 00		 imul	 ecx, DWORD PTR _cv_mlooksens+20
  000fb	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  000ff	f3 0f 5e 0d 00
	00 00 00	 divss	 xmm1, DWORD PTR __real@42dc0000
  00107	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3dcccccd
  0010f	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00113	f3 0f 2c d0	 cvttss2si edx, xmm0
  00117	89 15 00 00 00
	00		 mov	 DWORD PTR _mlooky, edx

; 110  : 			break;

  0011d	e9 47 01 00 00	 jmp	 $LN2@G_MapEvent
$LN21@G_MapEvent:

; 111  : 
; 112  : 		case ev_joystick: // buttons are virtual keys
; 113  : 			i = ev->data1;

  00122	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00125	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00128	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx

; 114  : 			if (i >= JOYAXISSET)

  0012b	83 7d fc 04	 cmp	 DWORD PTR _i$[ebp], 4
  0012f	7c 05		 jl	 SHORT $LN22@G_MapEvent

; 115  : 				break;

  00131	e9 33 01 00 00	 jmp	 $LN2@G_MapEvent
$LN22@G_MapEvent:

; 116  : 			if (ev->data2 != INT32_MAX) joyxmove[i] = ev->data2;

  00136	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00139	81 78 08 ff ff
	ff 7f		 cmp	 DWORD PTR [eax+8], 2147483647 ; 7fffffffH
  00140	74 10		 je	 SHORT $LN23@G_MapEvent
  00142	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00145	8b 4d 08	 mov	 ecx, DWORD PTR _ev$[ebp]
  00148	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0014b	89 14 85 00 00
	00 00		 mov	 DWORD PTR _joyxmove[eax*4], edx
$LN23@G_MapEvent:

; 117  : 			if (ev->data3 != INT32_MAX) joyymove[i] = ev->data3;

  00152	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00155	81 78 0c ff ff
	ff 7f		 cmp	 DWORD PTR [eax+12], 2147483647 ; 7fffffffH
  0015c	74 10		 je	 SHORT $LN24@G_MapEvent
  0015e	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00161	8b 4d 08	 mov	 ecx, DWORD PTR _ev$[ebp]
  00164	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00167	89 14 85 00 00
	00 00		 mov	 DWORD PTR _joyymove[eax*4], edx
$LN24@G_MapEvent:

; 118  : 			break;

  0016e	e9 f6 00 00 00	 jmp	 $LN2@G_MapEvent
$LN25@G_MapEvent:

; 119  : 
; 120  : 		case ev_joystick2: // buttons are virtual keys
; 121  : 			i = ev->data1;

  00173	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00176	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00179	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx

; 122  : 			if (i >= JOYAXISSET)

  0017c	83 7d fc 04	 cmp	 DWORD PTR _i$[ebp], 4
  00180	7c 05		 jl	 SHORT $LN26@G_MapEvent

; 123  : 				break;

  00182	e9 e2 00 00 00	 jmp	 $LN2@G_MapEvent
$LN26@G_MapEvent:

; 124  : 			if (ev->data2 != INT32_MAX) joy2xmove[i] = ev->data2;

  00187	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0018a	81 78 08 ff ff
	ff 7f		 cmp	 DWORD PTR [eax+8], 2147483647 ; 7fffffffH
  00191	74 10		 je	 SHORT $LN27@G_MapEvent
  00193	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00196	8b 4d 08	 mov	 ecx, DWORD PTR _ev$[ebp]
  00199	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0019c	89 14 85 00 00
	00 00		 mov	 DWORD PTR _joy2xmove[eax*4], edx
$LN27@G_MapEvent:

; 125  : 			if (ev->data3 != INT32_MAX) joy2ymove[i] = ev->data3;

  001a3	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  001a6	81 78 0c ff ff
	ff 7f		 cmp	 DWORD PTR [eax+12], 2147483647 ; 7fffffffH
  001ad	74 10		 je	 SHORT $LN28@G_MapEvent
  001af	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  001b2	8b 4d 08	 mov	 ecx, DWORD PTR _ev$[ebp]
  001b5	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  001b8	89 14 85 00 00
	00 00		 mov	 DWORD PTR _joy2ymove[eax*4], edx
$LN28@G_MapEvent:

; 126  : 			break;

  001bf	e9 a5 00 00 00	 jmp	 $LN2@G_MapEvent
$LN29@G_MapEvent:

; 127  : 
; 128  : 		case ev_mouse2: // buttons are virtual keys
; 129  : 			mouse2x = (INT32)(ev->data2*((cv_mousesens2.value*cv_mousesens2.value)/110.0f + 0.1f));

  001c4	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  001c7	f3 0f 2a 40 08	 cvtsi2ss xmm0, DWORD PTR [eax+8]
  001cc	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR _cv_mousesens2+20
  001d2	0f af 0d 14 00
	00 00		 imul	 ecx, DWORD PTR _cv_mousesens2+20
  001d9	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  001dd	f3 0f 5e 0d 00
	00 00 00	 divss	 xmm1, DWORD PTR __real@42dc0000
  001e5	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3dcccccd
  001ed	f3 0f 59 c1	 mulss	 xmm0, xmm1
  001f1	f3 0f 2c d0	 cvttss2si edx, xmm0
  001f5	89 15 00 00 00
	00		 mov	 DWORD PTR _mouse2x, edx

; 130  : 			mouse2y = (INT32)(ev->data3*((cv_mousesens2.value*cv_mousesens2.value)/110.0f + 0.1f));

  001fb	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  001fe	f3 0f 2a 40 0c	 cvtsi2ss xmm0, DWORD PTR [eax+12]
  00203	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR _cv_mousesens2+20
  00209	0f af 0d 14 00
	00 00		 imul	 ecx, DWORD PTR _cv_mousesens2+20
  00210	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  00214	f3 0f 5e 0d 00
	00 00 00	 divss	 xmm1, DWORD PTR __real@42dc0000
  0021c	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3dcccccd
  00224	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00228	f3 0f 2c d0	 cvttss2si edx, xmm0
  0022c	89 15 00 00 00
	00		 mov	 DWORD PTR _mouse2y, edx

; 131  : 
; 132  : 			// for now I use the mlook sensitivity just for mlook,
; 133  : 			// instead of having a general mouse y sensitivity.
; 134  : 			mlook2y = (INT32)(ev->data3*((cv_mlooksens.value*cv_mlooksens.value)/110.0f + 0.1f));

  00232	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00235	f3 0f 2a 40 0c	 cvtsi2ss xmm0, DWORD PTR [eax+12]
  0023a	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR _cv_mlooksens+20
  00240	0f af 0d 14 00
	00 00		 imul	 ecx, DWORD PTR _cv_mlooksens+20
  00247	f3 0f 2a c9	 cvtsi2ss xmm1, ecx
  0024b	f3 0f 5e 0d 00
	00 00 00	 divss	 xmm1, DWORD PTR __real@42dc0000
  00253	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3dcccccd
  0025b	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0025f	f3 0f 2c d0	 cvttss2si edx, xmm0
  00263	89 15 00 00 00
	00		 mov	 DWORD PTR _mlook2y, edx
$LN30@G_MapEvent:
$LN2@G_MapEvent:

; 135  : 			break;
; 136  : 
; 137  : 		default:
; 138  : 			break;
; 139  : 	}
; 140  : 
; 141  : 	// ALWAYS check for mouse & joystick double-clicks even if no mouse event
; 142  : 	for (i = 0; i < MOUSEBUTTONS; i++)

  00269	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00270	eb 09		 jmp	 SHORT $LN6@G_MapEvent
$LN4@G_MapEvent:
  00272	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00275	83 c0 01	 add	 eax, 1
  00278	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN6@G_MapEvent:
  0027b	83 7d fc 08	 cmp	 DWORD PTR _i$[ebp], 8
  0027f	7d 2e		 jge	 SHORT $LN5@G_MapEvent

; 143  : 	{
; 144  : 		flag = G_CheckDoubleClick(gamekeydown[KEY_MOUSE1+i], &mousedclicks[i]);

  00281	6b 45 fc 03	 imul	 eax, DWORD PTR _i$[ebp], 3
  00285	05 00 00 00 00	 add	 eax, OFFSET _mousedclicks
  0028a	50		 push	 eax
  0028b	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0028e	0f b6 91 00 01
	00 00		 movzx	 edx, BYTE PTR _gamekeydown[ecx+256]
  00295	52		 push	 edx
  00296	e8 00 00 00 00	 call	 _G_CheckDoubleClick
  0029b	83 c4 08	 add	 esp, 8
  0029e	88 45 fb	 mov	 BYTE PTR _flag$[ebp], al

; 145  : 		gamekeydown[KEY_DBLMOUSE1+i] = flag;

  002a1	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  002a4	8a 4d fb	 mov	 cl, BYTE PTR _flag$[ebp]
  002a7	88 88 38 01 00
	00		 mov	 BYTE PTR _gamekeydown[eax+312], cl

; 146  : 	}

  002ad	eb c3		 jmp	 SHORT $LN4@G_MapEvent
$LN5@G_MapEvent:

; 147  : 
; 148  : 	for (i = 0; i < JOYBUTTONS + JOYHATS*4; i++)

  002af	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  002b6	eb 09		 jmp	 SHORT $LN9@G_MapEvent
$LN7@G_MapEvent:
  002b8	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  002bb	83 c0 01	 add	 eax, 1
  002be	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN9@G_MapEvent:
  002c1	83 7d fc 30	 cmp	 DWORD PTR _i$[ebp], 48	; 00000030H
  002c5	7d 2e		 jge	 SHORT $LN8@G_MapEvent

; 149  : 	{
; 150  : 		flag = G_CheckDoubleClick(gamekeydown[KEY_JOY1+i], &joydclicks[i]);

  002c7	6b 45 fc 03	 imul	 eax, DWORD PTR _i$[ebp], 3
  002cb	05 00 00 00 00	 add	 eax, OFFSET _joydclicks
  002d0	50		 push	 eax
  002d1	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  002d4	0f b6 91 08 01
	00 00		 movzx	 edx, BYTE PTR _gamekeydown[ecx+264]
  002db	52		 push	 edx
  002dc	e8 00 00 00 00	 call	 _G_CheckDoubleClick
  002e1	83 c4 08	 add	 esp, 8
  002e4	88 45 fb	 mov	 BYTE PTR _flag$[ebp], al

; 151  : 		gamekeydown[KEY_DBLJOY1+i] = flag;

  002e7	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  002ea	8a 4d fb	 mov	 cl, BYTE PTR _flag$[ebp]
  002ed	88 88 40 01 00
	00		 mov	 BYTE PTR _gamekeydown[eax+320], cl

; 152  : 	}

  002f3	eb c3		 jmp	 SHORT $LN7@G_MapEvent
$LN8@G_MapEvent:

; 153  : 
; 154  : 	for (i = 0; i < MOUSEBUTTONS; i++)

  002f5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  002fc	eb 09		 jmp	 SHORT $LN12@G_MapEvent
$LN10@G_MapEvent:
  002fe	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00301	83 c0 01	 add	 eax, 1
  00304	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN12@G_MapEvent:
  00307	83 7d fc 08	 cmp	 DWORD PTR _i$[ebp], 8
  0030b	7d 2e		 jge	 SHORT $LN11@G_MapEvent

; 155  : 	{
; 156  : 		flag = G_CheckDoubleClick(gamekeydown[KEY_2MOUSE1+i], &mouse2dclicks[i]);

  0030d	6b 45 fc 03	 imul	 eax, DWORD PTR _i$[ebp], 3
  00311	05 00 00 00 00	 add	 eax, OFFSET _mouse2dclicks
  00316	50		 push	 eax
  00317	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0031a	0f b6 91 70 01
	00 00		 movzx	 edx, BYTE PTR _gamekeydown[ecx+368]
  00321	52		 push	 edx
  00322	e8 00 00 00 00	 call	 _G_CheckDoubleClick
  00327	83 c4 08	 add	 esp, 8
  0032a	88 45 fb	 mov	 BYTE PTR _flag$[ebp], al

; 157  : 		gamekeydown[KEY_DBL2MOUSE1+i] = flag;

  0032d	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00330	8a 4d fb	 mov	 cl, BYTE PTR _flag$[ebp]
  00333	88 88 a8 01 00
	00		 mov	 BYTE PTR _gamekeydown[eax+424], cl

; 158  : 	}

  00339	eb c3		 jmp	 SHORT $LN10@G_MapEvent
$LN11@G_MapEvent:

; 159  : 
; 160  : 	for (i = 0; i < JOYBUTTONS + JOYHATS*4; i++)

  0033b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00342	eb 09		 jmp	 SHORT $LN15@G_MapEvent
$LN13@G_MapEvent:
  00344	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00347	83 c0 01	 add	 eax, 1
  0034a	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN15@G_MapEvent:
  0034d	83 7d fc 30	 cmp	 DWORD PTR _i$[ebp], 48	; 00000030H
  00351	7d 2e		 jge	 SHORT $LN14@G_MapEvent

; 161  : 	{
; 162  : 		flag = G_CheckDoubleClick(gamekeydown[KEY_2JOY1+i], &joy2dclicks[i]);

  00353	6b 45 fc 03	 imul	 eax, DWORD PTR _i$[ebp], 3
  00357	05 00 00 00 00	 add	 eax, OFFSET _joy2dclicks
  0035c	50		 push	 eax
  0035d	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00360	0f b6 91 78 01
	00 00		 movzx	 edx, BYTE PTR _gamekeydown[ecx+376]
  00367	52		 push	 edx
  00368	e8 00 00 00 00	 call	 _G_CheckDoubleClick
  0036d	83 c4 08	 add	 esp, 8
  00370	88 45 fb	 mov	 BYTE PTR _flag$[ebp], al

; 163  : 		gamekeydown[KEY_DBL2JOY1+i] = flag;

  00373	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00376	8a 4d fb	 mov	 cl, BYTE PTR _flag$[ebp]
  00379	88 88 b0 01 00
	00		 mov	 BYTE PTR _gamekeydown[eax+432], cl

; 164  : 	}

  0037f	eb c3		 jmp	 SHORT $LN13@G_MapEvent
$LN14@G_MapEvent:

; 165  : }

  00381	5f		 pop	 edi
  00382	5e		 pop	 esi
  00383	5b		 pop	 ebx
  00384	8b e5		 mov	 esp, ebp
  00386	5d		 pop	 ebp
  00387	c3		 ret	 0
$LN34@G_MapEvent:
  00388	00 00 00 00	 DD	 $LN16@G_MapEvent
  0038c	00 00 00 00	 DD	 $LN18@G_MapEvent
  00390	00 00 00 00	 DD	 $LN30@G_MapEvent
  00394	00 00 00 00	 DD	 $LN20@G_MapEvent
  00398	00 00 00 00	 DD	 $LN21@G_MapEvent
  0039c	00 00 00 00	 DD	 $LN29@G_MapEvent
  003a0	00 00 00 00	 DD	 $LN25@G_MapEvent
_G_MapEventsToControls ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1771 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1777 : 
; 1778 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1779 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1780 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1458 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1459 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1460 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1391 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  00031	83 c4 1c	 add	 esp, 28			; 0000001cH
  00034	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00037	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003b	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003d	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00044	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00046	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00049	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004c	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1397 :     }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
;	COMDAT _fprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT

; 837  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 838  :         int _Result;
; 839  :         va_list _ArgList;
; 840  :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 841  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Stream$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vfprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 842  :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 843  :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 844  :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 644  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 645  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	52		 push	 edx
  00025	e8 00 00 00 00	 call	 ___stdio_common_vfprintf
  0002a	83 c4 18	 add	 esp, 24			; 00000018H

; 646  :     }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
