; Listing generated by Microsoft (R) Optimizing Compiler Version 19.41.34123.0 

	TITLE	C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\objs\VC10\Win32\Debug\m_cheat.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_ATTRPACK:DWORD
_DATA	ENDS
_DATA	SEGMENT
_cheat_bulmer_seq DB 062H
	DB	0a6H
	DB	0a6H
	DB	026H
	DB	0a6H
	DB	0a6H
	DB	0ffH
	ORG $+1
_cheat_poksoc_seq DB 02aH
	DB	0f6H
	DB	0f2H
	DB	0eaH
	DB	0f6H
	DB	0e2H
	DB	0ffH
	ORG $+1
_cheat_apl_seq DB 0a2H
	DB	02aH
	DB	036H
	DB	0ffH
_cheat_ultimate_seq DB 0aeH
	DB	036H
	DB	02eH
	DB	0b2H
	DB	0b6H
	DB	0a2H
	DB	02eH
	DB	0a6H
	DB	0ffH
_DATA	ENDS
PUBLIC	_cht_Responder
PUBLIC	_cht_Init
PUBLIC	_Command_CheatNoClip_f
PUBLIC	_Command_CheatGod_f
PUBLIC	_Command_Savecheckpoint_f
PUBLIC	_Command_Getallemeralds_f
PUBLIC	_Command_Resetemeralds_f
PUBLIC	_Command_Unlockall_f
PUBLIC	_Command_Devmode_f
PUBLIC	_Command_Scale_f
PUBLIC	_Command_Gravflip_f
PUBLIC	_Command_Hurtme_f
PUBLIC	_Command_Charability_f
PUBLIC	_Command_Charspeed_f
PUBLIC	_Command_CauseCfail_f
PUBLIC	??_C@_04JCHCPPIB@?$CKB?$FOO@			; `string'
PUBLIC	??_C@_04LJFPKMEC@?$CKB?$FOL@			; `string'
PUBLIC	??_C@_04OPAFALME@?$CKB?$FOJ@			; `string'
PUBLIC	??_C@_04HBIGCGEK@?$CKB?$FOD@			; `string'
PUBLIC	??_C@_02IAAGKKDJ@On@				; `string'
PUBLIC	??_C@_03GCDBBDDL@Off@				; `string'
PUBLIC	??_C@_0BA@DNKPIFAA@No?5Clipping?5?$CFs?6@	; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0P@PADIMAAB@Sissy?5Mode?5?$CFs?6@		; `string'
PUBLIC	??_C@_0CP@ICFKFBGN@SCALE?5?$DMvalue?$DO?5?$CI5?9400?$CJ?3?5Set?5play@ ; `string'
PUBLIC	??_C@_0BB@GPLKBLAA@Scale?5set?5to?5?$CFd?6@	; `string'
PUBLIC	??_C@_0BB@JBEJGOMM@hurtme?5?$DMdamage?$DO?6@	; `string'
PUBLIC	??_C@_0BL@MJLIDLCC@charability?5?$DM1?12?$DO?5?$DMvalue?$DO?6@ ; `string'
PUBLIC	??_C@_0FJ@KPPDFGAJ@charspeed?5?$DMnormalspeed?1runspeed@ ; `string'
PUBLIC	??_C@_0M@LOLDGOGD@normalspeed@			; `string'
PUBLIC	??_C@_08MPILJHLH@runspeed@			; `string'
PUBLIC	??_C@_0N@LMABHIBC@thrustfactor@			; `string'
PUBLIC	??_C@_0L@JAFJCEHN@accelstart@			; `string'
PUBLIC	??_C@_0N@OKFAMOHD@acceleration@			; `string'
PUBLIC	??_C@_09ICMAGONI@actionspd@			; `string'
PUBLIC	??_C@_0FB@DJAAOMLB@Your?5reality?5is?5everyone?8s?5real@ ; `string'
PUBLIC	??_C@_0CM@KGCGDKBI@Temporary?5checkpoint?5created?5at@ ; `string'
PUBLIC	??_C@_0BO@DMJPOOCJ@You?5now?5have?5all?57?5emeralds?4?6@ ; `string'
PUBLIC	??_C@_0BJ@HHCILNFK@Emeralds?5reset?5to?5zero?4?6@ ; `string'
PUBLIC	??_C@_0BH@MBGOLJNF@All?5secrets?5unlocked?4?6@	; `string'
EXTRN	_stricmp:PROC
EXTRN	_atoi:PROC
EXTRN	_CONS_Printf:PROC
EXTRN	_COM_Argc:PROC
EXTRN	_COM_Argv:PROC
EXTRN	_COM_BufExecute:PROC
EXTRN	_S_StartSound:PROC
EXTRN	_P_SetMobjState:PROC
EXTRN	_P_UnsetThingPosition:PROC
EXTRN	_P_SetThingPosition:PROC
EXTRN	_P_DamageMobj:PROC
EXTRN	_M_StartControlPanel:PROC
EXTRN	_M_SetupNextMenu:PROC
EXTRN	_M_Random:PROC
EXTRN	_P_Random:PROC
EXTRN	_HU_DoCEcho:PROC
EXTRN	_gamestate:DWORD
EXTRN	_text:BYTE
EXTRN	_modifiedgame:DWORD
EXTRN	_savemoddata:DWORD
EXTRN	_netgame:DWORD
EXTRN	_multiplayer:DWORD
EXTRN	_gametype:WORD
EXTRN	_cv_debug:DWORD
EXTRN	_consoleplayer:DWORD
EXTRN	_spstage_start:WORD
EXTRN	_redflag:DWORD
EXTRN	_blueflag:DWORD
EXTRN	_emeralds:WORD
EXTRN	_grade:DWORD
EXTRN	_serverplayer:DWORD
EXTRN	_players:BYTE
EXTRN	_demoplayback:DWORD
EXTRN	_ReadDef2:BYTE
EXTRN	_PlayerDef:BYTE
EXTRN	_startmap:WORD
EXTRN	_ultmode:DWORD
_BSS	SEGMENT
_cheat_xlate_table DB 0100H DUP (?)
?plyr@?1??cht_Responder@@9@9 DD 01H DUP (?)		; `cht_Responder'::`2'::plyr
_BSS	ENDS
;	COMDAT ??_C@_0BH@MBGOLJNF@All?5secrets?5unlocked?4?6@
CONST	SEGMENT
??_C@_0BH@MBGOLJNF@All?5secrets?5unlocked?4?6@ DB 'All secrets unlocked.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HHCILNFK@Emeralds?5reset?5to?5zero?4?6@
CONST	SEGMENT
??_C@_0BJ@HHCILNFK@Emeralds?5reset?5to?5zero?4?6@ DB 'Emeralds reset to z'
	DB	'ero.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DMJPOOCJ@You?5now?5have?5all?57?5emeralds?4?6@
CONST	SEGMENT
??_C@_0BO@DMJPOOCJ@You?5now?5have?5all?57?5emeralds?4?6@ DB 'You now have'
	DB	' all 7 emeralds.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KGCGDKBI@Temporary?5checkpoint?5created?5at@
CONST	SEGMENT
??_C@_0CM@KGCGDKBI@Temporary?5checkpoint?5created?5at@ DB 'Temporary chec'
	DB	'kpoint created at %d, %d, %d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@DJAAOMLB@Your?5reality?5is?5everyone?8s?5real@
CONST	SEGMENT
??_C@_0FB@DJAAOMLB@Your?5reality?5is?5everyone?8s?5real@ DB 'Your reality'
	DB	' is everyone''s reality. Therefore, you should not use this c'
	DB	'ommand.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09ICMAGONI@actionspd@
CONST	SEGMENT
??_C@_09ICMAGONI@actionspd@ DB 'actionspd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OKFAMOHD@acceleration@
CONST	SEGMENT
??_C@_0N@OKFAMOHD@acceleration@ DB 'acceleration', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JAFJCEHN@accelstart@
CONST	SEGMENT
??_C@_0L@JAFJCEHN@accelstart@ DB 'accelstart', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LMABHIBC@thrustfactor@
CONST	SEGMENT
??_C@_0N@LMABHIBC@thrustfactor@ DB 'thrustfactor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MPILJHLH@runspeed@
CONST	SEGMENT
??_C@_08MPILJHLH@runspeed@ DB 'runspeed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LOLDGOGD@normalspeed@
CONST	SEGMENT
??_C@_0M@LOLDGOGD@normalspeed@ DB 'normalspeed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FJ@KPPDFGAJ@charspeed?5?$DMnormalspeed?1runspeed@
CONST	SEGMENT
??_C@_0FJ@KPPDFGAJ@charspeed?5?$DMnormalspeed?1runspeed@ DB 'charspeed <n'
	DB	'ormalspeed/runspeed/thrustfactor/accelstart/acceleration/acti'
	DB	'onspd> <value>', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MJLIDLCC@charability?5?$DM1?12?$DO?5?$DMvalue?$DO?6@
CONST	SEGMENT
??_C@_0BL@MJLIDLCC@charability?5?$DM1?12?$DO?5?$DMvalue?$DO?6@ DB 'charab'
	DB	'ility <1/2> <value>', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JBEJGOMM@hurtme?5?$DMdamage?$DO?6@
CONST	SEGMENT
??_C@_0BB@JBEJGOMM@hurtme?5?$DMdamage?$DO?6@ DB 'hurtme <damage>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GPLKBLAA@Scale?5set?5to?5?$CFd?6@
CONST	SEGMENT
??_C@_0BB@GPLKBLAA@Scale?5set?5to?5?$CFd?6@ DB 'Scale set to %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@ICFKFBGN@SCALE?5?$DMvalue?$DO?5?$CI5?9400?$CJ?3?5Set?5play@
CONST	SEGMENT
??_C@_0CP@ICFKFBGN@SCALE?5?$DMvalue?$DO?5?$CI5?9400?$CJ?3?5Set?5play@ DB 'S'
	DB	'CALE <value> (5-400): Set player scale size.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PADIMAAB@Sissy?5Mode?5?$CFs?6@
CONST	SEGMENT
??_C@_0P@PADIMAAB@Sissy?5Mode?5?$CFs?6@ DB 'Sissy Mode %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DNKPIFAA@No?5Clipping?5?$CFs?6@
CONST	SEGMENT
??_C@_0BA@DNKPIFAA@No?5Clipping?5?$CFs?6@ DB 'No Clipping %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCDBBDDL@Off@
CONST	SEGMENT
??_C@_03GCDBBDDL@Off@ DB 'Off', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IAAGKKDJ@On@
CONST	SEGMENT
??_C@_02IAAGKKDJ@On@ DB 'On', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HBIGCGEK@?$CKB?$FOD@
CONST	SEGMENT
??_C@_04HBIGCGEK@?$CKB?$FOD@ DB '*B^D', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OPAFALME@?$CKB?$FOJ@
CONST	SEGMENT
??_C@_04OPAFALME@?$CKB?$FOJ@ DB '*B^J', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LJFPKMEC@?$CKB?$FOL@
CONST	SEGMENT
??_C@_04LJFPKMEC@?$CKB?$FOL@ DB '*B^L', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JCHCPPIB@?$CKB?$FOO@
CONST	SEGMENT
??_C@_04JCHCPPIB@?$CKB?$FOO@ DB '*B^O', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
	ORG $+3
_cheat_bulmer DD FLAT:_cheat_bulmer_seq
	DD	00H
_cheat_poksoc DD FLAT:_cheat_poksoc_seq
	DD	00H
_cheat_apl DD	FLAT:_cheat_apl_seq
	DD	00H
_cheat_ultimate DD FLAT:_cheat_ultimate_seq
	DD	00H
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _cht_CheckCheat
_TEXT	SEGMENT
_rc$ = -4						; size = 4
_cht$ = 8						; size = 4
_key$ = 12						; size = 1
_cht_CheckCheat PROC					; COMDAT

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 101  : 	INT32 rc = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _rc$[ebp], 0

; 102  : 
; 103  : 	if (!cht->p)

  00010	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  00013	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00017	75 0b		 jne	 SHORT $LN2@cht_CheckC

; 104  : 		cht->p = cht->sequence; // initialize if first time

  00019	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _cht$[ebp]
  0001f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN2@cht_CheckC:

; 105  : 
; 106  : 	if (*cht->p == 0)

  00024	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  00027	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002a	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0002d	85 d2		 test	 edx, edx
  0002f	75 1c		 jne	 SHORT $LN3@cht_CheckC

; 107  : 		*(cht->p++) = key;

  00031	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  00034	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00037	8a 55 0c	 mov	 dl, BYTE PTR _key$[ebp]
  0003a	88 11		 mov	 BYTE PTR [ecx], dl
  0003c	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  0003f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00042	83 c1 01	 add	 ecx, 1
  00045	8b 55 08	 mov	 edx, DWORD PTR _cht$[ebp]
  00048	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0004b	eb 34		 jmp	 SHORT $LN6@cht_CheckC
$LN3@cht_CheckC:

; 108  : 	else if (cheat_xlate_table[(UINT8)key] == *cht->p)

  0004d	0f b6 45 0c	 movzx	 eax, BYTE PTR _key$[ebp]
  00051	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR _cheat_xlate_table[eax]
  00058	8b 55 08	 mov	 edx, DWORD PTR _cht$[ebp]
  0005b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005e	0f b6 10	 movzx	 edx, BYTE PTR [eax]
  00061	3b ca		 cmp	 ecx, edx
  00063	75 11		 jne	 SHORT $LN5@cht_CheckC

; 109  : 		cht->p++;

  00065	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  00068	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006b	83 c1 01	 add	 ecx, 1
  0006e	8b 55 08	 mov	 edx, DWORD PTR _cht$[ebp]
  00071	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00074	eb 0b		 jmp	 SHORT $LN6@cht_CheckC
$LN5@cht_CheckC:

; 110  : 	else
; 111  : 		cht->p = cht->sequence;

  00076	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  00079	8b 4d 08	 mov	 ecx, DWORD PTR _cht$[ebp]
  0007c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007e	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN6@cht_CheckC:

; 112  : 
; 113  : 	if (*cht->p == 1)

  00081	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  00084	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00087	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  0008a	83 fa 01	 cmp	 edx, 1
  0008d	75 11		 jne	 SHORT $LN7@cht_CheckC

; 114  : 		cht->p++;

  0008f	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  00092	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00095	83 c1 01	 add	 ecx, 1
  00098	8b 55 08	 mov	 edx, DWORD PTR _cht$[ebp]
  0009b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0009e	eb 23		 jmp	 SHORT $LN9@cht_CheckC
$LN7@cht_CheckC:

; 115  : 	else if (*cht->p == 0xff) // end of sequence character

  000a0	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  000a3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a6	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  000a9	81 fa ff 00 00
	00		 cmp	 edx, 255		; 000000ffH
  000af	75 12		 jne	 SHORT $LN9@cht_CheckC

; 116  : 	{
; 117  : 		cht->p = cht->sequence;

  000b1	8b 45 08	 mov	 eax, DWORD PTR _cht$[ebp]
  000b4	8b 4d 08	 mov	 ecx, DWORD PTR _cht$[ebp]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 118  : 		rc = 1;

  000bc	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _rc$[ebp], 1
$LN9@cht_CheckC:

; 119  : 	}
; 120  : 
; 121  : 	return rc;

  000c3	8b 45 fc	 mov	 eax, DWORD PTR _rc$[ebp]

; 122  : }

  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
_cht_CheckCheat ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_CauseCfail_f
_TEXT	SEGMENT
_Command_CauseCfail_f PROC				; COMDAT

; 475  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 476  : 	if (consoleplayer == serverplayer)

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR _consoleplayer
  0000e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _serverplayer
  00014	75 12		 jne	 SHORT $LN2@Command_Ca

; 477  : 	{
; 478  : 		CONS_Printf("Your reality is everyone's reality. Therefore, you should not use this command.\n");

  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@DJAAOMLB@Your?5reality?5is?5everyone?8s?5real@
  0001b	e8 00 00 00 00	 call	 _CONS_Printf
  00020	83 c4 04	 add	 esp, 4

; 479  : 		return;

  00023	e9 22 01 00 00	 jmp	 $LN5@Command_Ca
$LN2@Command_Ca:

; 480  : 	}
; 481  : 
; 482  : 	P_UnsetThingPosition(players[consoleplayer].mo);

  00028	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  00032	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 _P_UnsetThingPosition
  0003e	83 c4 04	 add	 esp, 4

; 483  : 	P_Random();

  00041	e8 00 00 00 00	 call	 _P_Random
  00046	90		 npad	 1

; 484  : 	P_Random();

  00047	e8 00 00 00 00	 call	 _P_Random
  0004c	90		 npad	 1

; 485  : 	P_Random();

  0004d	e8 00 00 00 00	 call	 _P_Random
  00052	90		 npad	 1

; 486  : 	players[consoleplayer].mo->x = 0;

  00053	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  0005d	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  00063	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 487  : 	players[consoleplayer].mo->y = 123311; //cfail cansuled kthxbye

  0006a	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  00074	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  0007a	c7 41 14 af e1
	01 00		 mov	 DWORD PTR [ecx+20], 123311 ; 0001e1afH

; 488  : 	players[consoleplayer].mo->z = 123311;

  00081	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  0008b	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  00091	c7 41 18 af e1
	01 00		 mov	 DWORD PTR [ecx+24], 123311 ; 0001e1afH

; 489  : 	players[consoleplayer].score = 1337;

  00098	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000a2	c7 80 bc 00 00
	00 39 05 00 00	 mov	 DWORD PTR _players[eax+188], 1337 ; 00000539H

; 490  : 	players[consoleplayer].health = 1337;

  000ac	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000b6	c7 80 28 00 00
	00 39 05 00 00	 mov	 DWORD PTR _players[eax+40], 1337 ; 00000539H

; 491  : 	players[consoleplayer].mo->destscale = 25;

  000c0	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000ca	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  000d0	ba 19 00 00 00	 mov	 edx, 25			; 00000019H
  000d5	66 89 91 ce 00
	00 00		 mov	 WORD PTR [ecx+206], dx

; 492  : 	P_SetThingPosition(players[consoleplayer].mo);

  000dc	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000e6	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  000ec	51		 push	 ecx
  000ed	e8 00 00 00 00	 call	 _P_SetThingPosition
  000f2	83 c4 04	 add	 esp, 4

; 493  : 
; 494  : 	// CTF consistency test
; 495  : 	if (gametype == GT_CTF)

  000f5	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR _gametype
  000fc	83 f8 04	 cmp	 eax, 4
  000ff	75 49		 jne	 SHORT $LN5@Command_Ca

; 496  : 	{
; 497  : 		if (blueflag)

  00101	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _blueflag, 0
  00108	74 13		 je	 SHORT $LN4@Command_Ca

; 498  : 			P_SetMobjState(blueflag, S_DISS);

  0010a	68 4f 06 00 00	 push	 1615			; 0000064fH
  0010f	a1 00 00 00 00	 mov	 eax, DWORD PTR _blueflag
  00114	50		 push	 eax
  00115	e8 00 00 00 00	 call	 _P_SetMobjState
  0011a	83 c4 08	 add	 esp, 8
$LN4@Command_Ca:

; 499  : 		if (redflag)

  0011d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _redflag, 0
  00124	74 24		 je	 SHORT $LN5@Command_Ca

; 500  : 		{
; 501  : 			redflag->x = 423423;

  00126	a1 00 00 00 00	 mov	 eax, DWORD PTR _redflag
  0012b	c7 40 10 ff 75
	06 00		 mov	 DWORD PTR [eax+16], 423423 ; 000675ffH

; 502  : 			redflag->y = 666;

  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR _redflag
  00137	c7 40 14 9a 02
	00 00		 mov	 DWORD PTR [eax+20], 666	; 0000029aH

; 503  : 			redflag->z = 123311;

  0013e	a1 00 00 00 00	 mov	 eax, DWORD PTR _redflag
  00143	c7 40 18 af e1
	01 00		 mov	 DWORD PTR [eax+24], 123311 ; 0001e1afH
$LN5@Command_Ca:

; 504  : 		}
; 505  : 	}
; 506  : }

  0014a	5f		 pop	 edi
  0014b	5e		 pop	 esi
  0014c	5b		 pop	 ebx
  0014d	8b e5		 mov	 esp, ebp
  0014f	5d		 pop	 ebp
  00150	c3		 ret	 0
_Command_CauseCfail_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_Charspeed_f
_TEXT	SEGMENT
_Command_Charspeed_f PROC				; COMDAT

; 428  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 429  : 	if (gamestate != GS_LEVEL || demoplayback)

  00009	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR _gamestate, 1
  00010	75 09		 jne	 SHORT $LN3@Command_Ch
  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _demoplayback, 0
  00019	74 24		 je	 SHORT $LN2@Command_Ch
$LN3@Command_Ch:

; 430  : 	{
; 431  : 		CONS_Printf("%s", text[MUSTBEINLEVEL]);

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	69 c8 fa 00 00
	00		 imul	 ecx, eax, 250
  00026	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  0002c	52		 push	 edx
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00032	e8 00 00 00 00	 call	 _CONS_Printf
  00037	83 c4 08	 add	 esp, 8

; 432  : 		return;

  0003a	e9 1e 02 00 00	 jmp	 $LN19@Command_Ch
$LN2@Command_Ch:

; 433  : 	}
; 434  : 
; 435  : 	if (!cv_debug)

  0003f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _cv_debug, 0
  00046	75 24		 jne	 SHORT $LN4@Command_Ch

; 436  : 	{
; 437  : 		CONS_Printf("%s", text[NEED_DEVMODE]);

  00048	b8 04 00 00 00	 mov	 eax, 4
  0004d	69 c8 f8 00 00
	00		 imul	 ecx, eax, 248
  00053	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00059	52		 push	 edx
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0005f	e8 00 00 00 00	 call	 _CONS_Printf
  00064	83 c4 08	 add	 esp, 8

; 438  : 		return;

  00067	e9 f1 01 00 00	 jmp	 $LN19@Command_Ch
$LN4@Command_Ch:

; 439  : 	}
; 440  : 
; 441  : 	if (COM_Argc() < 3)

  0006c	e8 00 00 00 00	 call	 _COM_Argc
  00071	83 f8 03	 cmp	 eax, 3
  00074	73 12		 jae	 SHORT $LN5@Command_Ch

; 442  : 	{
; 443  : 		CONS_Printf("charspeed <normalspeed/runspeed/thrustfactor/accelstart/acceleration/actionspd> <value>\n");

  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0FJ@KPPDFGAJ@charspeed?5?$DMnormalspeed?1runspeed@
  0007b	e8 00 00 00 00	 call	 _CONS_Printf
  00080	83 c4 04	 add	 esp, 4

; 444  : 		return;

  00083	e9 d5 01 00 00	 jmp	 $LN19@Command_Ch
$LN5@Command_Ch:

; 445  : 	}
; 446  : 
; 447  : 	if (netgame || multiplayer)

  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  0008f	75 09		 jne	 SHORT $LN7@Command_Ch
  00091	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00098	74 24		 je	 SHORT $LN6@Command_Ch
$LN7@Command_Ch:

; 448  : 	{
; 449  : 		CONS_Printf("%s", text[CANTUSEMULTIPLAYER]);

  0009a	b8 04 00 00 00	 mov	 eax, 4
  0009f	69 c8 fc 00 00
	00		 imul	 ecx, eax, 252
  000a5	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  000ab	52		 push	 edx
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000b1	e8 00 00 00 00	 call	 _CONS_Printf
  000b6	83 c4 08	 add	 esp, 8

; 450  : 		return;

  000b9	e9 9f 01 00 00	 jmp	 $LN19@Command_Ch
$LN6@Command_Ch:

; 451  : 	}
; 452  : 
; 453  : 	if (!strcasecmp(COM_Argv(1), "normalspeed"))

  000be	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LOLDGOGD@normalspeed@
  000c3	6a 01		 push	 1
  000c5	e8 00 00 00 00	 call	 _COM_Argv
  000ca	83 c4 04	 add	 esp, 4
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 _stricmp
  000d3	83 c4 08	 add	 esp, 8
  000d6	85 c0		 test	 eax, eax
  000d8	75 28		 jne	 SHORT $LN8@Command_Ch

; 454  : 		players[consoleplayer].normalspeed = atoi(COM_Argv(2));

  000da	6a 02		 push	 2
  000dc	e8 00 00 00 00	 call	 _COM_Argv
  000e1	83 c4 04	 add	 esp, 4
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 _atoi
  000ea	83 c4 04	 add	 esp, 4
  000ed	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  000f7	89 81 c4 00 00
	00		 mov	 DWORD PTR _players[ecx+196], eax
  000fd	e9 5b 01 00 00	 jmp	 $LN19@Command_Ch
$LN8@Command_Ch:

; 455  : 	else if (!strcasecmp(COM_Argv(1), "runspeed"))

  00102	68 00 00 00 00	 push	 OFFSET ??_C@_08MPILJHLH@runspeed@
  00107	6a 01		 push	 1
  00109	e8 00 00 00 00	 call	 _COM_Argv
  0010e	83 c4 04	 add	 esp, 4
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 _stricmp
  00117	83 c4 08	 add	 esp, 8
  0011a	85 c0		 test	 eax, eax
  0011c	75 28		 jne	 SHORT $LN10@Command_Ch

; 456  : 		players[consoleplayer].runspeed = atoi(COM_Argv(2));

  0011e	6a 02		 push	 2
  00120	e8 00 00 00 00	 call	 _COM_Argv
  00125	83 c4 04	 add	 esp, 4
  00128	50		 push	 eax
  00129	e8 00 00 00 00	 call	 _atoi
  0012e	83 c4 04	 add	 esp, 4
  00131	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  0013b	89 81 c8 00 00
	00		 mov	 DWORD PTR _players[ecx+200], eax
  00141	e9 17 01 00 00	 jmp	 $LN19@Command_Ch
$LN10@Command_Ch:

; 457  : 	else if (!strcasecmp(COM_Argv(1), "thrustfactor"))

  00146	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LMABHIBC@thrustfactor@
  0014b	6a 01		 push	 1
  0014d	e8 00 00 00 00	 call	 _COM_Argv
  00152	83 c4 04	 add	 esp, 4
  00155	50		 push	 eax
  00156	e8 00 00 00 00	 call	 _stricmp
  0015b	83 c4 08	 add	 esp, 8
  0015e	85 c0		 test	 eax, eax
  00160	75 28		 jne	 SHORT $LN12@Command_Ch

; 458  : 		players[consoleplayer].thrustfactor = atoi(COM_Argv(2));

  00162	6a 02		 push	 2
  00164	e8 00 00 00 00	 call	 _COM_Argv
  00169	83 c4 04	 add	 esp, 4
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 _atoi
  00172	83 c4 04	 add	 esp, 4
  00175	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  0017f	89 81 cc 00 00
	00		 mov	 DWORD PTR _players[ecx+204], eax
  00185	e9 d3 00 00 00	 jmp	 $LN19@Command_Ch
$LN12@Command_Ch:

; 459  : 	else if (!strcasecmp(COM_Argv(1), "accelstart"))

  0018a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JAFJCEHN@accelstart@
  0018f	6a 01		 push	 1
  00191	e8 00 00 00 00	 call	 _COM_Argv
  00196	83 c4 04	 add	 esp, 4
  00199	50		 push	 eax
  0019a	e8 00 00 00 00	 call	 _stricmp
  0019f	83 c4 08	 add	 esp, 8
  001a2	85 c0		 test	 eax, eax
  001a4	75 28		 jne	 SHORT $LN14@Command_Ch

; 460  : 		players[consoleplayer].accelstart = atoi(COM_Argv(2));

  001a6	6a 02		 push	 2
  001a8	e8 00 00 00 00	 call	 _COM_Argv
  001ad	83 c4 04	 add	 esp, 4
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 _atoi
  001b6	83 c4 04	 add	 esp, 4
  001b9	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  001c3	89 81 d0 00 00
	00		 mov	 DWORD PTR _players[ecx+208], eax
  001c9	e9 8f 00 00 00	 jmp	 $LN19@Command_Ch
$LN14@Command_Ch:

; 461  : 	else if (!strcasecmp(COM_Argv(1), "acceleration"))

  001ce	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OKFAMOHD@acceleration@
  001d3	6a 01		 push	 1
  001d5	e8 00 00 00 00	 call	 _COM_Argv
  001da	83 c4 04	 add	 esp, 4
  001dd	50		 push	 eax
  001de	e8 00 00 00 00	 call	 _stricmp
  001e3	83 c4 08	 add	 esp, 8
  001e6	85 c0		 test	 eax, eax
  001e8	75 25		 jne	 SHORT $LN16@Command_Ch

; 462  : 		players[consoleplayer].acceleration = atoi(COM_Argv(2));

  001ea	6a 02		 push	 2
  001ec	e8 00 00 00 00	 call	 _COM_Argv
  001f1	83 c4 04	 add	 esp, 4
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 _atoi
  001fa	83 c4 04	 add	 esp, 4
  001fd	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  00207	89 81 d4 00 00
	00		 mov	 DWORD PTR _players[ecx+212], eax
  0020d	eb 4e		 jmp	 SHORT $LN19@Command_Ch
$LN16@Command_Ch:

; 463  : 	else if (!strcasecmp(COM_Argv(1), "actionspd"))

  0020f	68 00 00 00 00	 push	 OFFSET ??_C@_09ICMAGONI@actionspd@
  00214	6a 01		 push	 1
  00216	e8 00 00 00 00	 call	 _COM_Argv
  0021b	83 c4 04	 add	 esp, 4
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 _stricmp
  00224	83 c4 08	 add	 esp, 8
  00227	85 c0		 test	 eax, eax
  00229	75 25		 jne	 SHORT $LN18@Command_Ch

; 464  : 		players[consoleplayer].actionspd = atoi(COM_Argv(2));

  0022b	6a 02		 push	 2
  0022d	e8 00 00 00 00	 call	 _COM_Argv
  00232	83 c4 04	 add	 esp, 4
  00235	50		 push	 eax
  00236	e8 00 00 00 00	 call	 _atoi
  0023b	83 c4 04	 add	 esp, 4
  0023e	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  00248	89 81 ec 00 00
	00		 mov	 DWORD PTR _players[ecx+236], eax
  0024e	eb 0d		 jmp	 SHORT $LN19@Command_Ch
$LN18@Command_Ch:

; 465  : 	else
; 466  : 		CONS_Printf("charspeed <normalspeed/runspeed/thrustfactor/accelstart/acceleration/actionspd> <value>\n");

  00250	68 00 00 00 00	 push	 OFFSET ??_C@_0FJ@KPPDFGAJ@charspeed?5?$DMnormalspeed?1runspeed@
  00255	e8 00 00 00 00	 call	 _CONS_Printf
  0025a	83 c4 04	 add	 esp, 4
$LN19@Command_Ch:

; 467  : }

  0025d	5f		 pop	 edi
  0025e	5e		 pop	 esi
  0025f	5b		 pop	 ebx
  00260	8b e5		 mov	 esp, ebp
  00262	5d		 pop	 ebp
  00263	c3		 ret	 0
_Command_Charspeed_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_Charability_f
_TEXT	SEGMENT
_Command_Charability_f PROC				; COMDAT

; 394  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 395  : 	if (gamestate != GS_LEVEL || demoplayback)

  00009	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR _gamestate, 1
  00010	75 09		 jne	 SHORT $LN3@Command_Ch
  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _demoplayback, 0
  00019	74 24		 je	 SHORT $LN2@Command_Ch
$LN3@Command_Ch:

; 396  : 	{
; 397  : 		CONS_Printf("%s", text[MUSTBEINLEVEL]);

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	69 c8 fa 00 00
	00		 imul	 ecx, eax, 250
  00026	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  0002c	52		 push	 edx
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00032	e8 00 00 00 00	 call	 _CONS_Printf
  00037	83 c4 08	 add	 esp, 8

; 398  : 		return;

  0003a	e9 06 01 00 00	 jmp	 $LN11@Command_Ch
$LN2@Command_Ch:

; 399  : 	}
; 400  : 
; 401  : 	if (!cv_debug)

  0003f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _cv_debug, 0
  00046	75 24		 jne	 SHORT $LN4@Command_Ch

; 402  : 	{
; 403  : 		CONS_Printf("%s", text[NEED_DEVMODE]);

  00048	b8 04 00 00 00	 mov	 eax, 4
  0004d	69 c8 f8 00 00
	00		 imul	 ecx, eax, 248
  00053	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00059	52		 push	 edx
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0005f	e8 00 00 00 00	 call	 _CONS_Printf
  00064	83 c4 08	 add	 esp, 8

; 404  : 		return;

  00067	e9 d9 00 00 00	 jmp	 $LN11@Command_Ch
$LN4@Command_Ch:

; 405  : 	}
; 406  : 
; 407  : 	if (COM_Argc() < 3)

  0006c	e8 00 00 00 00	 call	 _COM_Argc
  00071	83 f8 03	 cmp	 eax, 3
  00074	73 12		 jae	 SHORT $LN5@Command_Ch

; 408  : 	{
; 409  : 		CONS_Printf("charability <1/2> <value>\n");

  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MJLIDLCC@charability?5?$DM1?12?$DO?5?$DMvalue?$DO?6@
  0007b	e8 00 00 00 00	 call	 _CONS_Printf
  00080	83 c4 04	 add	 esp, 4

; 410  : 		return;

  00083	e9 bd 00 00 00	 jmp	 $LN11@Command_Ch
$LN5@Command_Ch:

; 411  : 	}
; 412  : 
; 413  : 	if (netgame || multiplayer)

  00088	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  0008f	75 09		 jne	 SHORT $LN7@Command_Ch
  00091	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00098	74 24		 je	 SHORT $LN6@Command_Ch
$LN7@Command_Ch:

; 414  : 	{
; 415  : 		CONS_Printf("%s", text[CANTUSEMULTIPLAYER]);

  0009a	b8 04 00 00 00	 mov	 eax, 4
  0009f	69 c8 fc 00 00
	00		 imul	 ecx, eax, 252
  000a5	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  000ab	52		 push	 edx
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000b1	e8 00 00 00 00	 call	 _CONS_Printf
  000b6	83 c4 08	 add	 esp, 8

; 416  : 		return;

  000b9	e9 87 00 00 00	 jmp	 $LN11@Command_Ch
$LN6@Command_Ch:

; 417  : 	}
; 418  : 
; 419  : 	if (atoi(COM_Argv(1)) == 1)

  000be	6a 01		 push	 1
  000c0	e8 00 00 00 00	 call	 _COM_Argv
  000c5	83 c4 04	 add	 esp, 4
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 _atoi
  000ce	83 c4 04	 add	 esp, 4
  000d1	83 f8 01	 cmp	 eax, 1
  000d4	75 25		 jne	 SHORT $LN8@Command_Ch

; 420  : 		players[consoleplayer].charability = atoi(COM_Argv(2));

  000d6	6a 02		 push	 2
  000d8	e8 00 00 00 00	 call	 _COM_Argv
  000dd	83 c4 04	 add	 esp, 4
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 _atoi
  000e6	83 c4 04	 add	 esp, 4
  000e9	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  000f3	89 81 d8 00 00
	00		 mov	 DWORD PTR _players[ecx+216], eax
  000f9	eb 4a		 jmp	 SHORT $LN11@Command_Ch
$LN8@Command_Ch:

; 421  : 	else if (atoi(COM_Argv(1)) == 2)

  000fb	6a 01		 push	 1
  000fd	e8 00 00 00 00	 call	 _COM_Argv
  00102	83 c4 04	 add	 esp, 4
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 _atoi
  0010b	83 c4 04	 add	 esp, 4
  0010e	83 f8 02	 cmp	 eax, 2
  00111	75 25		 jne	 SHORT $LN10@Command_Ch

; 422  : 		players[consoleplayer].charability2 = atoi(COM_Argv(2));

  00113	6a 02		 push	 2
  00115	e8 00 00 00 00	 call	 _COM_Argv
  0011a	83 c4 04	 add	 esp, 4
  0011d	50		 push	 eax
  0011e	e8 00 00 00 00	 call	 _atoi
  00123	83 c4 04	 add	 esp, 4
  00126	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  00130	89 81 dc 00 00
	00		 mov	 DWORD PTR _players[ecx+220], eax
  00136	eb 0d		 jmp	 SHORT $LN11@Command_Ch
$LN10@Command_Ch:

; 423  : 	else
; 424  : 		CONS_Printf("charability <1/2> <value>\n");

  00138	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MJLIDLCC@charability?5?$DM1?12?$DO?5?$DMvalue?$DO?6@
  0013d	e8 00 00 00 00	 call	 _CONS_Printf
  00142	83 c4 04	 add	 esp, 4
$LN11@Command_Ch:

; 425  : }

  00145	5f		 pop	 edi
  00146	5e		 pop	 esi
  00147	5b		 pop	 ebx
  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
_Command_Charability_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_Hurtme_f
_TEXT	SEGMENT
_Command_Hurtme_f PROC					; COMDAT

; 365  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 366  : 	if (gamestate != GS_LEVEL || demoplayback)

  00009	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR _gamestate, 1
  00010	75 09		 jne	 SHORT $LN3@Command_Hu
  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _demoplayback, 0
  00019	74 24		 je	 SHORT $LN2@Command_Hu
$LN3@Command_Hu:

; 367  : 	{
; 368  : 		CONS_Printf("%s", text[MUSTBEINLEVEL]);

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	69 c8 fa 00 00
	00		 imul	 ecx, eax, 250
  00026	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  0002c	52		 push	 edx
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00032	e8 00 00 00 00	 call	 _CONS_Printf
  00037	83 c4 08	 add	 esp, 8

; 369  : 		return;

  0003a	e9 a7 00 00 00	 jmp	 $LN1@Command_Hu
$LN2@Command_Hu:

; 370  : 	}
; 371  : 
; 372  : 	if (!cv_debug)

  0003f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _cv_debug, 0
  00046	75 21		 jne	 SHORT $LN4@Command_Hu

; 373  : 	{
; 374  : 		CONS_Printf("%s", text[NEED_DEVMODE]);

  00048	b8 04 00 00 00	 mov	 eax, 4
  0004d	69 c8 f8 00 00
	00		 imul	 ecx, eax, 248
  00053	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00059	52		 push	 edx
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0005f	e8 00 00 00 00	 call	 _CONS_Printf
  00064	83 c4 08	 add	 esp, 8

; 375  : 		return;

  00067	eb 7d		 jmp	 SHORT $LN1@Command_Hu
$LN4@Command_Hu:

; 376  : 	}
; 377  : 
; 378  : 	if (netgame || multiplayer)

  00069	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  00070	75 09		 jne	 SHORT $LN6@Command_Hu
  00072	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00079	74 21		 je	 SHORT $LN5@Command_Hu
$LN6@Command_Hu:

; 379  : 	{
; 380  : 		CONS_Printf("%s", text[CANTUSEMULTIPLAYER]);

  0007b	b8 04 00 00 00	 mov	 eax, 4
  00080	69 c8 fc 00 00
	00		 imul	 ecx, eax, 252
  00086	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  0008c	52		 push	 edx
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00092	e8 00 00 00 00	 call	 _CONS_Printf
  00097	83 c4 08	 add	 esp, 8

; 381  : 		return;

  0009a	eb 4a		 jmp	 SHORT $LN1@Command_Hu
$LN5@Command_Hu:

; 382  : 	}
; 383  : 
; 384  : 	if (COM_Argc() < 2)

  0009c	e8 00 00 00 00	 call	 _COM_Argc
  000a1	83 f8 02	 cmp	 eax, 2
  000a4	73 0f		 jae	 SHORT $LN7@Command_Hu

; 385  : 	{
; 386  : 		CONS_Printf("hurtme <damage>\n");

  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JBEJGOMM@hurtme?5?$DMdamage?$DO?6@
  000ab	e8 00 00 00 00	 call	 _CONS_Printf
  000b0	83 c4 04	 add	 esp, 4

; 387  : 		return;

  000b3	eb 31		 jmp	 SHORT $LN1@Command_Hu
$LN7@Command_Hu:

; 388  : 	}
; 389  : 
; 390  : 	P_DamageMobj(players[consoleplayer].mo, NULL, NULL, atoi(COM_Argv(1)));

  000b5	6a 01		 push	 1
  000b7	e8 00 00 00 00	 call	 _COM_Argv
  000bc	83 c4 04	 add	 esp, 4
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 _atoi
  000c5	83 c4 04	 add	 esp, 4
  000c8	50		 push	 eax
  000c9	6a 00		 push	 0
  000cb	6a 00		 push	 0
  000cd	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000d7	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  000dd	51		 push	 ecx
  000de	e8 00 00 00 00	 call	 _P_DamageMobj
  000e3	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@Command_Hu:

; 391  : }

  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	5b		 pop	 ebx
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c3		 ret	 0
_Command_Hurtme_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_Gravflip_f
_TEXT	SEGMENT
_Command_Gravflip_f PROC				; COMDAT

; 339  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 340  : 	if (gamestate != GS_LEVEL || demoplayback)

  00009	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR _gamestate, 1
  00010	75 09		 jne	 SHORT $LN3@Command_Gr
  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _demoplayback, 0
  00019	74 24		 je	 SHORT $LN2@Command_Gr
$LN3@Command_Gr:

; 341  : 	{
; 342  : 		CONS_Printf("%s", text[MUSTBEINLEVEL]);

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	69 c8 fa 00 00
	00		 imul	 ecx, eax, 250
  00026	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  0002c	52		 push	 edx
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00032	e8 00 00 00 00	 call	 _CONS_Printf
  00037	83 c4 08	 add	 esp, 8

; 343  : 		return;

  0003a	e9 d3 00 00 00	 jmp	 $LN8@Command_Gr
$LN2@Command_Gr:

; 344  : 	}
; 345  : 
; 346  : 	if (!cv_debug)

  0003f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _cv_debug, 0
  00046	75 24		 jne	 SHORT $LN4@Command_Gr

; 347  : 	{
; 348  : 		CONS_Printf("%s", text[NEED_DEVMODE]);

  00048	b8 04 00 00 00	 mov	 eax, 4
  0004d	69 c8 f8 00 00
	00		 imul	 ecx, eax, 248
  00053	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00059	52		 push	 edx
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0005f	e8 00 00 00 00	 call	 _CONS_Printf
  00064	83 c4 08	 add	 esp, 8

; 349  : 		return;

  00067	e9 a6 00 00 00	 jmp	 $LN8@Command_Gr
$LN4@Command_Gr:

; 350  : 	}
; 351  : 
; 352  : 	if (netgame || multiplayer)

  0006c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  00073	75 09		 jne	 SHORT $LN6@Command_Gr
  00075	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  0007c	74 21		 je	 SHORT $LN5@Command_Gr
$LN6@Command_Gr:

; 353  : 	{
; 354  : 		CONS_Printf("%s", text[SINGLEPLAYERONLY]);

  0007e	b8 04 00 00 00	 mov	 eax, 4
  00083	69 c8 fe 00 00
	00		 imul	 ecx, eax, 254
  00089	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  0008f	52		 push	 edx
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00095	e8 00 00 00 00	 call	 _CONS_Printf
  0009a	83 c4 08	 add	 esp, 8

; 355  : 		return;

  0009d	eb 73		 jmp	 SHORT $LN8@Command_Gr
$LN5@Command_Gr:

; 356  : 	}
; 357  : 
; 358  : 	if (players[consoleplayer].powers[pw_gravityboots])

  0009f	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000a9	b9 04 00 00 00	 mov	 ecx, 4
  000ae	c1 e1 04	 shl	 ecx, 4
  000b1	83 bc 08 38 00
	00 00 00	 cmp	 DWORD PTR _players[eax+ecx+56], 0
  000b9	74 1f		 je	 SHORT $LN7@Command_Gr

; 359  : 		players[consoleplayer].powers[pw_gravityboots] = 0;

  000bb	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000c5	b9 04 00 00 00	 mov	 ecx, 4
  000ca	c1 e1 04	 shl	 ecx, 4
  000cd	c7 84 08 38 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _players[eax+ecx+56], 0
  000d8	eb 38		 jmp	 SHORT $LN8@Command_Gr
$LN7@Command_Gr:

; 360  : 	else
; 361  : 		players[consoleplayer].powers[pw_gravityboots] += 3600 * TICRATE;

  000da	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000e4	b9 04 00 00 00	 mov	 ecx, 4
  000e9	c1 e1 04	 shl	 ecx, 4
  000ec	8b 94 08 38 00
	00 00		 mov	 edx, DWORD PTR _players[eax+ecx+56]
  000f3	81 c2 30 ec 01
	00		 add	 edx, 126000		; 0001ec30H
  000f9	b8 04 00 00 00	 mov	 eax, 4
  000fe	c1 e0 04	 shl	 eax, 4
  00101	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  0010b	89 94 01 38 00
	00 00		 mov	 DWORD PTR _players[ecx+eax+56], edx
$LN8@Command_Gr:

; 362  : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
_Command_Gravflip_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_Scale_f
_TEXT	SEGMENT
_scale$ = -4						; size = 4
_Command_Scale_f PROC					; COMDAT

; 309  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 310  : 	INT32 scale = atoi(COM_Argv(1));

  00009	6a 01		 push	 1
  0000b	e8 00 00 00 00	 call	 _COM_Argv
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _atoi
  00019	83 c4 04	 add	 esp, 4
  0001c	89 45 fc	 mov	 DWORD PTR _scale$[ebp], eax

; 311  : 
; 312  : 	if (!cv_debug)

  0001f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _cv_debug, 0
  00026	75 24		 jne	 SHORT $LN2@Command_Sc

; 313  : 	{
; 314  : 		CONS_Printf("%s", text[NEED_DEVMODE]);

  00028	b8 04 00 00 00	 mov	 eax, 4
  0002d	69 c8 f8 00 00
	00		 imul	 ecx, eax, 248
  00033	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00039	52		 push	 edx
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0003f	e8 00 00 00 00	 call	 _CONS_Printf
  00044	83 c4 08	 add	 esp, 8

; 315  : 		return;

  00047	e9 a6 00 00 00	 jmp	 $LN1@Command_Sc
$LN2@Command_Sc:

; 316  : 	}
; 317  : 
; 318  : 	if (netgame || multiplayer)

  0004c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  00053	75 09		 jne	 SHORT $LN4@Command_Sc
  00055	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  0005c	74 21		 je	 SHORT $LN3@Command_Sc
$LN4@Command_Sc:

; 319  : 	{
; 320  : 		CONS_Printf("%s", text[SINGLEPLAYERONLY]);

  0005e	b8 04 00 00 00	 mov	 eax, 4
  00063	69 c8 fe 00 00
	00		 imul	 ecx, eax, 254
  00069	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  0006f	52		 push	 edx
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00075	e8 00 00 00 00	 call	 _CONS_Printf
  0007a	83 c4 08	 add	 esp, 8

; 321  : 		return;

  0007d	eb 73		 jmp	 SHORT $LN1@Command_Sc
$LN3@Command_Sc:

; 322  : 	}
; 323  : 
; 324  : 	if (!(scale >= 5 && scale <= 400)) //COM_Argv(1) will return a null string if they did not give a paramater, so...

  0007f	83 7d fc 05	 cmp	 DWORD PTR _scale$[ebp], 5
  00083	7c 09		 jl	 SHORT $LN6@Command_Sc
  00085	81 7d fc 90 01
	00 00		 cmp	 DWORD PTR _scale$[ebp], 400 ; 00000190H
  0008c	7e 0f		 jle	 SHORT $LN5@Command_Sc
$LN6@Command_Sc:

; 325  : 	{
; 326  : 		CONS_Printf("SCALE <value> (5-400): Set player scale size.\n");

  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@ICFKFBGN@SCALE?5?$DMvalue?$DO?5?$CI5?9400?$CJ?3?5Set?5play@
  00093	e8 00 00 00 00	 call	 _CONS_Printf
  00098	83 c4 04	 add	 esp, 4

; 327  : 		return;

  0009b	eb 55		 jmp	 SHORT $LN1@Command_Sc
$LN5@Command_Sc:

; 328  : 	}
; 329  : 
; 330  : 	if (!players[consoleplayer].mo)

  0009d	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000a7	83 b8 00 00 00
	00 00		 cmp	 DWORD PTR _players[eax], 0
  000ae	75 02		 jne	 SHORT $LN7@Command_Sc

; 331  : 		return;

  000b0	eb 40		 jmp	 SHORT $LN1@Command_Sc
$LN7@Command_Sc:

; 332  : 
; 333  : 	players[consoleplayer].mo->destscale = (UINT16)scale;

  000b2	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000bc	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  000c2	66 8b 55 fc	 mov	 dx, WORD PTR _scale$[ebp]
  000c6	66 89 91 ce 00
	00 00		 mov	 WORD PTR [ecx+206], dx

; 334  : 
; 335  : 	CONS_Printf("Scale set to %d\n", players[consoleplayer].mo->destscale);

  000cd	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000d7	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  000dd	0f b7 91 ce 00
	00 00		 movzx	 edx, WORD PTR [ecx+206]
  000e4	52		 push	 edx
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GPLKBLAA@Scale?5set?5to?5?$CFd?6@
  000ea	e8 00 00 00 00	 call	 _CONS_Printf
  000ef	83 c4 08	 add	 esp, 8
$LN1@Command_Sc:

; 336  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c3		 ret	 0
_Command_Scale_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_Devmode_f
_TEXT	SEGMENT
_Command_Devmode_f PROC					; COMDAT

; 591  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 592  : 	if (netgame || multiplayer)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  00010	75 09		 jne	 SHORT $LN3@Command_De
  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00019	74 05		 je	 SHORT $LN2@Command_De
$LN3@Command_De:

; 593  : 		return;

  0001b	e9 9a 00 00 00	 jmp	 $LN10@Command_De
$LN2@Command_De:

; 594  : 
; 595  : 	if (COM_Argc() > 1)

  00020	e8 00 00 00 00	 call	 _COM_Argc
  00025	83 f8 01	 cmp	 eax, 1
  00028	76 1a		 jbe	 SHORT $LN4@Command_De

; 596  : 		cv_debug = atoi(COM_Argv(1));

  0002a	6a 01		 push	 1
  0002c	e8 00 00 00 00	 call	 _COM_Argv
  00031	83 c4 04	 add	 esp, 4
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 _atoi
  0003a	83 c4 04	 add	 esp, 4
  0003d	a3 00 00 00 00	 mov	 DWORD PTR _cv_debug, eax
  00042	eb 1f		 jmp	 SHORT $LN7@Command_De
$LN4@Command_De:

; 597  : 	else if (!cv_debug)

  00044	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _cv_debug, 0
  0004b	75 0c		 jne	 SHORT $LN6@Command_De

; 598  : 		cv_debug = 1;

  0004d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _cv_debug, 1
  00057	eb 0a		 jmp	 SHORT $LN7@Command_De
$LN6@Command_De:

; 599  : 	else
; 600  : 		cv_debug = 0;

  00059	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _cv_debug, 0
$LN7@Command_De:

; 601  : 
; 602  : 	if (!modifiedgame || savemoddata)

  00063	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _modifiedgame, 0
  0006a	74 09		 je	 SHORT $LN9@Command_De
  0006c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _savemoddata, 0
  00073	74 45		 je	 SHORT $LN10@Command_De
$LN9@Command_De:

; 603  : 	{
; 604  : 		modifiedgame = true;

  00075	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _modifiedgame, 1

; 605  : 		savemoddata = false;

  0007f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _savemoddata, 0

; 606  : 		if (!(netgame || multiplayer))

  00089	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  00090	75 28		 jne	 SHORT $LN10@Command_De
  00092	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00099	75 1f		 jne	 SHORT $LN10@Command_De

; 607  : 			CONS_Printf("%s", text[GAMEMODIFIED]);

  0009b	b8 04 00 00 00	 mov	 eax, 4
  000a0	69 c8 f5 00 00
	00		 imul	 ecx, eax, 245
  000a6	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  000ac	52		 push	 edx
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000b2	e8 00 00 00 00	 call	 _CONS_Printf
  000b7	83 c4 08	 add	 esp, 8
$LN10@Command_De:

; 608  : 	}
; 609  : }

  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c3		 ret	 0
_Command_Devmode_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_Unlockall_f
_TEXT	SEGMENT
_Command_Unlockall_f PROC				; COMDAT

; 572  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 573  : 	if (!cv_debug)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _cv_debug, 0
  00010	75 21		 jne	 SHORT $LN2@Command_Un

; 574  : 	{
; 575  : 		CONS_Printf("%s", text[NEED_DEVMODE]);

  00012	b8 04 00 00 00	 mov	 eax, 4
  00017	69 c8 f8 00 00
	00		 imul	 ecx, eax, 248
  0001d	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00023	52		 push	 edx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00029	e8 00 00 00 00	 call	 _CONS_Printf
  0002e	83 c4 08	 add	 esp, 8

; 576  : 		return;

  00031	eb 4f		 jmp	 SHORT $LN1@Command_Un
$LN2@Command_Un:

; 577  : 	}
; 578  : 
; 579  : 	if (netgame || multiplayer)

  00033	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  0003a	75 09		 jne	 SHORT $LN4@Command_Un
  0003c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00043	74 21		 je	 SHORT $LN3@Command_Un
$LN4@Command_Un:

; 580  : 	{
; 581  : 		CONS_Printf("%s", text[SINGLEPLAYERONLY]);

  00045	b8 04 00 00 00	 mov	 eax, 4
  0004a	69 c8 fe 00 00
	00		 imul	 ecx, eax, 254
  00050	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00056	52		 push	 edx
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0005c	e8 00 00 00 00	 call	 _CONS_Printf
  00061	83 c4 08	 add	 esp, 8

; 582  : 		return;

  00064	eb 1c		 jmp	 SHORT $LN1@Command_Un
$LN3@Command_Un:

; 583  : 	}
; 584  : 
; 585  : 	grade |= 4095;

  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR _grade
  0006b	0d ff 0f 00 00	 or	 eax, 4095		; 00000fffH
  00070	a3 00 00 00 00	 mov	 DWORD PTR _grade, eax

; 586  : 
; 587  : 	CONS_Printf("All secrets unlocked.\n");

  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@MBGOLJNF@All?5secrets?5unlocked?4?6@
  0007a	e8 00 00 00 00	 call	 _CONS_Printf
  0007f	83 c4 04	 add	 esp, 4
$LN1@Command_Un:

; 588  : }

  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
_Command_Unlockall_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_Resetemeralds_f
_TEXT	SEGMENT
_Command_Resetemeralds_f PROC				; COMDAT

; 553  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 554  : 	if (!cv_debug)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _cv_debug, 0
  00010	75 21		 jne	 SHORT $LN2@Command_Re

; 555  : 	{
; 556  : 		CONS_Printf("%s", text[NEED_DEVMODE]);

  00012	b8 04 00 00 00	 mov	 eax, 4
  00017	69 c8 f8 00 00
	00		 imul	 ecx, eax, 248
  0001d	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00023	52		 push	 edx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00029	e8 00 00 00 00	 call	 _CONS_Printf
  0002e	83 c4 08	 add	 esp, 8

; 557  : 		return;

  00031	eb 48		 jmp	 SHORT $LN1@Command_Re
$LN2@Command_Re:

; 558  : 	}
; 559  : 
; 560  : 	if (netgame || multiplayer)

  00033	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  0003a	75 09		 jne	 SHORT $LN4@Command_Re
  0003c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00043	74 21		 je	 SHORT $LN3@Command_Re
$LN4@Command_Re:

; 561  : 	{
; 562  : 		CONS_Printf("%s", text[SINGLEPLAYERONLY]);

  00045	b8 04 00 00 00	 mov	 eax, 4
  0004a	69 c8 fe 00 00
	00		 imul	 ecx, eax, 254
  00050	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00056	52		 push	 edx
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0005c	e8 00 00 00 00	 call	 _CONS_Printf
  00061	83 c4 08	 add	 esp, 8

; 563  : 		return;

  00064	eb 15		 jmp	 SHORT $LN1@Command_Re
$LN3@Command_Re:

; 564  : 	}
; 565  : 
; 566  : 	emeralds = 0;

  00066	33 c0		 xor	 eax, eax
  00068	66 a3 00 00 00
	00		 mov	 WORD PTR _emeralds, ax

; 567  : 
; 568  : 	CONS_Printf("Emeralds reset to zero.\n");

  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HHCILNFK@Emeralds?5reset?5to?5zero?4?6@
  00073	e8 00 00 00 00	 call	 _CONS_Printf
  00078	83 c4 04	 add	 esp, 4
$LN1@Command_Re:

; 569  : }

  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
_Command_Resetemeralds_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_Getallemeralds_f
_TEXT	SEGMENT
_Command_Getallemeralds_f PROC				; COMDAT

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 535  : 	if (!cv_debug)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _cv_debug, 0
  00010	75 21		 jne	 SHORT $LN2@Command_Ge

; 536  : 	{
; 537  : 		CONS_Printf("%s", text[NEED_DEVMODE]);

  00012	b8 04 00 00 00	 mov	 eax, 4
  00017	69 c8 f8 00 00
	00		 imul	 ecx, eax, 248
  0001d	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00023	52		 push	 edx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00029	e8 00 00 00 00	 call	 _CONS_Printf
  0002e	83 c4 08	 add	 esp, 8

; 538  : 		return;

  00031	eb 4b		 jmp	 SHORT $LN1@Command_Ge
$LN2@Command_Ge:

; 539  : 	}
; 540  : 
; 541  : 	if (netgame || multiplayer)

  00033	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  0003a	75 09		 jne	 SHORT $LN4@Command_Ge
  0003c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00043	74 21		 je	 SHORT $LN3@Command_Ge
$LN4@Command_Ge:

; 542  : 	{
; 543  : 		CONS_Printf("%s", text[SINGLEPLAYERONLY]);

  00045	b8 04 00 00 00	 mov	 eax, 4
  0004a	69 c8 fe 00 00
	00		 imul	 ecx, eax, 254
  00050	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00056	52		 push	 edx
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0005c	e8 00 00 00 00	 call	 _CONS_Printf
  00061	83 c4 08	 add	 esp, 8

; 544  : 		return;

  00064	eb 18		 jmp	 SHORT $LN1@Command_Ge
$LN3@Command_Ge:

; 545  : 	}
; 546  : 
; 547  : 	emeralds = ((EMERALD7)*2)-1;

  00066	b8 7f 00 00 00	 mov	 eax, 127		; 0000007fH
  0006b	66 a3 00 00 00
	00		 mov	 WORD PTR _emeralds, ax

; 548  : 
; 549  : 	CONS_Printf("You now have all 7 emeralds.\n");

  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DMJPOOCJ@You?5now?5have?5all?57?5emeralds?4?6@
  00076	e8 00 00 00 00	 call	 _CONS_Printf
  0007b	83 c4 04	 add	 esp, 4
$LN1@Command_Ge:

; 550  : }

  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	5b		 pop	 ebx
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
_Command_Getallemeralds_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_Savecheckpoint_f
_TEXT	SEGMENT
_Command_Savecheckpoint_f PROC				; COMDAT

; 510  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 511  : 	if (!cv_debug)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _cv_debug, 0
  00010	75 24		 jne	 SHORT $LN2@Command_Sa

; 512  : 	{
; 513  : 		CONS_Printf("%s", text[NEED_DEVMODE]);

  00012	b8 04 00 00 00	 mov	 eax, 4
  00017	69 c8 f8 00 00
	00		 imul	 ecx, eax, 248
  0001d	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00023	52		 push	 edx
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00029	e8 00 00 00 00	 call	 _CONS_Printf
  0002e	83 c4 08	 add	 esp, 8

; 514  : 		return;

  00031	e9 2b 01 00 00	 jmp	 $LN1@Command_Sa
$LN2@Command_Sa:

; 515  : 	}
; 516  : 
; 517  : 	if (netgame || multiplayer)

  00036	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  0003d	75 09		 jne	 SHORT $LN4@Command_Sa
  0003f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00046	74 24		 je	 SHORT $LN3@Command_Sa
$LN4@Command_Sa:

; 518  : 	{
; 519  : 		CONS_Printf("%s", text[SINGLEPLAYERONLY]);

  00048	b8 04 00 00 00	 mov	 eax, 4
  0004d	69 c8 fe 00 00
	00		 imul	 ecx, eax, 254
  00053	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  00059	52		 push	 edx
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0005f	e8 00 00 00 00	 call	 _CONS_Printf
  00064	83 c4 08	 add	 esp, 8

; 520  : 		return;

  00067	e9 f5 00 00 00	 jmp	 $LN1@Command_Sa
$LN3@Command_Sa:

; 521  : 	}
; 522  : 
; 523  : 	players[consoleplayer].starposttime = players[consoleplayer].realtime;

  0006c	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  00076	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  00080	8b 90 54 01 00
	00		 mov	 edx, DWORD PTR _players[eax+340]
  00086	89 91 90 01 00
	00		 mov	 DWORD PTR _players[ecx+400], edx

; 524  : 	players[consoleplayer].starpostx = players[consoleplayer].mo->x>>FRACBITS;

  0008c	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  00096	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  0009c	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0009f	c1 fa 10	 sar	 edx, 16			; 00000010H
  000a2	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000ac	89 90 80 01 00
	00		 mov	 DWORD PTR _players[eax+384], edx

; 525  : 	players[consoleplayer].starposty = players[consoleplayer].mo->y>>FRACBITS;

  000b2	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000bc	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  000c2	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000c5	c1 fa 10	 sar	 edx, 16			; 00000010H
  000c8	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000d2	89 90 84 01 00
	00		 mov	 DWORD PTR _players[eax+388], edx

; 526  : 	players[consoleplayer].starpostz = players[consoleplayer].mo->floorz>>FRACBITS;

  000d8	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000e2	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  000e8	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000eb	c1 fa 10	 sar	 edx, 16			; 00000010H
  000ee	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  000f8	89 90 88 01 00
	00		 mov	 DWORD PTR _players[eax+392], edx

; 527  : 	players[consoleplayer].starpostangle = players[consoleplayer].mo->angle;

  000fe	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  00108	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _players[eax]
  0010e	69 15 00 00 00
	00 fc 01 00 00	 imul	 edx, DWORD PTR _consoleplayer, 508
  00118	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  0011b	89 82 94 01 00
	00		 mov	 DWORD PTR _players[edx+404], eax

; 528  : 
; 529  : 	CONS_Printf("Temporary checkpoint created at %d, %d, %d\n", players[consoleplayer].starpostx, players[consoleplayer].starposty, players[consoleplayer].starpostz);

  00121	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  0012b	8b 88 88 01 00
	00		 mov	 ecx, DWORD PTR _players[eax+392]
  00131	51		 push	 ecx
  00132	69 15 00 00 00
	00 fc 01 00 00	 imul	 edx, DWORD PTR _consoleplayer, 508
  0013c	8b 82 84 01 00
	00		 mov	 eax, DWORD PTR _players[edx+388]
  00142	50		 push	 eax
  00143	69 0d 00 00 00
	00 fc 01 00 00	 imul	 ecx, DWORD PTR _consoleplayer, 508
  0014d	8b 91 80 01 00
	00		 mov	 edx, DWORD PTR _players[ecx+384]
  00153	52		 push	 edx
  00154	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@KGCGDKBI@Temporary?5checkpoint?5created?5at@
  00159	e8 00 00 00 00	 call	 _CONS_Printf
  0015e	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@Command_Sa:

; 530  : }

  00161	5f		 pop	 edi
  00162	5e		 pop	 esi
  00163	5b		 pop	 ebx
  00164	8b e5		 mov	 esp, ebp
  00166	5d		 pop	 ebp
  00167	c3		 ret	 0
_Command_Savecheckpoint_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_CheatGod_f
_TEXT	SEGMENT
tv73 = -72						; size = 4
_plyr$ = -4						; size = 4
_Command_CheatGod_f PROC				; COMDAT

; 289  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 290  : 	player_t *plyr;
; 291  : 
; 292  : 	if (multiplayer)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00010	74 05		 je	 SHORT $LN2@Command_Ch

; 293  : 		return;

  00012	e9 ad 00 00 00	 jmp	 $LN5@Command_Ch
$LN2@Command_Ch:

; 294  : 
; 295  : 	plyr = &players[consoleplayer];

  00017	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  00021	05 00 00 00 00	 add	 eax, OFFSET _players
  00026	89 45 fc	 mov	 DWORD PTR _plyr$[ebp], eax

; 296  : 	plyr->pflags ^= PF_GODMODE;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _plyr$[ebp]
  0002c	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00032	83 f1 20	 xor	 ecx, 32			; 00000020H
  00035	8b 55 fc	 mov	 edx, DWORD PTR _plyr$[ebp]
  00038	89 8a ac 00 00
	00		 mov	 DWORD PTR [edx+172], ecx

; 297  : 	CONS_Printf("Sissy Mode %s\n", plyr->pflags & PF_GODMODE ? "On" : "Off");

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _plyr$[ebp]
  00041	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00047	83 e1 20	 and	 ecx, 32			; 00000020H
  0004a	74 09		 je	 SHORT $LN7@Command_Ch
  0004c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], OFFSET ??_C@_02IAAGKKDJ@On@
  00053	eb 07		 jmp	 SHORT $LN8@Command_Ch
$LN7@Command_Ch:
  00055	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], OFFSET ??_C@_03GCDBBDDL@Off@
$LN8@Command_Ch:
  0005c	8b 55 b8	 mov	 edx, DWORD PTR tv73[ebp]
  0005f	52		 push	 edx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PADIMAAB@Sissy?5Mode?5?$CFs?6@
  00065	e8 00 00 00 00	 call	 _CONS_Printf
  0006a	83 c4 08	 add	 esp, 8

; 298  : 
; 299  : 	if (!modifiedgame || savemoddata)

  0006d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _modifiedgame, 0
  00074	74 09		 je	 SHORT $LN4@Command_Ch
  00076	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _savemoddata, 0
  0007d	74 45		 je	 SHORT $LN5@Command_Ch
$LN4@Command_Ch:

; 300  : 	{
; 301  : 		modifiedgame = true;

  0007f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _modifiedgame, 1

; 302  : 		savemoddata = false;

  00089	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _savemoddata, 0

; 303  : 		if (!(netgame || multiplayer))

  00093	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  0009a	75 28		 jne	 SHORT $LN5@Command_Ch
  0009c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  000a3	75 1f		 jne	 SHORT $LN5@Command_Ch

; 304  : 			CONS_Printf("%s", text[GAMEMODIFIED]);

  000a5	b8 04 00 00 00	 mov	 eax, 4
  000aa	69 c8 f5 00 00
	00		 imul	 ecx, eax, 245
  000b0	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  000b6	52		 push	 edx
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000bc	e8 00 00 00 00	 call	 _CONS_Printf
  000c1	83 c4 08	 add	 esp, 8
$LN5@Command_Ch:

; 305  : 	}
; 306  : }

  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
_Command_CheatGod_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _Command_CheatNoClip_f
_TEXT	SEGMENT
tv73 = -72						; size = 4
_plyr$ = -4						; size = 4
_Command_CheatNoClip_f PROC				; COMDAT

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 271  : 	player_t *plyr;
; 272  : 	if (multiplayer)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  00010	74 05		 je	 SHORT $LN2@Command_Ch

; 273  : 		return;

  00012	e9 ad 00 00 00	 jmp	 $LN5@Command_Ch
$LN2@Command_Ch:

; 274  : 
; 275  : 	plyr = &players[consoleplayer];

  00017	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  00021	05 00 00 00 00	 add	 eax, OFFSET _players
  00026	89 45 fc	 mov	 DWORD PTR _plyr$[ebp], eax

; 276  : 	plyr->pflags ^= PF_NOCLIP;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _plyr$[ebp]
  0002c	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00032	83 f1 40	 xor	 ecx, 64			; 00000040H
  00035	8b 55 fc	 mov	 edx, DWORD PTR _plyr$[ebp]
  00038	89 8a ac 00 00
	00		 mov	 DWORD PTR [edx+172], ecx

; 277  : 	CONS_Printf("No Clipping %s\n", plyr->pflags & PF_NOCLIP ? "On" : "Off");

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _plyr$[ebp]
  00041	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [eax+172]
  00047	83 e1 40	 and	 ecx, 64			; 00000040H
  0004a	74 09		 je	 SHORT $LN7@Command_Ch
  0004c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], OFFSET ??_C@_02IAAGKKDJ@On@
  00053	eb 07		 jmp	 SHORT $LN8@Command_Ch
$LN7@Command_Ch:
  00055	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], OFFSET ??_C@_03GCDBBDDL@Off@
$LN8@Command_Ch:
  0005c	8b 55 b8	 mov	 edx, DWORD PTR tv73[ebp]
  0005f	52		 push	 edx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DNKPIFAA@No?5Clipping?5?$CFs?6@
  00065	e8 00 00 00 00	 call	 _CONS_Printf
  0006a	83 c4 08	 add	 esp, 8

; 278  : 
; 279  : 	if (!modifiedgame || savemoddata)

  0006d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _modifiedgame, 0
  00074	74 09		 je	 SHORT $LN4@Command_Ch
  00076	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _savemoddata, 0
  0007d	74 45		 je	 SHORT $LN5@Command_Ch
$LN4@Command_Ch:

; 280  : 	{
; 281  : 		modifiedgame = true;

  0007f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _modifiedgame, 1

; 282  : 		savemoddata = false;

  00089	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _savemoddata, 0

; 283  : 		if (!(netgame || multiplayer))

  00093	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _netgame, 0
  0009a	75 28		 jne	 SHORT $LN5@Command_Ch
  0009c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _multiplayer, 0
  000a3	75 1f		 jne	 SHORT $LN5@Command_Ch

; 284  : 			CONS_Printf("%s", text[GAMEMODIFIED]);

  000a5	b8 04 00 00 00	 mov	 eax, 4
  000aa	69 c8 f5 00 00
	00		 imul	 ecx, eax, 245
  000b0	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR _text[ecx]
  000b6	52		 push	 edx
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000bc	e8 00 00 00 00	 call	 _CONS_Printf
  000c1	83 c4 08	 add	 esp, 8
$LN5@Command_Ch:

; 285  : 	}
; 286  : }

  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
_Command_CheatNoClip_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _cht_Init
_TEXT	SEGMENT
_cc$1 = -12						; size = 4
_pi$ = -8						; size = 2
_i$ = -4						; size = 4
_cht_Init PROC						; COMDAT

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 86   : 	size_t i = 0;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0

; 87   : 	INT16 pi = 0;

  00010	33 c0		 xor	 eax, eax
  00012	66 89 45 f8	 mov	 WORD PTR _pi$[ebp], ax

; 88   : 	for (; i < 256; i++, pi++)

  00016	eb 15		 jmp	 SHORT $LN4@cht_Init
$LN2@cht_Init:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0001b	83 c0 01	 add	 eax, 1
  0001e	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
  00021	66 8b 4d f8	 mov	 cx, WORD PTR _pi$[ebp]
  00025	66 83 c1 01	 add	 cx, 1
  00029	66 89 4d f8	 mov	 WORD PTR _pi$[ebp], cx
$LN4@cht_Init:
  0002d	81 7d fc 00 01
	00 00		 cmp	 DWORD PTR _i$[ebp], 256	; 00000100H
  00034	73 6c		 jae	 SHORT $LN3@cht_Init

; 89   : 	{
; 90   : 		const INT32 cc = SCRAMBLE(pi);

  00036	0f bf 45 f8	 movsx	 eax, WORD PTR _pi$[ebp]
  0003a	83 e0 01	 and	 eax, 1
  0003d	c1 e0 07	 shl	 eax, 7
  00040	0f bf 4d f8	 movsx	 ecx, WORD PTR _pi$[ebp]
  00044	83 e1 02	 and	 ecx, 2
  00047	c1 e1 05	 shl	 ecx, 5
  0004a	03 c1		 add	 eax, ecx
  0004c	0f bf 55 f8	 movsx	 edx, WORD PTR _pi$[ebp]
  00050	83 e2 04	 and	 edx, 4
  00053	03 c2		 add	 eax, edx
  00055	0f bf 4d f8	 movsx	 ecx, WORD PTR _pi$[ebp]
  00059	83 e1 08	 and	 ecx, 8
  0005c	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  0005f	0f bf 45 f8	 movsx	 eax, WORD PTR _pi$[ebp]
  00063	83 e0 10	 and	 eax, 16			; 00000010H
  00066	d1 f8		 sar	 eax, 1
  00068	03 d0		 add	 edx, eax
  0006a	0f bf 4d f8	 movsx	 ecx, WORD PTR _pi$[ebp]
  0006e	83 e1 20	 and	 ecx, 32			; 00000020H
  00071	03 d1		 add	 edx, ecx
  00073	0f bf 45 f8	 movsx	 eax, WORD PTR _pi$[ebp]
  00077	83 e0 40	 and	 eax, 64			; 00000040H
  0007a	c1 f8 05	 sar	 eax, 5
  0007d	03 d0		 add	 edx, eax
  0007f	0f bf 4d f8	 movsx	 ecx, WORD PTR _pi$[ebp]
  00083	81 e1 80 00 00
	00		 and	 ecx, 128		; 00000080H
  00089	c1 f9 07	 sar	 ecx, 7
  0008c	03 d1		 add	 edx, ecx
  0008e	89 55 f4	 mov	 DWORD PTR _cc$1[ebp], edx

; 91   : 		cheat_xlate_table[i] = (UINT8)cc;

  00091	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00094	8a 4d f4	 mov	 cl, BYTE PTR _cc$1[ebp]
  00097	88 88 00 00 00
	00		 mov	 BYTE PTR _cheat_xlate_table[eax], cl

; 92   : 	}

  0009d	e9 76 ff ff ff	 jmp	 $LN2@cht_Init
$LN3@cht_Init:

; 93   : }

  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c3		 ret	 0
_cht_Init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\m_cheat.c
;	COMDAT _cht_Responder
_TEXT	SEGMENT
_mrandom$1 = -25					; size = 1
_sfxid$2 = -24						; size = 4
_mrandom$3 = -17					; size = 1
_sfxid$4 = -16						; size = 4
_mrandom$5 = -9						; size = 1
_emoticon$6 = -8					; size = 4
_sfxid$7 = -4						; size = 4
_ev$ = 8						; size = 4
_cht_Responder PROC					; COMDAT

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 146  : 	static player_t *plyr;
; 147  : 
; 148  : 	if (ev->type == ev_keydown && 0x00 <= ev->data1 && ev->data1 <= 0xFF)

  00009	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	0f 85 6a 02 00
	00		 jne	 $LN35@cht_Respon
  00015	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	0f 8c 5d 02 00
	00		 jl	 $LN35@cht_Respon
  00022	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00025	81 78 04 ff 00
	00 00		 cmp	 DWORD PTR [eax+4], 255	; 000000ffH
  0002c	0f 8f 4d 02 00
	00		 jg	 $LN35@cht_Respon

; 149  : 	{
; 150  : 		plyr = &players[consoleplayer];

  00032	69 05 00 00 00
	00 fc 01 00 00	 imul	 eax, DWORD PTR _consoleplayer, 508
  0003c	05 00 00 00 00	 add	 eax, OFFSET _players
  00041	a3 00 00 00 00	 mov	 DWORD PTR ?plyr@?1??cht_Responder@@9@9, eax

; 151  : 
; 152  : 		// devmode cheat
; 153  : 		if (cht_CheckCheat(&cheat_bulmer, (char)ev->data1))

  00046	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00049	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0004d	51		 push	 ecx
  0004e	68 00 00 00 00	 push	 OFFSET _cheat_bulmer
  00053	e8 00 00 00 00	 call	 _cht_CheckCheat
  00058	83 c4 08	 add	 esp, 8
  0005b	85 c0		 test	 eax, eax
  0005d	0f 84 9d 00 00
	00		 je	 $LN3@cht_Respon

; 154  : 		{
; 155  : 			sfxenum_t sfxid;
; 156  : 			const char *emoticon;
; 157  : 			UINT8 mrandom;
; 158  : 
; 159  : 			/*
; 160  : 			Shows a picture of David Bulmer with one the following messages:
; 161  : 			"*B^C", "*B^D", "*B^I", "*B^J", "*B^L", "*B^O", "*B^P", "*B^S", "*B^X"
; 162  : 			Accompany each emoticon with sound clip.
; 163  : 			*/
; 164  : 
; 165  : 			M_StartControlPanel();

  00063	e8 00 00 00 00	 call	 _M_StartControlPanel
  00068	90		 npad	 1

; 166  : 			M_SetupNextMenu(&ReadDef2);

  00069	68 00 00 00 00	 push	 OFFSET _ReadDef2
  0006e	e8 00 00 00 00	 call	 _M_SetupNextMenu
  00073	83 c4 04	 add	 esp, 4

; 167  : 
; 168  : 			mrandom = M_Random();

  00076	e8 00 00 00 00	 call	 _M_Random
  0007b	88 45 f7	 mov	 BYTE PTR _mrandom$5[ebp], al

; 169  : 
; 170  : 			if (mrandom < 64)

  0007e	0f b6 45 f7	 movzx	 eax, BYTE PTR _mrandom$5[ebp]
  00082	83 f8 40	 cmp	 eax, 64			; 00000040H
  00085	7d 10		 jge	 SHORT $LN5@cht_Respon

; 171  : 			{
; 172  : 				emoticon = "*B^O";

  00087	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _emoticon$6[ebp], OFFSET ??_C@_04JCHCPPIB@?$CKB?$FOO@

; 173  : 				sfxid = sfx_beeoh;

  0008e	c7 45 fc 20 00
	00 00		 mov	 DWORD PTR _sfxid$7[ebp], 32 ; 00000020H

; 174  : 			}

  00095	eb 44		 jmp	 SHORT $LN10@cht_Respon
$LN5@cht_Respon:

; 175  : 			else if (mrandom < 128)

  00097	0f b6 45 f7	 movzx	 eax, BYTE PTR _mrandom$5[ebp]
  0009b	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  000a0	7d 10		 jge	 SHORT $LN7@cht_Respon

; 176  : 			{
; 177  : 				emoticon = "*B^L";

  000a2	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _emoticon$6[ebp], OFFSET ??_C@_04LJFPKMEC@?$CKB?$FOL@

; 178  : 				sfxid = sfx_beeel;

  000a9	c7 45 fc 1e 00
	00 00		 mov	 DWORD PTR _sfxid$7[ebp], 30 ; 0000001eH

; 179  : 			}

  000b0	eb 29		 jmp	 SHORT $LN10@cht_Respon
$LN7@cht_Respon:

; 180  : 			else if (mrandom < 192)

  000b2	0f b6 45 f7	 movzx	 eax, BYTE PTR _mrandom$5[ebp]
  000b6	3d c0 00 00 00	 cmp	 eax, 192		; 000000c0H
  000bb	7d 10		 jge	 SHORT $LN9@cht_Respon

; 181  : 			{
; 182  : 				emoticon = "*B^J";

  000bd	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _emoticon$6[ebp], OFFSET ??_C@_04OPAFALME@?$CKB?$FOJ@

; 183  : 				sfxid = sfx_beejay;

  000c4	c7 45 fc 1f 00
	00 00		 mov	 DWORD PTR _sfxid$7[ebp], 31 ; 0000001fH

; 184  : 			}

  000cb	eb 0e		 jmp	 SHORT $LN10@cht_Respon
$LN9@cht_Respon:

; 185  : 			else
; 186  : 			{
; 187  : 				emoticon = "*B^D";

  000cd	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _emoticon$6[ebp], OFFSET ??_C@_04HBIGCGEK@?$CKB?$FOD@

; 188  : 				sfxid = sfx_beedee;

  000d4	c7 45 fc 1d 00
	00 00		 mov	 DWORD PTR _sfxid$7[ebp], 29 ; 0000001dH
$LN10@cht_Respon:

; 189  : 			}
; 190  : 
; 191  : 			HU_DoCEcho(emoticon);

  000db	8b 45 f8	 mov	 eax, DWORD PTR _emoticon$6[ebp]
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 _HU_DoCEcho
  000e4	83 c4 04	 add	 esp, 4

; 192  : 			COM_BufExecute();

  000e7	e8 00 00 00 00	 call	 _COM_BufExecute
  000ec	90		 npad	 1

; 193  : 			S_StartSound(0, sfxid);

  000ed	8b 45 fc	 mov	 eax, DWORD PTR _sfxid$7[ebp]
  000f0	50		 push	 eax
  000f1	6a 00		 push	 0
  000f3	e8 00 00 00 00	 call	 _S_StartSound
  000f8	83 c4 08	 add	 esp, 8

; 194  : 		}

  000fb	e9 7f 01 00 00	 jmp	 $LN35@cht_Respon
$LN3@cht_Respon:

; 195  : 		else if (cht_CheckCheat(&cheat_poksoc, (char)ev->data1))

  00100	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00103	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00107	51		 push	 ecx
  00108	68 00 00 00 00	 push	 OFFSET _cheat_poksoc
  0010d	e8 00 00 00 00	 call	 _cht_CheckCheat
  00112	83 c4 08	 add	 esp, 8
  00115	85 c0		 test	 eax, eax
  00117	0f 84 82 00 00
	00		 je	 $LN11@cht_Respon

; 196  : 		{
; 197  : 			sfxenum_t sfxid;
; 198  : 			UINT8 mrandom = M_Random();

  0011d	e8 00 00 00 00	 call	 _M_Random
  00122	88 45 ef	 mov	 BYTE PTR _mrandom$3[ebp], al

; 199  : 
; 200  : 			/*
; 201  : 			Plays one of these sounds:
; 202  : 			"You cheating, lying GIT!"
; 203  : 			"Hey... are you my Grandma?"
; 204  : 			"PIIIKKAAA!"
; 205  : 			"You little bugger!"
; 206  : 			"Oxy-pad, Oxy-pad, Oxy-pad, Ox--eeaygggh!"
; 207  : 			"(Eggman's Japanese) That's not fair, now two of your players have to die!"
; 208  : 			*/
; 209  : 
; 210  : 			if (mrandom < 48)

  00125	0f b6 45 ef	 movzx	 eax, BYTE PTR _mrandom$3[ebp]
  00129	83 f8 30	 cmp	 eax, 48			; 00000030H
  0012c	7d 09		 jge	 SHORT $LN13@cht_Respon

; 211  : 				sfxid = sfx_poksoc1;

  0012e	c7 45 f0 70 00
	00 00		 mov	 DWORD PTR _sfxid$4[ebp], 112 ; 00000070H
  00135	eb 55		 jmp	 SHORT $LN22@cht_Respon
$LN13@cht_Respon:

; 212  : 			else if (mrandom < 96)

  00137	0f b6 45 ef	 movzx	 eax, BYTE PTR _mrandom$3[ebp]
  0013b	83 f8 60	 cmp	 eax, 96			; 00000060H
  0013e	7d 09		 jge	 SHORT $LN15@cht_Respon

; 213  : 				sfxid = sfx_poksoc2;

  00140	c7 45 f0 71 00
	00 00		 mov	 DWORD PTR _sfxid$4[ebp], 113 ; 00000071H
  00147	eb 43		 jmp	 SHORT $LN22@cht_Respon
$LN15@cht_Respon:

; 214  : 			else if (mrandom < 144)

  00149	0f b6 45 ef	 movzx	 eax, BYTE PTR _mrandom$3[ebp]
  0014d	3d 90 00 00 00	 cmp	 eax, 144		; 00000090H
  00152	7d 09		 jge	 SHORT $LN17@cht_Respon

; 215  : 				sfxid = sfx_poksoc3;

  00154	c7 45 f0 72 00
	00 00		 mov	 DWORD PTR _sfxid$4[ebp], 114 ; 00000072H
  0015b	eb 2f		 jmp	 SHORT $LN22@cht_Respon
$LN17@cht_Respon:

; 216  : 			else if (mrandom < 192)

  0015d	0f b6 45 ef	 movzx	 eax, BYTE PTR _mrandom$3[ebp]
  00161	3d c0 00 00 00	 cmp	 eax, 192		; 000000c0H
  00166	7d 09		 jge	 SHORT $LN19@cht_Respon

; 217  : 				sfxid = sfx_poksoc4;

  00168	c7 45 f0 73 00
	00 00		 mov	 DWORD PTR _sfxid$4[ebp], 115 ; 00000073H
  0016f	eb 1b		 jmp	 SHORT $LN22@cht_Respon
$LN19@cht_Respon:

; 218  : 			else if (mrandom < 240)

  00171	0f b6 45 ef	 movzx	 eax, BYTE PTR _mrandom$3[ebp]
  00175	3d f0 00 00 00	 cmp	 eax, 240		; 000000f0H
  0017a	7d 09		 jge	 SHORT $LN21@cht_Respon

; 219  : 				sfxid = sfx_poksoc5;

  0017c	c7 45 f0 74 00
	00 00		 mov	 DWORD PTR _sfxid$4[ebp], 116 ; 00000074H
  00183	eb 07		 jmp	 SHORT $LN22@cht_Respon
$LN21@cht_Respon:

; 220  : 			else
; 221  : 				sfxid = sfx_poksoc6;

  00185	c7 45 f0 75 00
	00 00		 mov	 DWORD PTR _sfxid$4[ebp], 117 ; 00000075H
$LN22@cht_Respon:

; 222  : 
; 223  : 			S_StartSound(0, sfxid);

  0018c	8b 45 f0	 mov	 eax, DWORD PTR _sfxid$4[ebp]
  0018f	50		 push	 eax
  00190	6a 00		 push	 0
  00192	e8 00 00 00 00	 call	 _S_StartSound
  00197	83 c4 08	 add	 esp, 8

; 224  : 		}

  0019a	e9 e0 00 00 00	 jmp	 $LN35@cht_Respon
$LN11@cht_Respon:

; 225  : 		else if (cht_CheckCheat(&cheat_apl, (char)ev->data1))

  0019f	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  001a2	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  001a6	51		 push	 ecx
  001a7	68 00 00 00 00	 push	 OFFSET _cheat_apl
  001ac	e8 00 00 00 00	 call	 _cht_CheckCheat
  001b1	83 c4 08	 add	 esp, 8
  001b4	85 c0		 test	 eax, eax
  001b6	74 7f		 je	 SHORT $LN23@cht_Respon

; 226  : 		{
; 227  : 			sfxenum_t sfxid;
; 228  : 			UINT8 mrandom = M_Random();

  001b8	e8 00 00 00 00	 call	 _M_Random
  001bd	88 45 e7	 mov	 BYTE PTR _mrandom$1[ebp], al

; 229  : 
; 230  : 			/*
; 231  : 			Plays one of these sounds:
; 232  : 			"You do realize those are prohibited on planes, right?"
; 233  : 			"IT'S A HUNKY DUNKY SUPER SIZE BIG FAT REALLY REALLY BIG BOMB!"
; 234  : 			"Let's order a pizza!"
; 235  : 			"Tails, you made the engines quit!
; 236  : 			"Buggery! What happened out here?!"
; 237  : 			"Oh no! A GigaDoomBot!"
; 238  : 			*/
; 239  : 
; 240  : 			if (mrandom < 48)

  001c0	0f b6 45 e7	 movzx	 eax, BYTE PTR _mrandom$1[ebp]
  001c4	83 f8 30	 cmp	 eax, 48			; 00000030H
  001c7	7d 09		 jge	 SHORT $LN25@cht_Respon

; 241  : 				sfxid = sfx_apl1;

  001c9	c7 45 e8 14 00
	00 00		 mov	 DWORD PTR _sfxid$2[ebp], 20 ; 00000014H
  001d0	eb 55		 jmp	 SHORT $LN34@cht_Respon
$LN25@cht_Respon:

; 242  : 			else if (mrandom < 96)

  001d2	0f b6 45 e7	 movzx	 eax, BYTE PTR _mrandom$1[ebp]
  001d6	83 f8 60	 cmp	 eax, 96			; 00000060H
  001d9	7d 09		 jge	 SHORT $LN27@cht_Respon

; 243  : 				sfxid = sfx_apl2;

  001db	c7 45 e8 15 00
	00 00		 mov	 DWORD PTR _sfxid$2[ebp], 21 ; 00000015H
  001e2	eb 43		 jmp	 SHORT $LN34@cht_Respon
$LN27@cht_Respon:

; 244  : 			else if (mrandom < 144)

  001e4	0f b6 45 e7	 movzx	 eax, BYTE PTR _mrandom$1[ebp]
  001e8	3d 90 00 00 00	 cmp	 eax, 144		; 00000090H
  001ed	7d 09		 jge	 SHORT $LN29@cht_Respon

; 245  : 				sfxid = sfx_apl3;

  001ef	c7 45 e8 16 00
	00 00		 mov	 DWORD PTR _sfxid$2[ebp], 22 ; 00000016H
  001f6	eb 2f		 jmp	 SHORT $LN34@cht_Respon
$LN29@cht_Respon:

; 246  : 			else if (mrandom < 192)

  001f8	0f b6 45 e7	 movzx	 eax, BYTE PTR _mrandom$1[ebp]
  001fc	3d c0 00 00 00	 cmp	 eax, 192		; 000000c0H
  00201	7d 09		 jge	 SHORT $LN31@cht_Respon

; 247  : 				sfxid = sfx_apl4;

  00203	c7 45 e8 17 00
	00 00		 mov	 DWORD PTR _sfxid$2[ebp], 23 ; 00000017H
  0020a	eb 1b		 jmp	 SHORT $LN34@cht_Respon
$LN31@cht_Respon:

; 248  : 			else if (mrandom < 240)

  0020c	0f b6 45 e7	 movzx	 eax, BYTE PTR _mrandom$1[ebp]
  00210	3d f0 00 00 00	 cmp	 eax, 240		; 000000f0H
  00215	7d 09		 jge	 SHORT $LN33@cht_Respon

; 249  : 				sfxid = sfx_apl5;

  00217	c7 45 e8 18 00
	00 00		 mov	 DWORD PTR _sfxid$2[ebp], 24 ; 00000018H
  0021e	eb 07		 jmp	 SHORT $LN34@cht_Respon
$LN33@cht_Respon:

; 250  : 			else
; 251  : 				sfxid = sfx_apl6;

  00220	c7 45 e8 19 00
	00 00		 mov	 DWORD PTR _sfxid$2[ebp], 25 ; 00000019H
$LN34@cht_Respon:

; 252  : 
; 253  : 			S_StartSound(0, sfxid);

  00227	8b 45 e8	 mov	 eax, DWORD PTR _sfxid$2[ebp]
  0022a	50		 push	 eax
  0022b	6a 00		 push	 0
  0022d	e8 00 00 00 00	 call	 _S_StartSound
  00232	83 c4 08	 add	 esp, 8

; 254  : 		}

  00235	eb 48		 jmp	 SHORT $LN35@cht_Respon
$LN23@cht_Respon:

; 255  : 		else if (cht_CheckCheat(&cheat_ultimate, (char)ev->data1))

  00237	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0023a	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0023e	51		 push	 ecx
  0023f	68 00 00 00 00	 push	 OFFSET _cheat_ultimate
  00244	e8 00 00 00 00	 call	 _cht_CheckCheat
  00249	83 c4 08	 add	 esp, 8
  0024c	85 c0		 test	 eax, eax
  0024e	74 2f		 je	 SHORT $LN35@cht_Respon

; 256  : 		{
; 257  : 			// Plays the ring sound effect, then begins a single player game at ultimate difficulty.
; 258  : 			S_StartSound(0, sfx_itemup);

  00250	6a 53		 push	 83			; 00000053H
  00252	6a 00		 push	 0
  00254	e8 00 00 00 00	 call	 _S_StartSound
  00259	83 c4 08	 add	 esp, 8

; 259  : 			ultmode = true;

  0025c	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _ultmode, 1

; 260  : 			startmap = spstage_start;

  00266	66 a1 00 00 00
	00		 mov	 ax, WORD PTR _spstage_start
  0026c	66 a3 00 00 00
	00		 mov	 WORD PTR _startmap, ax

; 261  : 			M_SetupNextMenu(&PlayerDef);

  00272	68 00 00 00 00	 push	 OFFSET _PlayerDef
  00277	e8 00 00 00 00	 call	 _M_SetupNextMenu
  0027c	83 c4 04	 add	 esp, 4
$LN35@cht_Respon:

; 262  : 		}
; 263  : 	}
; 264  : 	return false;

  0027f	33 c0		 xor	 eax, eax

; 265  : }

  00281	5f		 pop	 edi
  00282	5e		 pop	 esi
  00283	5b		 pop	 ebx
  00284	8b e5		 mov	 esp, ebp
  00286	5d		 pop	 ebp
  00287	c3		 ret	 0
_cht_Responder ENDP
_TEXT	ENDS
END
