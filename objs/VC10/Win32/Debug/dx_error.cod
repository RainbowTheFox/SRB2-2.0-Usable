; Listing generated by Microsoft (R) Optimizing Compiler Version 19.41.34123.0 

	TITLE	C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\objs\VC10\Win32\Debug\dx_error.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_DXErrorToString
PUBLIC	??_C@_09MFOLKCNJ@No?5error?4@			; `string'
PUBLIC	??_C@_0CE@GNLOJKFC@This?5object?5is?5already?5initiali@ ; `string'
PUBLIC	??_C@_0FJ@KMDCLNJD@Return?5if?5a?5clipper?5object?5is?5a@ ; `string'
PUBLIC	??_C@_0DL@BBJLNAKM@This?5surface?5can?5not?5be?5attache@ ; `string'
PUBLIC	??_C@_0DN@LEFGIDN@This?5surface?5can?5not?5be?5detache@ ; `string'
PUBLIC	??_C@_0CF@GJIGGFKA@Windows?5can?5not?5create?5any?5more@ ; `string'
PUBLIC	??_C@_0FA@POJAKNBB@Can?8t?5duplicate?5primary?5?$CG?53D?5su@ ; `string'
PUBLIC	??_C@_0FP@NIPEIFIG@An?5attempt?5was?5made?5to?5set?5a?5cl@ ; `string'
PUBLIC	??_C@_0CP@OBDMAKNP@No?5src?5color?5key?5specified?5for?5@ ; `string'
PUBLIC	??_C@_0CE@PMBNGEOI@Support?5is?5currently?5not?5availa@ ; `string'
PUBLIC	??_C@_0FI@GOGCMLHC@A?5DirectDraw?5object?5representin@ ; `string'
PUBLIC	??_C@_0EH@CDBAFGH@An?5exception?5was?5encountered?5wh@ ; `string'
PUBLIC	??_C@_0FH@MJINBAC@An?5attempt?5was?5made?5to?5set?5the?5@ ; `string'
PUBLIC	??_C@_0BB@KBOIAOFC@Generic?5failure?4@		; `string'
PUBLIC	??_C@_0EC@EALBIOLJ@Height?5of?5rectangle?5provided?5is@ ; `string'
PUBLIC	??_C@_0HI@DCJNEJCF@The?5CooperativeLevel?5HWND?5has?5a@ ; `string'
PUBLIC	??_C@_0GN@LCCJEOLA@HWND?5used?5by?5DirectDraw?5Coopera@ ; `string'
PUBLIC	??_C@_0EO@MLDMACAO@This?5surface?5can?5not?5be?5restore@ ; `string'
PUBLIC	??_C@_0FA@CJKLCPNO@Unable?5to?5match?5primary?5surface@ ; `string'
PUBLIC	??_C@_0ED@BFFHDLIA@One?5or?5more?5of?5the?5caps?5bits?5pa@ ; `string'
PUBLIC	??_C@_0DD@NPCNDFNI@DirectDraw?5does?5not?5support?5the@ ; `string'
PUBLIC	??_C@_0FB@NCEBDCPJ@The?5GUID?5passed?5to?5DirectDrawCr@ ; `string'
PUBLIC	??_C@_0DA@IIABODBL@DirectDraw?5does?5not?5support?5the@ ; `string'
PUBLIC	??_C@_0EF@KJAIAJHH@DirectDraw?5received?5a?5pointer?5t@ ; `string'
PUBLIC	??_C@_0EE@NAIMECAD@One?5or?5more?5of?5the?5parameters?5p@ ; `string'
PUBLIC	??_C@_0CL@CBCGEFFM@The?5pixel?5format?5was?5invalid?5as@ ; `string'
PUBLIC	??_C@_0GG@LIJBMCBE@Returned?5when?5the?5position?5of?5t@ ; `string'
PUBLIC	??_C@_0CA@LDCKNMJJ@Rectangle?5provided?5was?5invalid?4@ ; `string'
PUBLIC	??_C@_0EM@FKDKIMOF@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0BI@KHKAHFJG@There?5is?5no?53D?5present?4@ ; `string'
PUBLIC	??_C@_0GI@JJNDILEJ@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0BN@NAPBBDFE@No?5blitter?5hardware?5present?4@ ; `string'
PUBLIC	??_C@_0BH@PELKAFPB@No?5cliplist?5available?4@	; `string'
PUBLIC	??_C@_0CO@MJPCBGDG@No?5clipper?5object?5attached?5to?5s@ ; `string'
PUBLIC	??_C@_0GH@BOIPDPM@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0CL@IILHAEHG@Surface?5doesn?8t?5currently?5have?5@ ; `string'
PUBLIC	??_C@_0GG@BKLNDBJ@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0FK@PACAMKCG@Create?5function?5called?5without?5@ ; `string'
PUBLIC	??_C@_0CJ@PGLCBLIH@No?5DC?5was?5ever?5created?5for?5this@ ; `string'
PUBLIC	??_C@_0BM@NFFEGJAD@No?5DirectDraw?5ROP?5hardware?4@ ; `string'
PUBLIC	??_C@_0GG@IKGELPKB@A?5hardware?9only?5DirectDraw?5obje@ ; `string'
PUBLIC	??_C@_0CC@BMNKFNMG@Software?5emulation?5not?5availabl@ ; `string'
PUBLIC	??_C@_0GM@BMBFBGIP@Operation?5requires?5the?5applicat@ ; `string'
PUBLIC	??_C@_0CM@NHMMBKAL@Flipping?5visible?5surfaces?5is?5no@ ; `string'
PUBLIC	??_C@_0BJ@FKFKNCIF@There?5is?5no?5GDI?5present?4@ ; `string'
PUBLIC	??_C@_0GH@NENFCBNK@Clipper?5notification?5requires?5a@ ; `string'
PUBLIC	??_C@_0FG@OFJHNOHB@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0IB@NKJMOKPE@Returned?5when?5GetOverlayPositio@ ; `string'
PUBLIC	??_C@_0FO@LFKMBAOB@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0CM@OKLOIJNP@No?5palette?5object?5attached?5to?5t@ ; `string'
PUBLIC	??_C@_0DC@PJMIBLJE@No?5hardware?5support?5for?516?5or?52@ ; `string'
PUBLIC	??_C@_0GM@JNJEAEGI@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0FP@JDGAGAEO@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0FI@KCFGLHEC@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0GK@IPGIBAK@DirectDrawSurface?5is?5not?5in?54?5b@ ; `string'
PUBLIC	??_C@_0HG@LFKOEPKO@DirectDrawSurface?5is?5not?5in?54?5b@ ; `string'
PUBLIC	??_C@_0FP@BHALNOGB@DirectDrawSurface?5is?5not?5in?58?5b@ ; `string'
PUBLIC	??_C@_0EF@CJANMDHH@Returned?5when?5an?5overlay?5member@ ; `string'
PUBLIC	??_C@_0GG@EKIEHJAM@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0EC@FMLBJEAK@An?5attempt?5has?5been?5made?5to?5fli@ ; `string'
PUBLIC	??_C@_0BO@CHDMBBBF@Requested?5item?5was?5not?5found?4@ ; `string'
PUBLIC	??_C@_0HM@NHHIDGKF@Surface?5was?5not?5locked?4?5?5An?5att@ ; `string'
PUBLIC	??_C@_0DH@NDAHKMHA@The?5surface?5being?5used?5is?5not?5a@ ; `string'
PUBLIC	??_C@_0HE@PKELAKG@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0FO@CGPNEIKB@Operation?5could?5not?5be?5carried?5@ ; `string'
PUBLIC	??_C@_0HO@ONPEKNIP@Overlay?5surfaces?5could?5not?5be?5z@ ; `string'
PUBLIC	??_C@_0EM@EELGIDIE@The?5hardware?5needed?5for?5the?5req@ ; `string'
PUBLIC	??_C@_0DF@EDPBMKFI@There?5is?5not?5enough?5memory?5to?5p@ ; `string'
PUBLIC	??_C@_0EB@LPHBKIBK@DirectDraw?5does?5not?5have?5enough@ ; `string'
PUBLIC	??_C@_0DA@EMNBHCDK@The?5hardware?5does?5not?5support?5c@ ; `string'
PUBLIC	??_C@_0DN@GHBAPLIJ@Can?5only?5have?5ony?5color?5key?5act@ ; `string'
PUBLIC	??_C@_0EA@DDDLNGBH@Returned?5when?5GetOverlayPositio@ ; `string'
PUBLIC	??_C@_0GB@ILOMPIOP@Access?5to?5this?5palette?5is?5being@ ; `string'
PUBLIC	??_C@_0DE@LHIBOPNF@This?5process?5already?5has?5create@ ; `string'
PUBLIC	??_C@_0DE@LHMJOPAD@Region?5passed?5to?5Clipper?3?3GetCl@ ; `string'
PUBLIC	??_C@_0EJ@MJJAHJI@This?5surface?5is?5already?5attache@ ; `string'
PUBLIC	??_C@_0FG@HFCBDGGN@This?5surface?5is?5already?5a?5depen@ ; `string'
PUBLIC	??_C@_0GB@PKDGEDIE@Access?5to?5this?5surface?5is?5being@ ; `string'
PUBLIC	??_C@_0DL@LIGOLCLJ@Access?5to?5surface?5refused?5becau@ ; `string'
PUBLIC	??_C@_0KF@DEEKKLLG@Access?5to?5this?5surface?5is?5being@ ; `string'
PUBLIC	??_C@_0CH@NBHJPNMH@The?5requested?5surface?5is?5not?5at@ ; `string'
PUBLIC	??_C@_0CN@JBIGMBNK@Height?5requested?5by?5DirectDraw?5@ ; `string'
PUBLIC	??_C@_0FH@MDFFJBAI@Size?5requested?5by?5DirectDraw?5is@ ; `string'
PUBLIC	??_C@_0CM@PGPNKPOC@Width?5requested?5by?5DirectDraw?5i@ ; `string'
PUBLIC	??_C@_0BN@LEDPANOH@Function?5call?5not?5supported?4@ ; `string'
PUBLIC	??_C@_0DG@FJDFLDBN@FOURCC?5format?5requested?5is?5unsu@ ; `string'
PUBLIC	??_C@_0EE@EBAHMOKN@Bitmask?5in?5the?5pixel?5format?5req@ ; `string'
PUBLIC	??_C@_0BP@BCDIBOGJ@Vertical?5blank?5is?5in?5progress?4@ ; `string'
PUBLIC	??_C@_0HB@BMJAPBHK@Informs?5DirectDraw?5that?5the?5pre@ ; `string'
PUBLIC	??_C@_0EN@IKLJDHPJ@This?5surface?5can?5not?5be?5restore@ ; `string'
PUBLIC	??_C@_0EG@DIBGAJNH@Rectangle?5provided?5was?5not?5hori@ ; `string'
PUBLIC	??_C@_0GH@DFJEBAPI@The?5request?5failed?5because?5reso@ ; `string'
PUBLIC	??_C@_0CD@DNLBMOFN@The?5object?5is?5already?5initializ@ ; `string'
PUBLIC	??_C@_0CM@KNPHCOJ@The?5specified?5wave?5format?5is?5no@ ; `string'
PUBLIC	??_C@_0DG@HLKLJHOH@The?5buffer?5memory?5has?5been?5lost@ ; `string'
PUBLIC	??_C@_0FC@PBJOMCAO@The?5control?5?$CIvolume?0?5pan?0?5and?5s@ ; `string'
PUBLIC	??_C@_0EB@PHEFJAFL@This?5function?5is?5not?5valid?5for?5@ ; `string'
PUBLIC	??_C@_0CJ@EGBJFDAI@The?5object?5does?5not?5support?5agg@ ; `string'
PUBLIC	??_C@_0CG@BNICEEDI@No?5sound?5driver?5is?5available?5fo@ ; `string'
PUBLIC	??_C@_0CO@IIBIMJJB@The?5requested?5COM?5interface?5is?5@ ; `string'
PUBLIC	??_C@_0FG@PKDCOOI@Another?5application?5has?5a?5highe@ ; `string'
PUBLIC	??_C@_0FC@KMIIFNDE@The?5caller?5does?5not?5have?5the?5pr@ ; `string'
PUBLIC	??_C@_0HO@JKMIBHBO@The?5IDirectSound?3?3Initialize?5me@ ; `string'
PUBLIC	??_C@_0BK@EENFNOMH@Unrecognized?5error?5value?4@ ; `string'
;	COMDAT ??_C@_0BK@EENFNOMH@Unrecognized?5error?5value?4@
CONST	SEGMENT
??_C@_0BK@EENFNOMH@Unrecognized?5error?5value?4@ DB 'Unrecognized error v'
	DB	'alue.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0HO@JKMIBHBO@The?5IDirectSound?3?3Initialize?5me@
CONST	SEGMENT
??_C@_0HO@JKMIBHBO@The?5IDirectSound?3?3Initialize?5me@ DB 'The IDirectSo'
	DB	'und::Initialize method has not been called or has not been ca'
	DB	'lled successfully before other methods were called.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@KMIIFNDE@The?5caller?5does?5not?5have?5the?5pr@
CONST	SEGMENT
??_C@_0FC@KMIIFNDE@The?5caller?5does?5not?5have?5the?5pr@ DB 'The caller '
	DB	'does not have the priority level required for the function to'
	DB	' succeed.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@PKDCOOI@Another?5application?5has?5a?5highe@
CONST	SEGMENT
??_C@_0FG@PKDCOOI@Another?5application?5has?5a?5highe@ DB 'Another applic'
	DB	'ation has a higher priority level, preventing this call from '
	DB	'succeeding', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@IIBIMJJB@The?5requested?5COM?5interface?5is?5@
CONST	SEGMENT
??_C@_0CO@IIBIMJJB@The?5requested?5COM?5interface?5is?5@ DB 'The requeste'
	DB	'd COM interface is not available.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BNICEEDI@No?5sound?5driver?5is?5available?5fo@
CONST	SEGMENT
??_C@_0CG@BNICEEDI@No?5sound?5driver?5is?5available?5fo@ DB 'No sound dri'
	DB	'ver is available for use.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EGBJFDAI@The?5object?5does?5not?5support?5agg@
CONST	SEGMENT
??_C@_0CJ@EGBJFDAI@The?5object?5does?5not?5support?5agg@ DB 'The object d'
	DB	'oes not support aggregation.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@PHEFJAFL@This?5function?5is?5not?5valid?5for?5@
CONST	SEGMENT
??_C@_0EB@PHEFJAFL@This?5function?5is?5not?5valid?5for?5@ DB 'This functi'
	DB	'on is not valid for the current state of this object.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@PBJOMCAO@The?5control?5?$CIvolume?0?5pan?0?5and?5s@
CONST	SEGMENT
??_C@_0FC@PBJOMCAO@The?5control?5?$CIvolume?0?5pan?0?5and?5s@ DB 'The con'
	DB	'trol (volume, pan, and so forth) requested by the caller is n'
	DB	'ot available.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@HLKLJHOH@The?5buffer?5memory?5has?5been?5lost@
CONST	SEGMENT
??_C@_0DG@HLKLJHOH@The?5buffer?5memory?5has?5been?5lost@ DB 'The buffer m'
	DB	'emory has been lost and must be restored.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KNPHCOJ@The?5specified?5wave?5format?5is?5no@
CONST	SEGMENT
??_C@_0CM@KNPHCOJ@The?5specified?5wave?5format?5is?5no@ DB 'The specified'
	DB	' wave format is not supported.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DNLBMOFN@The?5object?5is?5already?5initializ@
CONST	SEGMENT
??_C@_0CD@DNLBMOFN@The?5object?5is?5already?5initializ@ DB 'The object is'
	DB	' already initialized.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@DFJEBAPI@The?5request?5failed?5because?5reso@
CONST	SEGMENT
??_C@_0GH@DFJEBAPI@The?5request?5failed?5because?5reso@ DB 'The request f'
	DB	'ailed because resources, such as a priority level, were alrea'
	DB	'dy in use by another caller.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@DIBGAJNH@Rectangle?5provided?5was?5not?5hori@
CONST	SEGMENT
??_C@_0EG@DIBGAJNH@Rectangle?5provided?5was?5not?5hori@ DB 'Rectangle pro'
	DB	'vided was not horizontally aligned on required boundary.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@IKLJDHPJ@This?5surface?5can?5not?5be?5restore@
CONST	SEGMENT
??_C@_0EN@IKLJDHPJ@This?5surface?5can?5not?5be?5restore@ DB 'This surface'
	DB	' can not be restored because it was created in a different mo'
	DB	'de.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@BMJAPBHK@Informs?5DirectDraw?5that?5the?5pre@
CONST	SEGMENT
??_C@_0HB@BMJAPBHK@Informs?5DirectDraw?5that?5the?5pre@ DB 'Informs Direc'
	DB	'tDraw that the previous Blt which is transfering information '
	DB	'to or from this Surface is incomplete.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BCDIBOGJ@Vertical?5blank?5is?5in?5progress?4@
CONST	SEGMENT
??_C@_0BP@BCDIBOGJ@Vertical?5blank?5is?5in?5progress?4@ DB 'Vertical blan'
	DB	'k is in progress.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@EBAHMOKN@Bitmask?5in?5the?5pixel?5format?5req@
CONST	SEGMENT
??_C@_0EE@EBAHMOKN@Bitmask?5in?5the?5pixel?5format?5req@ DB 'Bitmask in t'
	DB	'he pixel format requested is unsupported by DirectDraw.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@FJDFLDBN@FOURCC?5format?5requested?5is?5unsu@
CONST	SEGMENT
??_C@_0DG@FJDFLDBN@FOURCC?5format?5requested?5is?5unsu@ DB 'FOURCC format'
	DB	' requested is unsupported by DirectDraw.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LEDPANOH@Function?5call?5not?5supported?4@
CONST	SEGMENT
??_C@_0BN@LEDPANOH@Function?5call?5not?5supported?4@ DB 'Function call no'
	DB	't supported.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@PGPNKPOC@Width?5requested?5by?5DirectDraw?5i@
CONST	SEGMENT
??_C@_0CM@PGPNKPOC@Width?5requested?5by?5DirectDraw?5i@ DB 'Width request'
	DB	'ed by DirectDraw is too large.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@MDFFJBAI@Size?5requested?5by?5DirectDraw?5is@
CONST	SEGMENT
??_C@_0FH@MDFFJBAI@Size?5requested?5by?5DirectDraw?5is@ DB 'Size requeste'
	DB	'd by DirectDraw is too large, but the individual height and w'
	DB	'idth are OK.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@JBIGMBNK@Height?5requested?5by?5DirectDraw?5@
CONST	SEGMENT
??_C@_0CN@JBIGMBNK@Height?5requested?5by?5DirectDraw?5@ DB 'Height reques'
	DB	'ted by DirectDraw is too large.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@NBHJPNMH@The?5requested?5surface?5is?5not?5at@
CONST	SEGMENT
??_C@_0CH@NBHJPNMH@The?5requested?5surface?5is?5not?5at@ DB 'The requeste'
	DB	'd surface is not attached.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0KF@DEEKKLLG@Access?5to?5this?5surface?5is?5being@
CONST	SEGMENT
??_C@_0KF@DEEKKLLG@Access?5to?5this?5surface?5is?5being@ DB 'Access to th'
	DB	'is surface is being refused because the surface memory is gon'
	DB	'e. The DirectDrawSurface object representing this surface sho'
	DB	'uld have Restore called on it.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@LIGOLCLJ@Access?5to?5surface?5refused?5becau@
CONST	SEGMENT
??_C@_0DL@LIGOLCLJ@Access?5to?5surface?5refused?5becau@ DB 'Access to sur'
	DB	'face refused because the surface is obscured.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@PKDGEDIE@Access?5to?5this?5surface?5is?5being@
CONST	SEGMENT
??_C@_0GB@PKDGEDIE@Access?5to?5this?5surface?5is?5being@ DB 'Access to th'
	DB	'is surface is being refused because the surface is already lo'
	DB	'cked by another thread.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@HFCBDGGN@This?5surface?5is?5already?5a?5depen@
CONST	SEGMENT
??_C@_0FG@HFCBDGGN@This?5surface?5is?5already?5a?5depen@ DB 'This surface'
	DB	' is already a dependency of the surface it is being made a de'
	DB	'pendency of.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@MJJAHJI@This?5surface?5is?5already?5attache@
CONST	SEGMENT
??_C@_0EJ@MJJAHJI@This?5surface?5is?5already?5attache@ DB 'This surface i'
	DB	's already attached to the surface it is being attached to.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@LHMJOPAD@Region?5passed?5to?5Clipper?3?3GetCl@
CONST	SEGMENT
??_C@_0DE@LHMJOPAD@Region?5passed?5to?5Clipper?3?3GetCl@ DB 'Region passe'
	DB	'd to Clipper::GetClipList is too small.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@LHIBOPNF@This?5process?5already?5has?5create@
CONST	SEGMENT
??_C@_0DE@LHIBOPNF@This?5process?5already?5has?5create@ DB 'This process '
	DB	'already has created a primary surface.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@ILOMPIOP@Access?5to?5this?5palette?5is?5being@
CONST	SEGMENT
??_C@_0GB@ILOMPIOP@Access?5to?5this?5palette?5is?5being@ DB 'Access to th'
	DB	'is palette is being refused because the palette is already lo'
	DB	'cked by another thread.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@DDDLNGBH@Returned?5when?5GetOverlayPositio@
CONST	SEGMENT
??_C@_0EA@DDDLNGBH@Returned?5when?5GetOverlayPositio@ DB 'Returned when G'
	DB	'etOverlayPosition is called on a hidden overlay.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@GHBAPLIJ@Can?5only?5have?5ony?5color?5key?5act@
CONST	SEGMENT
??_C@_0DN@GHBAPLIJ@Can?5only?5have?5ony?5color?5key?5act@ DB 'Can only ha'
	DB	've ony color key active at one time for overlays.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EMNBHCDK@The?5hardware?5does?5not?5support?5c@
CONST	SEGMENT
??_C@_0DA@EMNBHCDK@The?5hardware?5does?5not?5support?5c@ DB 'The hardware'
	DB	' does not support clipped overlays.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@LPHBKIBK@DirectDraw?5does?5not?5have?5enough@
CONST	SEGMENT
??_C@_0EB@LPHBKIBK@DirectDraw?5does?5not?5have?5enough@ DB 'DirectDraw do'
	DB	'es not have enough memory to perform the operation.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EDPBMKFI@There?5is?5not?5enough?5memory?5to?5p@
CONST	SEGMENT
??_C@_0DF@EDPBMKFI@There?5is?5not?5enough?5memory?5to?5p@ DB 'There is no'
	DB	't enough memory to perform the operation.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@EELGIDIE@The?5hardware?5needed?5for?5the?5req@
CONST	SEGMENT
??_C@_0EM@EELGIDIE@The?5hardware?5needed?5for?5the?5req@ DB 'The hardware'
	DB	' needed for the requested operation has already been allocate'
	DB	'd.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0HO@ONPEKNIP@Overlay?5surfaces?5could?5not?5be?5z@
CONST	SEGMENT
??_C@_0HO@ONPEKNIP@Overlay?5surfaces?5could?5not?5be?5z@ DB 'Overlay surf'
	DB	'aces could not be z layered based on their BltOrder because t'
	DB	'he hardware does not support z layering of overlays.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FO@CGPNEIKB@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0FO@CGPNEIKB@Operation?5could?5not?5be?5carried?5@ DB 'Operation co'
	DB	'uld not be carried out because there is no hardware support f'
	DB	'or zbuffer blitting.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HE@PKELAKG@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0HE@PKELAKG@Operation?5could?5not?5be?5carried?5@ DB 'Operation cou'
	DB	'ld not be carried out because there is no hardware support fo'
	DB	'r vertical blank synchronized operations.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@NDAHKMHA@The?5surface?5being?5used?5is?5not?5a@
CONST	SEGMENT
??_C@_0DH@NDAHKMHA@The?5surface?5being?5used?5is?5not?5a@ DB 'The surface'
	DB	' being used is not a palette-based surface.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HM@NHHIDGKF@Surface?5was?5not?5locked?4?5?5An?5att@
CONST	SEGMENT
??_C@_0HM@NHHIDGKF@Surface?5was?5not?5locked?4?5?5An?5att@ DB 'Surface wa'
	DB	's not locked.  An attempt to unlock a surface that was not lo'
	DB	'cked at all, or by this process, has been attempted.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CHDMBBBF@Requested?5item?5was?5not?5found?4@
CONST	SEGMENT
??_C@_0BO@CHDMBBBF@Requested?5item?5was?5not?5found?4@ DB 'Requested item'
	DB	' was not found.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@FMLBJEAK@An?5attempt?5has?5been?5made?5to?5fli@
CONST	SEGMENT
??_C@_0EC@FMLBJEAK@An?5attempt?5has?5been?5made?5to?5fli@ DB 'An attempt '
	DB	'has been made to flip a surface that is not flippable.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@EKIEHJAM@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0GG@EKIEHJAM@Operation?5could?5not?5be?5carried?5@ DB 'Operation co'
	DB	'uld not be carried out because there is no texture mapping ha'
	DB	'rdware present or available.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@CJANMDHH@Returned?5when?5an?5overlay?5member@
CONST	SEGMENT
??_C@_0EF@CJANMDHH@Returned?5when?5an?5overlay?5member@ DB 'Returned when'
	DB	' an overlay member is called for a non-overlay surface.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@BHALNOGB@DirectDrawSurface?5is?5not?5in?58?5b@
CONST	SEGMENT
??_C@_0FP@BHALNOGB@DirectDrawSurface?5is?5not?5in?58?5b@ DB 'DirectDrawSu'
	DB	'rface is not in 8 bit color mode and the requested operation '
	DB	'requires 8 bit color.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HG@LFKOEPKO@DirectDrawSurface?5is?5not?5in?54?5b@
CONST	SEGMENT
??_C@_0HG@LFKOEPKO@DirectDrawSurface?5is?5not?5in?54?5b@ DB 'DirectDrawSu'
	DB	'rface is not in 4 bit color index palette and the requested o'
	DB	'peration requires 4 bit color index palette.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@IPGIBAK@DirectDrawSurface?5is?5not?5in?54?5b@
CONST	SEGMENT
??_C@_0GK@IPGIBAK@DirectDrawSurface?5is?5not?5in?54?5b@ DB 'DirectDrawSur'
	DB	'face is not in 4 bit color palette and the requested operatio'
	DB	'n requires 4 bit color palette.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@KCFGLHEC@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0FI@KCFGLHEC@Operation?5could?5not?5be?5carried?5@ DB 'Operation co'
	DB	'uld not be carried out because there is no hardware support f'
	DB	'or stretching.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@JDGAGAEO@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0FP@JDGAGAEO@Operation?5could?5not?5be?5carried?5@ DB 'Operation co'
	DB	'uld not be carried out because there is no rotation hardware '
	DB	'present or available.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GM@JNJEAEGI@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0GM@JNJEAEGI@Operation?5could?5not?5be?5carried?5@ DB 'Operation co'
	DB	'uld not be carried out because there is no appropriate raster'
	DB	' op hardware present or available.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@PJMIBLJE@No?5hardware?5support?5for?516?5or?52@
CONST	SEGMENT
??_C@_0DC@PJMIBLJE@No?5hardware?5support?5for?516?5or?52@ DB 'No hardware'
	DB	' support for 16 or 256 color palettes.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@OKLOIJNP@No?5palette?5object?5attached?5to?5t@
CONST	SEGMENT
??_C@_0CM@OKLOIJNP@No?5palette?5object?5attached?5to?5t@ DB 'No palette o'
	DB	'bject attached to this surface.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FO@LFKMBAOB@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0FO@LFKMBAOB@Operation?5could?5not?5be?5carried?5@ DB 'Operation co'
	DB	'uld not be carried out because there is no overlay hardware p'
	DB	'resent or available.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0IB@NKJMOKPE@Returned?5when?5GetOverlayPositio@
CONST	SEGMENT
??_C@_0IB@NKJMOKPE@Returned?5when?5GetOverlayPositio@ DB 'Returned when G'
	DB	'etOverlayPosition is called on an overlay that UpdateOverlay '
	DB	'has never been called on to establish a destination.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@OFJHNOHB@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0FG@OFJHNOHB@Operation?5could?5not?5be?5carried?5@ DB 'Operation co'
	DB	'uld not be carried out because there is no hardware present o'
	DB	'r available.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@NENFCBNK@Clipper?5notification?5requires?5a@
CONST	SEGMENT
??_C@_0GH@NENFCBNK@Clipper?5notification?5requires?5a@ DB 'Clipper notifi'
	DB	'cation requires an HWND or no HWND has previously been set as'
	DB	' the CooperativeLevel HWND.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FKFKNCIF@There?5is?5no?5GDI?5present?4@
CONST	SEGMENT
??_C@_0BJ@FKFKNCIF@There?5is?5no?5GDI?5present?4@ DB 'There is no GDI pre'
	DB	'sent.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@NHMMBKAL@Flipping?5visible?5surfaces?5is?5no@
CONST	SEGMENT
??_C@_0CM@NHMMBKAL@Flipping?5visible?5surfaces?5is?5no@ DB 'Flipping visi'
	DB	'ble surfaces is not supported.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GM@BMBFBGIP@Operation?5requires?5the?5applicat@
CONST	SEGMENT
??_C@_0GM@BMBFBGIP@Operation?5requires?5the?5applicat@ DB 'Operation requ'
	DB	'ires the application to have exclusive mode but the applicati'
	DB	'on does not have exclusive mode.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BMNKFNMG@Software?5emulation?5not?5availabl@
CONST	SEGMENT
??_C@_0CC@BMNKFNMG@Software?5emulation?5not?5availabl@ DB 'Software emula'
	DB	'tion not available.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@IKGELPKB@A?5hardware?9only?5DirectDraw?5obje@
CONST	SEGMENT
??_C@_0GG@IKGELPKB@A?5hardware?9only?5DirectDraw?5obje@ DB 'A hardware-on'
	DB	'ly DirectDraw object creation was attempted but the driver di'
	DB	'd not support any hardware.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NFFEGJAD@No?5DirectDraw?5ROP?5hardware?4@
CONST	SEGMENT
??_C@_0BM@NFFEGJAD@No?5DirectDraw?5ROP?5hardware?4@ DB 'No DirectDraw ROP'
	DB	' hardware.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@PGLCBLIH@No?5DC?5was?5ever?5created?5for?5this@
CONST	SEGMENT
??_C@_0CJ@PGLCBLIH@No?5DC?5was?5ever?5created?5for?5this@ DB 'No DC was e'
	DB	'ver created for this surface.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FK@PACAMKCG@Create?5function?5called?5without?5@
CONST	SEGMENT
??_C@_0FK@PACAMKCG@Create?5function?5called?5without?5@ DB 'Create functi'
	DB	'on called without DirectDraw object method SetCooperativeLeve'
	DB	'l being called.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@BKLNDBJ@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0GG@BKLNDBJ@Operation?5could?5not?5be?5carried?5@ DB 'Operation cou'
	DB	'ld not be carried out because there is no hardware support of'
	DB	' the destination color key.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@IILHAEHG@Surface?5doesn?8t?5currently?5have?5@
CONST	SEGMENT
??_C@_0CL@IILHAEHG@Surface?5doesn?8t?5currently?5have?5@ DB 'Surface does'
	DB	'n''t currently have a color key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@BOIPDPM@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0GH@BOIPDPM@Operation?5could?5not?5be?5carried?5@ DB 'Operation cou'
	DB	'ld not be carried out because there is no color conversion ha'
	DB	'rdware present or available.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@MJPCBGDG@No?5clipper?5object?5attached?5to?5s@
CONST	SEGMENT
??_C@_0CO@MJPCBGDG@No?5clipper?5object?5attached?5to?5s@ DB 'No clipper o'
	DB	'bject attached to surface object.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PELKAFPB@No?5cliplist?5available?4@
CONST	SEGMENT
??_C@_0BH@PELKAFPB@No?5cliplist?5available?4@ DB 'No cliplist available.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NAPBBDFE@No?5blitter?5hardware?5present?4@
CONST	SEGMENT
??_C@_0BN@NAPBBDFE@No?5blitter?5hardware?5present?4@ DB 'No blitter hardw'
	DB	'are present.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@JJNDILEJ@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0GI@JJNDILEJ@Operation?5could?5not?5be?5carried?5@ DB 'Operation co'
	DB	'uld not be carried out because there is no alpha accleration '
	DB	'hardware present or available.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KHKAHFJG@There?5is?5no?53D?5present?4@
CONST	SEGMENT
??_C@_0BI@KHKAHFJG@There?5is?5no?53D?5present?4@ DB 'There is no 3D prese'
	DB	'nt.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@FKDKIMOF@Operation?5could?5not?5be?5carried?5@
CONST	SEGMENT
??_C@_0EM@FKDKIMOF@Operation?5could?5not?5be?5carried?5@ DB 'Operation co'
	DB	'uld not be carried out because one or more surfaces are locke'
	DB	'd.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LDCKNMJJ@Rectangle?5provided?5was?5invalid?4@
CONST	SEGMENT
??_C@_0CA@LDCKNMJJ@Rectangle?5provided?5was?5invalid?4@ DB 'Rectangle pro'
	DB	'vided was invalid.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@LIJBMCBE@Returned?5when?5the?5position?5of?5t@
CONST	SEGMENT
??_C@_0GG@LIJBMCBE@Returned?5when?5the?5position?5of?5t@ DB 'Returned whe'
	DB	'n the position of the overlay on the destination is no longer'
	DB	' legal for that destination.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@CBCGEFFM@The?5pixel?5format?5was?5invalid?5as@
CONST	SEGMENT
??_C@_0CL@CBCGEFFM@The?5pixel?5format?5was?5invalid?5as@ DB 'The pixel fo'
	DB	'rmat was invalid as specified.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@NAIMECAD@One?5or?5more?5of?5the?5parameters?5p@
CONST	SEGMENT
??_C@_0EE@NAIMECAD@One?5or?5more?5of?5the?5parameters?5p@ DB 'One or more'
	DB	' of the parameters passed to the function are incorrect.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@KJAIAJHH@DirectDraw?5received?5a?5pointer?5t@
CONST	SEGMENT
??_C@_0EF@KJAIAJHH@DirectDraw?5received?5a?5pointer?5t@ DB 'DirectDraw re'
	DB	'ceived a pointer that was an invalid DIRECTDRAW object.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@IIABODBL@DirectDraw?5does?5not?5support?5the@
CONST	SEGMENT
??_C@_0DA@IIABODBL@DirectDraw?5does?5not?5support?5the@ DB 'DirectDraw do'
	DB	'es not support the requested mode.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@NCEBDCPJ@The?5GUID?5passed?5to?5DirectDrawCr@
CONST	SEGMENT
??_C@_0FB@NCEBDCPJ@The?5GUID?5passed?5to?5DirectDrawCr@ DB 'The GUID pass'
	DB	'ed to DirectDrawCreate is not a valid DirectDraw driver ident'
	DB	'ifier.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@NPCNDFNI@DirectDraw?5does?5not?5support?5the@
CONST	SEGMENT
??_C@_0DD@NPCNDFNI@DirectDraw?5does?5not?5support?5the@ DB 'DirectDraw do'
	DB	'es not support the provided cliplist.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@BFFHDLIA@One?5or?5more?5of?5the?5caps?5bits?5pa@
CONST	SEGMENT
??_C@_0ED@BFFHDLIA@One?5or?5more?5of?5the?5caps?5bits?5pa@ DB 'One or mor'
	DB	'e of the caps bits passed to the callback are incorrect.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@CJKLCPNO@Unable?5to?5match?5primary?5surface@
CONST	SEGMENT
??_C@_0FA@CJKLCPNO@Unable?5to?5match?5primary?5surface@ DB 'Unable to mat'
	DB	'ch primary surface creation request with existing primary sur'
	DB	'face.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@MLDMACAO@This?5surface?5can?5not?5be?5restore@
CONST	SEGMENT
??_C@_0EO@MLDMACAO@This?5surface?5can?5not?5be?5restore@ DB 'This surface'
	DB	' can not be restored because it is an implicitly created surf'
	DB	'ace.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@LCCJEOLA@HWND?5used?5by?5DirectDraw?5Coopera@
CONST	SEGMENT
??_C@_0GN@LCCJEOLA@HWND?5used?5by?5DirectDraw?5Coopera@ DB 'HWND used by '
	DB	'DirectDraw CooperativeLevel has been subclassed, this prevent'
	DB	's DirectDraw from restoring state.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0HI@DCJNEJCF@The?5CooperativeLevel?5HWND?5has?5a@
CONST	SEGMENT
??_C@_0HI@DCJNEJCF@The?5CooperativeLevel?5HWND?5has?5a@ DB 'The Cooperati'
	DB	'veLevel HWND has already been set. It can not be reset while '
	DB	'the process has surfaces or palettes created.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@EALBIOLJ@Height?5of?5rectangle?5provided?5is@
CONST	SEGMENT
??_C@_0EC@EALBIOLJ@Height?5of?5rectangle?5provided?5is@ DB 'Height of rec'
	DB	'tangle provided is not a multiple of reqd alignment.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KBOIAOFC@Generic?5failure?4@
CONST	SEGMENT
??_C@_0BB@KBOIAOFC@Generic?5failure?4@ DB 'Generic failure.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@MJINBAC@An?5attempt?5was?5made?5to?5set?5the?5@
CONST	SEGMENT
??_C@_0FH@MJINBAC@An?5attempt?5was?5made?5to?5set?5the?5@ DB 'An attempt '
	DB	'was made to set the cooperative level when it was already set'
	DB	' to exclusive.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@CDBAFGH@An?5exception?5was?5encountered?5wh@
CONST	SEGMENT
??_C@_0EH@CDBAFGH@An?5exception?5was?5encountered?5wh@ DB 'An exception w'
	DB	'as encountered while performing the requested operation.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@GOGCMLHC@A?5DirectDraw?5object?5representin@
CONST	SEGMENT
??_C@_0FI@GOGCMLHC@A?5DirectDraw?5object?5representin@ DB 'A DirectDraw o'
	DB	'bject representing this driver has already been created for t'
	DB	'his process.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PMBNGEOI@Support?5is?5currently?5not?5availa@
CONST	SEGMENT
??_C@_0CE@PMBNGEOI@Support?5is?5currently?5not?5availa@ DB 'Support is cu'
	DB	'rrently not available.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OBDMAKNP@No?5src?5color?5key?5specified?5for?5@
CONST	SEGMENT
??_C@_0CP@OBDMAKNP@No?5src?5color?5key?5specified?5for?5@ DB 'No src colo'
	DB	'r key specified for this operation.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@NIPEIFIG@An?5attempt?5was?5made?5to?5set?5a?5cl@
CONST	SEGMENT
??_C@_0FP@NIPEIFIG@An?5attempt?5was?5made?5to?5set?5a?5cl@ DB 'An attempt'
	DB	' was made to set a cliplist for a clipper object that is alre'
	DB	'ady monitoring an hwnd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@POJAKNBB@Can?8t?5duplicate?5primary?5?$CG?53D?5su@
CONST	SEGMENT
??_C@_0FA@POJAKNBB@Can?8t?5duplicate?5primary?5?$CG?53D?5su@ DB 'Can''t d'
	DB	'uplicate primary & 3D surfaces, or surfaces that are implicit'
	DB	'ly created.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GJIGGFKA@Windows?5can?5not?5create?5any?5more@
CONST	SEGMENT
??_C@_0CF@GJIGGFKA@Windows?5can?5not?5create?5any?5more@ DB 'Windows can '
	DB	'not create any more DCs.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@LEFGIDN@This?5surface?5can?5not?5be?5detache@
CONST	SEGMENT
??_C@_0DN@LEFGIDN@This?5surface?5can?5not?5be?5detache@ DB 'This surface '
	DB	'can not be detached from the requested surface.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@BBJLNAKM@This?5surface?5can?5not?5be?5attache@
CONST	SEGMENT
??_C@_0DL@BBJLNAKM@This?5surface?5can?5not?5be?5attache@ DB 'This surface'
	DB	' can not be attached to the requested surface.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FJ@KMDCLNJD@Return?5if?5a?5clipper?5object?5is?5a@
CONST	SEGMENT
??_C@_0FJ@KMDCLNJD@Return?5if?5a?5clipper?5object?5is?5a@ DB 'Return if a'
	DB	' clipper object is attached to the source surface passed into'
	DB	' a BltFast call.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GNLOJKFC@This?5object?5is?5already?5initiali@
CONST	SEGMENT
??_C@_0CE@GNLOJKFC@This?5object?5is?5already?5initiali@ DB 'This object i'
	DB	's already initialized.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MFOLKCNJ@No?5error?4@
CONST	SEGMENT
??_C@_09MFOLKCNJ@No?5error?4@ DB 'No error.', 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File C:\Users\RafaTheFox\Desktop\SRB2-Public-master (1)\SRB2-Public-master\src\win32\dx_error.c
;	COMDAT _DXErrorToString
_TEXT	SEGMENT
tv64 = -68						; size = 4
_error$ = 8						; size = 4
_DXErrorToString PROC					; COMDAT

; 60   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 61   : 	switch (error) {

  00009	8b 45 08	 mov	 eax, DWORD PTR _error$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  0000f	81 7d bc 04 01
	76 88		 cmp	 DWORD PTR tv64[ebp], -2005532412 ; 88760104H
  00016	0f 8f ae 00 00
	00		 jg	 $LN109@DXErrorToS
  0001c	81 7d bc 04 01
	76 88		 cmp	 DWORD PTR tv64[ebp], -2005532412 ; 88760104H
  00023	0f 84 7b 03 00
	00		 je	 $LN52@DXErrorToS
  00029	81 7d bc 05 00
	76 88		 cmp	 DWORD PTR tv64[ebp], -2005532667 ; 88760005H
  00030	7f 6e		 jg	 SHORT $LN110@DXErrorToS
  00032	81 7d bc 05 00
	76 88		 cmp	 DWORD PTR tv64[ebp], -2005532667 ; 88760005H
  00039	0f 84 8f 01 00
	00		 je	 $LN5@DXErrorToS
  0003f	81 7d bc 10 01
	04 80		 cmp	 DWORD PTR tv64[ebp], -2147221232 ; 80040110H
  00046	7f 39		 jg	 SHORT $LN111@DXErrorToS
  00048	81 7d bc 10 01
	04 80		 cmp	 DWORD PTR tv64[ebp], -2147221232 ; 80040110H
  0004f	0f 84 15 05 00
	00		 je	 $LN101@DXErrorToS
  00055	81 7d bc 01 40
	00 80		 cmp	 DWORD PTR tv64[ebp], -2147467263 ; 80004001H
  0005c	0f 84 aa 04 00
	00		 je	 $LN88@DXErrorToS
  00062	81 7d bc 02 40
	00 80		 cmp	 DWORD PTR tv64[ebp], -2147467262 ; 80004002H
  00069	0f 84 09 05 00
	00		 je	 $LN103@DXErrorToS
  0006f	81 7d bc 05 40
	00 80		 cmp	 DWORD PTR tv64[ebp], -2147467259 ; 80004005H
  00076	0f 84 ca 01 00
	00		 je	 $LN17@DXErrorToS
  0007c	e9 13 05 00 00	 jmp	 $LN107@DXErrorToS
$LN111@DXErrorToS:
  00081	81 7d bc 0e 00
	07 80		 cmp	 DWORD PTR tv64[ebp], -2147024882 ; 8007000eH
  00088	0f 84 d4 03 00
	00		 je	 $LN71@DXErrorToS
  0008e	81 7d bc 57 00
	07 80		 cmp	 DWORD PTR tv64[ebp], -2147024809 ; 80070057H
  00095	0f 84 19 02 00
	00		 je	 $LN28@DXErrorToS
  0009b	e9 f4 04 00 00	 jmp	 $LN107@DXErrorToS
$LN110@DXErrorToS:
  000a0	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  000a3	81 c1 f6 ff 89
	77		 add	 ecx, 2005532662		; 7789fff6H
  000a9	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  000ac	81 7d bc f5 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 245 ; 000000f5H
  000b3	0f 87 db 04 00
	00		 ja	 $LN107@DXErrorToS
  000b9	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  000bc	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN116@DXErrorToS[edx]
  000c3	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN117@DXErrorToS[eax*4]
$LN109@DXErrorToS:
  000ca	81 7d bc 19 02
	76 88		 cmp	 DWORD PTR tv64[ebp], -2005532135 ; 88760219H
  000d1	7f 37		 jg	 SHORT $LN112@DXErrorToS
  000d3	81 7d bc 19 02
	76 88		 cmp	 DWORD PTR tv64[ebp], -2005532135 ; 88760219H
  000da	0f 84 44 04 00
	00		 je	 $LN91@DXErrorToS
  000e0	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  000e3	81 c1 e8 fe 89
	77		 add	 ecx, 2005532392		; 7789fee8H
  000e9	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  000ec	81 7d bc f0 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 240 ; 000000f0H
  000f3	0f 87 9b 04 00
	00		 ja	 $LN107@DXErrorToS
  000f9	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  000fc	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN118@DXErrorToS[edx]
  00103	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN119@DXErrorToS[eax*4]
$LN112@DXErrorToS:
  0010a	81 7d bc 0a 00
	78 88		 cmp	 DWORD PTR tv64[ebp], -2005401590 ; 8878000aH
  00111	7f 34		 jg	 SHORT $LN113@DXErrorToS
  00113	81 7d bc 0a 00
	78 88		 cmp	 DWORD PTR tv64[ebp], -2005401590 ; 8878000aH
  0011a	0f 84 20 04 00
	00		 je	 $LN95@DXErrorToS
  00120	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  00123	81 c1 e4 fd 89
	77		 add	 ecx, 2005532132		; 7789fde4H
  00129	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  0012c	83 7d bc 31	 cmp	 DWORD PTR tv64[ebp], 49	; 00000031H
  00130	0f 87 5e 04 00
	00		 ja	 $LN107@DXErrorToS
  00136	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  00139	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN120@DXErrorToS[edx]
  00140	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN121@DXErrorToS[eax*4]
$LN113@DXErrorToS:
  00147	81 7d bc 82 00
	78 88		 cmp	 DWORD PTR tv64[ebp], -2005401470 ; 88780082H
  0014e	7f 34		 jg	 SHORT $LN114@DXErrorToS
  00150	81 7d bc 82 00
	78 88		 cmp	 DWORD PTR tv64[ebp], -2005401470 ; 88780082H
  00157	0f 84 ea 03 00
	00		 je	 $LN96@DXErrorToS
  0015d	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  00160	81 c1 e2 ff 87
	77		 add	 ecx, 2005401570		; 7787ffe2H
  00166	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  00169	83 7d bc 5a	 cmp	 DWORD PTR tv64[ebp], 90	; 0000005aH
  0016d	0f 87 21 04 00
	00		 ja	 $LN107@DXErrorToS
  00173	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  00176	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN122@DXErrorToS[edx]
  0017d	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN123@DXErrorToS[eax*4]
$LN114@DXErrorToS:
  00184	81 7d bc aa 00
	78 88		 cmp	 DWORD PTR tv64[ebp], -2005401430 ; 887800aaH
  0018b	7f 2c		 jg	 SHORT $LN115@DXErrorToS
  0018d	81 7d bc aa 00
	78 88		 cmp	 DWORD PTR tv64[ebp], -2005401430 ; 887800aaH
  00194	0f 84 f3 03 00
	00		 je	 $LN106@DXErrorToS
  0019a	81 7d bc 96 00
	78 88		 cmp	 DWORD PTR tv64[ebp], -2005401450 ; 88780096H
  001a1	0f 84 ae 03 00
	00		 je	 $LN98@DXErrorToS
  001a7	81 7d bc a0 00
	78 88		 cmp	 DWORD PTR tv64[ebp], -2005401440 ; 887800a0H
  001ae	0f 84 cb 03 00
	00		 je	 $LN104@DXErrorToS
  001b4	e9 db 03 00 00	 jmp	 $LN107@DXErrorToS
$LN115@DXErrorToS:
  001b9	83 7d bc 00	 cmp	 DWORD PTR tv64[ebp], 0
  001bd	74 05		 je	 SHORT $LN4@DXErrorToS
  001bf	e9 d0 03 00 00	 jmp	 $LN107@DXErrorToS
$LN4@DXErrorToS:

; 62   : 		case DD_OK:
; 63   : 			/* Also includes D3D_OK and D3DRM_OK */
; 64   : 			return "No error.";

  001c4	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_09MFOLKCNJ@No?5error?4@
  001c9	e9 cb 03 00 00	 jmp	 $LN2@DXErrorToS
$LN5@DXErrorToS:

; 65   : 		case DDERR_ALREADYINITIALIZED:
; 66   : 			return "This object is already initialized.";

  001ce	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@GNLOJKFC@This?5object?5is?5already?5initiali@
  001d3	e9 c1 03 00 00	 jmp	 $LN2@DXErrorToS
$LN6@DXErrorToS:

; 67   : 		case DDERR_BLTFASTCANTCLIP:
; 68   : 			return "Return if a clipper object is attached to the source surface passed into a BltFast call.";

  001d8	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FJ@KMDCLNJD@Return?5if?5a?5clipper?5object?5is?5a@
  001dd	e9 b7 03 00 00	 jmp	 $LN2@DXErrorToS
$LN7@DXErrorToS:

; 69   : 		case DDERR_CANNOTATTACHSURFACE:
; 70   : 			return "This surface can not be attached to the requested surface.";

  001e2	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DL@BBJLNAKM@This?5surface?5can?5not?5be?5attache@
  001e7	e9 ad 03 00 00	 jmp	 $LN2@DXErrorToS
$LN8@DXErrorToS:

; 71   : 		case DDERR_CANNOTDETACHSURFACE:
; 72   : 			return "This surface can not be detached from the requested surface.";

  001ec	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DN@LEFGIDN@This?5surface?5can?5not?5be?5detache@
  001f1	e9 a3 03 00 00	 jmp	 $LN2@DXErrorToS
$LN9@DXErrorToS:

; 73   : 		case DDERR_CANTCREATEDC:
; 74   : 			return "Windows can not create any more DCs.";

  001f6	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CF@GJIGGFKA@Windows?5can?5not?5create?5any?5more@
  001fb	e9 99 03 00 00	 jmp	 $LN2@DXErrorToS
$LN10@DXErrorToS:

; 75   : 		case DDERR_CANTDUPLICATE:
; 76   : 			return "Can't duplicate primary & 3D surfaces, or surfaces that are implicitly created.";

  00200	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FA@POJAKNBB@Can?8t?5duplicate?5primary?5?$CG?53D?5su@
  00205	e9 8f 03 00 00	 jmp	 $LN2@DXErrorToS
$LN11@DXErrorToS:

; 77   : 		case DDERR_CLIPPERISUSINGHWND:
; 78   : 			return "An attempt was made to set a cliplist for a clipper object that is already monitoring an hwnd.";

  0020a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FP@NIPEIFIG@An?5attempt?5was?5made?5to?5set?5a?5cl@
  0020f	e9 85 03 00 00	 jmp	 $LN2@DXErrorToS
$LN12@DXErrorToS:

; 79   : 		case DDERR_COLORKEYNOTSET:
; 80   : 			return "No src color key specified for this operation.";

  00214	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CP@OBDMAKNP@No?5src?5color?5key?5specified?5for?5@
  00219	e9 7b 03 00 00	 jmp	 $LN2@DXErrorToS
$LN13@DXErrorToS:

; 81   : 		case DDERR_CURRENTLYNOTAVAIL:
; 82   : 			return "Support is currently not available.";

  0021e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@PMBNGEOI@Support?5is?5currently?5not?5availa@
  00223	e9 71 03 00 00	 jmp	 $LN2@DXErrorToS
$LN14@DXErrorToS:

; 83   : 		case DDERR_DIRECTDRAWALREADYCREATED:
; 84   : 			return "A DirectDraw object representing this driver has already been created for this process.";

  00228	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FI@GOGCMLHC@A?5DirectDraw?5object?5representin@
  0022d	e9 67 03 00 00	 jmp	 $LN2@DXErrorToS
$LN15@DXErrorToS:

; 85   : 		case DDERR_EXCEPTION:
; 86   : 			return "An exception was encountered while performing the requested operation.";

  00232	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EH@CDBAFGH@An?5exception?5was?5encountered?5wh@
  00237	e9 5d 03 00 00	 jmp	 $LN2@DXErrorToS
$LN16@DXErrorToS:

; 87   : 		case DDERR_EXCLUSIVEMODEALREADYSET:
; 88   : 			return "An attempt was made to set the cooperative level when it was already set to exclusive.";

  0023c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FH@MJINBAC@An?5attempt?5was?5made?5to?5set?5the?5@
  00241	e9 53 03 00 00	 jmp	 $LN2@DXErrorToS
$LN17@DXErrorToS:

; 89   : 		case DDERR_GENERIC:
; 90   : 			return "Generic failure.";

  00246	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BB@KBOIAOFC@Generic?5failure?4@
  0024b	e9 49 03 00 00	 jmp	 $LN2@DXErrorToS
$LN18@DXErrorToS:

; 91   : 		case DDERR_HEIGHTALIGN:
; 92   : 			return "Height of rectangle provided is not a multiple of reqd alignment.";

  00250	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EC@EALBIOLJ@Height?5of?5rectangle?5provided?5is@
  00255	e9 3f 03 00 00	 jmp	 $LN2@DXErrorToS
$LN19@DXErrorToS:

; 93   : 		case DDERR_HWNDALREADYSET:
; 94   : 			return "The CooperativeLevel HWND has already been set. It can not be reset while the process has surfaces or palettes created.";

  0025a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0HI@DCJNEJCF@The?5CooperativeLevel?5HWND?5has?5a@
  0025f	e9 35 03 00 00	 jmp	 $LN2@DXErrorToS
$LN20@DXErrorToS:

; 95   : 		case DDERR_HWNDSUBCLASSED:
; 96   : 			return "HWND used by DirectDraw CooperativeLevel has been subclassed, this prevents DirectDraw from restoring state.";

  00264	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GN@LCCJEOLA@HWND?5used?5by?5DirectDraw?5Coopera@
  00269	e9 2b 03 00 00	 jmp	 $LN2@DXErrorToS
$LN21@DXErrorToS:

; 97   : 		case DDERR_IMPLICITLYCREATED:
; 98   : 			return "This surface can not be restored because it is an implicitly created surface.";

  0026e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EO@MLDMACAO@This?5surface?5can?5not?5be?5restore@
  00273	e9 21 03 00 00	 jmp	 $LN2@DXErrorToS
$LN22@DXErrorToS:

; 99   : 		case DDERR_INCOMPATIBLEPRIMARY:
; 100  : 			return "Unable to match primary surface creation request with existing primary surface.";

  00278	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FA@CJKLCPNO@Unable?5to?5match?5primary?5surface@
  0027d	e9 17 03 00 00	 jmp	 $LN2@DXErrorToS
$LN23@DXErrorToS:

; 101  : 		case DDERR_INVALIDCAPS:
; 102  : 			return "One or more of the caps bits passed to the callback are incorrect.";

  00282	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0ED@BFFHDLIA@One?5or?5more?5of?5the?5caps?5bits?5pa@
  00287	e9 0d 03 00 00	 jmp	 $LN2@DXErrorToS
$LN24@DXErrorToS:

; 103  : 		case DDERR_INVALIDCLIPLIST:
; 104  : 			return "DirectDraw does not support the provided cliplist.";

  0028c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DD@NPCNDFNI@DirectDraw?5does?5not?5support?5the@
  00291	e9 03 03 00 00	 jmp	 $LN2@DXErrorToS
$LN25@DXErrorToS:

; 105  : 		case DDERR_INVALIDDIRECTDRAWGUID:
; 106  : 			return "The GUID passed to DirectDrawCreate is not a valid DirectDraw driver identifier.";

  00296	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FB@NCEBDCPJ@The?5GUID?5passed?5to?5DirectDrawCr@
  0029b	e9 f9 02 00 00	 jmp	 $LN2@DXErrorToS
$LN26@DXErrorToS:

; 107  : 		case DDERR_INVALIDMODE:
; 108  : 			return "DirectDraw does not support the requested mode.";

  002a0	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DA@IIABODBL@DirectDraw?5does?5not?5support?5the@
  002a5	e9 ef 02 00 00	 jmp	 $LN2@DXErrorToS
$LN27@DXErrorToS:

; 109  : 		case DDERR_INVALIDOBJECT:
; 110  : 			return "DirectDraw received a pointer that was an invalid DIRECTDRAW object.";

  002aa	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EF@KJAIAJHH@DirectDraw?5received?5a?5pointer?5t@
  002af	e9 e5 02 00 00	 jmp	 $LN2@DXErrorToS
$LN28@DXErrorToS:

; 111  : 		case DDERR_INVALIDPARAMS:
; 112  : 			return "One or more of the parameters passed to the function are incorrect.";

  002b4	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EE@NAIMECAD@One?5or?5more?5of?5the?5parameters?5p@
  002b9	e9 db 02 00 00	 jmp	 $LN2@DXErrorToS
$LN29@DXErrorToS:

; 113  : 		case DDERR_INVALIDPIXELFORMAT:
; 114  : 			return "The pixel format was invalid as specified.";

  002be	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CL@CBCGEFFM@The?5pixel?5format?5was?5invalid?5as@
  002c3	e9 d1 02 00 00	 jmp	 $LN2@DXErrorToS
$LN30@DXErrorToS:

; 115  : 		case DDERR_INVALIDPOSITION:
; 116  : 			return "Returned when the position of the overlay on the destination is no longer legal for that destination.";

  002c8	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GG@LIJBMCBE@Returned?5when?5the?5position?5of?5t@
  002cd	e9 c7 02 00 00	 jmp	 $LN2@DXErrorToS
$LN31@DXErrorToS:

; 117  : 		case DDERR_INVALIDRECT:
; 118  : 			return "Rectangle provided was invalid.";

  002d2	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CA@LDCKNMJJ@Rectangle?5provided?5was?5invalid?4@
  002d7	e9 bd 02 00 00	 jmp	 $LN2@DXErrorToS
$LN32@DXErrorToS:

; 119  : 		case DDERR_LOCKEDSURFACES:
; 120  : 			return "Operation could not be carried out because one or more surfaces are locked.";

  002dc	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EM@FKDKIMOF@Operation?5could?5not?5be?5carried?5@
  002e1	e9 b3 02 00 00	 jmp	 $LN2@DXErrorToS
$LN33@DXErrorToS:

; 121  : 		case DDERR_NO3D:
; 122  : 			return "There is no 3D present.";

  002e6	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BI@KHKAHFJG@There?5is?5no?53D?5present?4@
  002eb	e9 a9 02 00 00	 jmp	 $LN2@DXErrorToS
$LN34@DXErrorToS:

; 123  : 		case DDERR_NOALPHAHW:
; 124  : 			return "Operation could not be carried out because there is no alpha accleration hardware present or available.";

  002f0	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GI@JJNDILEJ@Operation?5could?5not?5be?5carried?5@
  002f5	e9 9f 02 00 00	 jmp	 $LN2@DXErrorToS
$LN35@DXErrorToS:

; 125  : 		case DDERR_NOBLTHW:
; 126  : 			return "No blitter hardware present.";

  002fa	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BN@NAPBBDFE@No?5blitter?5hardware?5present?4@
  002ff	e9 95 02 00 00	 jmp	 $LN2@DXErrorToS
$LN36@DXErrorToS:

; 127  : 		case DDERR_NOCLIPLIST:
; 128  : 			return "No cliplist available.";

  00304	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BH@PELKAFPB@No?5cliplist?5available?4@
  00309	e9 8b 02 00 00	 jmp	 $LN2@DXErrorToS
$LN37@DXErrorToS:

; 129  : 		case DDERR_NOCLIPPERATTACHED:
; 130  : 			return "No clipper object attached to surface object.";

  0030e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CO@MJPCBGDG@No?5clipper?5object?5attached?5to?5s@
  00313	e9 81 02 00 00	 jmp	 $LN2@DXErrorToS
$LN38@DXErrorToS:

; 131  : 		case DDERR_NOCOLORCONVHW:
; 132  : 			return "Operation could not be carried out because there is no color conversion hardware present or available.";

  00318	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GH@BOIPDPM@Operation?5could?5not?5be?5carried?5@
  0031d	e9 77 02 00 00	 jmp	 $LN2@DXErrorToS
$LN39@DXErrorToS:

; 133  : 		case DDERR_NOCOLORKEY:
; 134  : 			return "Surface doesn't currently have a color key";

  00322	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CL@IILHAEHG@Surface?5doesn?8t?5currently?5have?5@
  00327	e9 6d 02 00 00	 jmp	 $LN2@DXErrorToS
$LN40@DXErrorToS:

; 135  : 		case DDERR_NOCOLORKEYHW:
; 136  : 			return "Operation could not be carried out because there is no hardware support of the destination color key.";

  0032c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GG@BKLNDBJ@Operation?5could?5not?5be?5carried?5@
  00331	e9 63 02 00 00	 jmp	 $LN2@DXErrorToS
$LN41@DXErrorToS:

; 137  : 		case DDERR_NOCOOPERATIVELEVELSET:
; 138  : 			return "Create function called without DirectDraw object method SetCooperativeLevel being called.";

  00336	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FK@PACAMKCG@Create?5function?5called?5without?5@
  0033b	e9 59 02 00 00	 jmp	 $LN2@DXErrorToS
$LN42@DXErrorToS:

; 139  : 		case DDERR_NODC:
; 140  : 			return "No DC was ever created for this surface.";

  00340	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CJ@PGLCBLIH@No?5DC?5was?5ever?5created?5for?5this@
  00345	e9 4f 02 00 00	 jmp	 $LN2@DXErrorToS
$LN43@DXErrorToS:

; 141  : 		case DDERR_NODDROPSHW:
; 142  : 			return "No DirectDraw ROP hardware.";

  0034a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BM@NFFEGJAD@No?5DirectDraw?5ROP?5hardware?4@
  0034f	e9 45 02 00 00	 jmp	 $LN2@DXErrorToS
$LN44@DXErrorToS:

; 143  : 		case DDERR_NODIRECTDRAWHW:
; 144  : 			return "A hardware-only DirectDraw object creation was attempted but the driver did not support any hardware.";

  00354	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GG@IKGELPKB@A?5hardware?9only?5DirectDraw?5obje@
  00359	e9 3b 02 00 00	 jmp	 $LN2@DXErrorToS
$LN45@DXErrorToS:

; 145  : 		case DDERR_NOEMULATION:
; 146  : 			return "Software emulation not available.";

  0035e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CC@BMNKFNMG@Software?5emulation?5not?5availabl@
  00363	e9 31 02 00 00	 jmp	 $LN2@DXErrorToS
$LN46@DXErrorToS:

; 147  : 		case DDERR_NOEXCLUSIVEMODE:
; 148  : 			return "Operation requires the application to have exclusive mode but the application does not have exclusive mode.";

  00368	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GM@BMBFBGIP@Operation?5requires?5the?5applicat@
  0036d	e9 27 02 00 00	 jmp	 $LN2@DXErrorToS
$LN47@DXErrorToS:

; 149  : 		case DDERR_NOFLIPHW:
; 150  : 			return "Flipping visible surfaces is not supported.";

  00372	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CM@NHMMBKAL@Flipping?5visible?5surfaces?5is?5no@
  00377	e9 1d 02 00 00	 jmp	 $LN2@DXErrorToS
$LN48@DXErrorToS:

; 151  : 		case DDERR_NOGDI:
; 152  : 			return "There is no GDI present.";

  0037c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BJ@FKFKNCIF@There?5is?5no?5GDI?5present?4@
  00381	e9 13 02 00 00	 jmp	 $LN2@DXErrorToS
$LN49@DXErrorToS:

; 153  : 		case DDERR_NOHWND:
; 154  : 			return "Clipper notification requires an HWND or no HWND has previously been set as the CooperativeLevel HWND.";

  00386	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GH@NENFCBNK@Clipper?5notification?5requires?5a@
  0038b	e9 09 02 00 00	 jmp	 $LN2@DXErrorToS
$LN50@DXErrorToS:

; 155  : 		case DDERR_NOMIRRORHW:
; 156  : 			return "Operation could not be carried out because there is no hardware present or available.";

  00390	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FG@OFJHNOHB@Operation?5could?5not?5be?5carried?5@
  00395	e9 ff 01 00 00	 jmp	 $LN2@DXErrorToS
$LN51@DXErrorToS:

; 157  : 		case DDERR_NOOVERLAYDEST:
; 158  : 			return "Returned when GetOverlayPosition is called on an overlay that UpdateOverlay has never been called on to establish a destination.";

  0039a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0IB@NKJMOKPE@Returned?5when?5GetOverlayPositio@
  0039f	e9 f5 01 00 00	 jmp	 $LN2@DXErrorToS
$LN52@DXErrorToS:

; 159  : 		case DDERR_NOOVERLAYHW:
; 160  : 			return "Operation could not be carried out because there is no overlay hardware present or available.";

  003a4	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FO@LFKMBAOB@Operation?5could?5not?5be?5carried?5@
  003a9	e9 eb 01 00 00	 jmp	 $LN2@DXErrorToS
$LN53@DXErrorToS:

; 161  : 		case DDERR_NOPALETTEATTACHED:
; 162  : 			return "No palette object attached to this surface.";

  003ae	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CM@OKLOIJNP@No?5palette?5object?5attached?5to?5t@
  003b3	e9 e1 01 00 00	 jmp	 $LN2@DXErrorToS
$LN54@DXErrorToS:

; 163  : 		case DDERR_NOPALETTEHW:
; 164  : 			return "No hardware support for 16 or 256 color palettes.";

  003b8	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DC@PJMIBLJE@No?5hardware?5support?5for?516?5or?52@
  003bd	e9 d7 01 00 00	 jmp	 $LN2@DXErrorToS
$LN55@DXErrorToS:

; 165  : 		case DDERR_NORASTEROPHW:
; 166  : 			return "Operation could not be carried out because there is no appropriate raster op hardware present or available.";

  003c2	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GM@JNJEAEGI@Operation?5could?5not?5be?5carried?5@
  003c7	e9 cd 01 00 00	 jmp	 $LN2@DXErrorToS
$LN56@DXErrorToS:

; 167  : 		case DDERR_NOROTATIONHW:
; 168  : 			return "Operation could not be carried out because there is no rotation hardware present or available.";

  003cc	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FP@JDGAGAEO@Operation?5could?5not?5be?5carried?5@
  003d1	e9 c3 01 00 00	 jmp	 $LN2@DXErrorToS
$LN57@DXErrorToS:

; 169  : 		case DDERR_NOSTRETCHHW:
; 170  : 			return "Operation could not be carried out because there is no hardware support for stretching.";

  003d6	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FI@KCFGLHEC@Operation?5could?5not?5be?5carried?5@
  003db	e9 b9 01 00 00	 jmp	 $LN2@DXErrorToS
$LN58@DXErrorToS:

; 171  : 		case DDERR_NOT4BITCOLOR:
; 172  : 			return "DirectDrawSurface is not in 4 bit color palette and the requested operation requires 4 bit color palette.";

  003e0	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GK@IPGIBAK@DirectDrawSurface?5is?5not?5in?54?5b@
  003e5	e9 af 01 00 00	 jmp	 $LN2@DXErrorToS
$LN59@DXErrorToS:

; 173  : 		case DDERR_NOT4BITCOLORINDEX:
; 174  : 			return "DirectDrawSurface is not in 4 bit color index palette and the requested operation requires 4 bit color index palette.";

  003ea	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0HG@LFKOEPKO@DirectDrawSurface?5is?5not?5in?54?5b@
  003ef	e9 a5 01 00 00	 jmp	 $LN2@DXErrorToS
$LN60@DXErrorToS:

; 175  : 		case DDERR_NOT8BITCOLOR:
; 176  : 			return "DirectDrawSurface is not in 8 bit color mode and the requested operation requires 8 bit color.";

  003f4	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FP@BHALNOGB@DirectDrawSurface?5is?5not?5in?58?5b@
  003f9	e9 9b 01 00 00	 jmp	 $LN2@DXErrorToS
$LN61@DXErrorToS:

; 177  : 		case DDERR_NOTAOVERLAYSURFACE:
; 178  : 			return "Returned when an overlay member is called for a non-overlay surface.";

  003fe	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EF@CJANMDHH@Returned?5when?5an?5overlay?5member@
  00403	e9 91 01 00 00	 jmp	 $LN2@DXErrorToS
$LN62@DXErrorToS:

; 179  : 		case DDERR_NOTEXTUREHW:
; 180  : 			return "Operation could not be carried out because there is no texture mapping hardware present or available.";

  00408	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GG@EKIEHJAM@Operation?5could?5not?5be?5carried?5@
  0040d	e9 87 01 00 00	 jmp	 $LN2@DXErrorToS
$LN63@DXErrorToS:

; 181  : 		case DDERR_NOTFLIPPABLE:
; 182  : 			return "An attempt has been made to flip a surface that is not flippable.";

  00412	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EC@FMLBJEAK@An?5attempt?5has?5been?5made?5to?5fli@
  00417	e9 7d 01 00 00	 jmp	 $LN2@DXErrorToS
$LN64@DXErrorToS:

; 183  : 		case DDERR_NOTFOUND:
; 184  : 			return "Requested item was not found.";

  0041c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BO@CHDMBBBF@Requested?5item?5was?5not?5found?4@
  00421	e9 73 01 00 00	 jmp	 $LN2@DXErrorToS
$LN65@DXErrorToS:

; 185  : 		case DDERR_NOTLOCKED:
; 186  : 			return "Surface was not locked.  An attempt to unlock a surface that was not locked at all, or by this process, has been attempted.";

  00426	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0HM@NHHIDGKF@Surface?5was?5not?5locked?4?5?5An?5att@
  0042b	e9 69 01 00 00	 jmp	 $LN2@DXErrorToS
$LN66@DXErrorToS:

; 187  : 		case DDERR_NOTPALETTIZED:
; 188  : 			return "The surface being used is not a palette-based surface.";

  00430	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DH@NDAHKMHA@The?5surface?5being?5used?5is?5not?5a@
  00435	e9 5f 01 00 00	 jmp	 $LN2@DXErrorToS
$LN67@DXErrorToS:

; 189  : 		case DDERR_NOVSYNCHW:
; 190  : 			return "Operation could not be carried out because there is no hardware support for vertical blank synchronized operations.";

  0043a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0HE@PKELAKG@Operation?5could?5not?5be?5carried?5@
  0043f	e9 55 01 00 00	 jmp	 $LN2@DXErrorToS
$LN68@DXErrorToS:

; 191  : 		case DDERR_NOZBUFFERHW:
; 192  : 			return "Operation could not be carried out because there is no hardware support for zbuffer blitting.";

  00444	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FO@CGPNEIKB@Operation?5could?5not?5be?5carried?5@
  00449	e9 4b 01 00 00	 jmp	 $LN2@DXErrorToS
$LN69@DXErrorToS:

; 193  : 		case DDERR_NOZOVERLAYHW:
; 194  : 			return "Overlay surfaces could not be z layered based on their BltOrder because the hardware does not support z layering of overlays.";

  0044e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0HO@ONPEKNIP@Overlay?5surfaces?5could?5not?5be?5z@
  00453	e9 41 01 00 00	 jmp	 $LN2@DXErrorToS
$LN70@DXErrorToS:

; 195  : 		case DDERR_OUTOFCAPS:
; 196  : 			return "The hardware needed for the requested operation has already been allocated.";

  00458	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EM@EELGIDIE@The?5hardware?5needed?5for?5the?5req@
  0045d	e9 37 01 00 00	 jmp	 $LN2@DXErrorToS
$LN71@DXErrorToS:

; 197  : 		case DDERR_OUTOFMEMORY:
; 198  : 			return "There is not enough memory to perform the operation.";

  00462	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DF@EDPBMKFI@There?5is?5not?5enough?5memory?5to?5p@
  00467	e9 2d 01 00 00	 jmp	 $LN2@DXErrorToS
$LN72@DXErrorToS:

; 199  : 		case DDERR_OUTOFVIDEOMEMORY:
; 200  : 			return "DirectDraw does not have enough memory to perform the operation.";

  0046c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EB@LPHBKIBK@DirectDraw?5does?5not?5have?5enough@
  00471	e9 23 01 00 00	 jmp	 $LN2@DXErrorToS
$LN73@DXErrorToS:

; 201  : 		case DDERR_OVERLAYCANTCLIP:
; 202  : 			return "The hardware does not support clipped overlays.";

  00476	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DA@EMNBHCDK@The?5hardware?5does?5not?5support?5c@
  0047b	e9 19 01 00 00	 jmp	 $LN2@DXErrorToS
$LN74@DXErrorToS:

; 203  : 		case DDERR_OVERLAYCOLORKEYONLYONEACTIVE:
; 204  : 			return "Can only have ony color key active at one time for overlays.";

  00480	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DN@GHBAPLIJ@Can?5only?5have?5ony?5color?5key?5act@
  00485	e9 0f 01 00 00	 jmp	 $LN2@DXErrorToS
$LN75@DXErrorToS:

; 205  : 		case DDERR_OVERLAYNOTVISIBLE:
; 206  : 			return "Returned when GetOverlayPosition is called on a hidden overlay.";

  0048a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EA@DDDLNGBH@Returned?5when?5GetOverlayPositio@
  0048f	e9 05 01 00 00	 jmp	 $LN2@DXErrorToS
$LN76@DXErrorToS:

; 207  : 		case DDERR_PALETTEBUSY:
; 208  : 			return "Access to this palette is being refused because the palette is already locked by another thread.";

  00494	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GB@ILOMPIOP@Access?5to?5this?5palette?5is?5being@
  00499	e9 fb 00 00 00	 jmp	 $LN2@DXErrorToS
$LN77@DXErrorToS:

; 209  : 		case DDERR_PRIMARYSURFACEALREADYEXISTS:
; 210  : 			return "This process already has created a primary surface.";

  0049e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DE@LHIBOPNF@This?5process?5already?5has?5create@
  004a3	e9 f1 00 00 00	 jmp	 $LN2@DXErrorToS
$LN78@DXErrorToS:

; 211  : 		case DDERR_REGIONTOOSMALL:
; 212  : 			return "Region passed to Clipper::GetClipList is too small.";

  004a8	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DE@LHMJOPAD@Region?5passed?5to?5Clipper?3?3GetCl@
  004ad	e9 e7 00 00 00	 jmp	 $LN2@DXErrorToS
$LN79@DXErrorToS:

; 213  : 		case DDERR_SURFACEALREADYATTACHED:
; 214  : 			return "This surface is already attached to the surface it is being attached to.";

  004b2	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EJ@MJJAHJI@This?5surface?5is?5already?5attache@
  004b7	e9 dd 00 00 00	 jmp	 $LN2@DXErrorToS
$LN80@DXErrorToS:

; 215  : 		case DDERR_SURFACEALREADYDEPENDENT:
; 216  : 			return "This surface is already a dependency of the surface it is being made a dependency of.";

  004bc	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FG@HFCBDGGN@This?5surface?5is?5already?5a?5depen@
  004c1	e9 d3 00 00 00	 jmp	 $LN2@DXErrorToS
$LN81@DXErrorToS:

; 217  : 		case DDERR_SURFACEBUSY:
; 218  : 			return "Access to this surface is being refused because the surface is already locked by another thread.";

  004c6	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GB@PKDGEDIE@Access?5to?5this?5surface?5is?5being@
  004cb	e9 c9 00 00 00	 jmp	 $LN2@DXErrorToS
$LN82@DXErrorToS:

; 219  : 		case DDERR_SURFACEISOBSCURED:
; 220  : 			return "Access to surface refused because the surface is obscured.";

  004d0	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DL@LIGOLCLJ@Access?5to?5surface?5refused?5becau@
  004d5	e9 bf 00 00 00	 jmp	 $LN2@DXErrorToS
$LN83@DXErrorToS:

; 221  : 		case DDERR_SURFACELOST:
; 222  : 			return "Access to this surface is being refused because the surface memory is gone. The DirectDrawSurface object representing this surface should have Restore called on it.";

  004da	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0KF@DEEKKLLG@Access?5to?5this?5surface?5is?5being@
  004df	e9 b5 00 00 00	 jmp	 $LN2@DXErrorToS
$LN84@DXErrorToS:

; 223  : 		case DDERR_SURFACENOTATTACHED:
; 224  : 			return "The requested surface is not attached.";

  004e4	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CH@NBHJPNMH@The?5requested?5surface?5is?5not?5at@
  004e9	e9 ab 00 00 00	 jmp	 $LN2@DXErrorToS
$LN85@DXErrorToS:

; 225  : 		case DDERR_TOOBIGHEIGHT:
; 226  : 			return "Height requested by DirectDraw is too large.";

  004ee	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CN@JBIGMBNK@Height?5requested?5by?5DirectDraw?5@
  004f3	e9 a1 00 00 00	 jmp	 $LN2@DXErrorToS
$LN86@DXErrorToS:

; 227  : 		case DDERR_TOOBIGSIZE:
; 228  : 			return "Size requested by DirectDraw is too large, but the individual height and width are OK.";

  004f8	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FH@MDFFJBAI@Size?5requested?5by?5DirectDraw?5is@
  004fd	e9 97 00 00 00	 jmp	 $LN2@DXErrorToS
$LN87@DXErrorToS:

; 229  : 		case DDERR_TOOBIGWIDTH:
; 230  : 			return "Width requested by DirectDraw is too large.";

  00502	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CM@PGPNKPOC@Width?5requested?5by?5DirectDraw?5i@
  00507	e9 8d 00 00 00	 jmp	 $LN2@DXErrorToS
$LN88@DXErrorToS:

; 231  : 		case DDERR_UNSUPPORTED:
; 232  : 			return "Function call not supported.";

  0050c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BN@LEDPANOH@Function?5call?5not?5supported?4@
  00511	e9 83 00 00 00	 jmp	 $LN2@DXErrorToS
$LN89@DXErrorToS:

; 233  : 		case DDERR_UNSUPPORTEDFORMAT:
; 234  : 			return "FOURCC format requested is unsupported by DirectDraw.";

  00516	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DG@FJDFLDBN@FOURCC?5format?5requested?5is?5unsu@
  0051b	eb 7c		 jmp	 SHORT $LN2@DXErrorToS
$LN90@DXErrorToS:

; 235  : 		case DDERR_UNSUPPORTEDMASK:
; 236  : 			return "Bitmask in the pixel format requested is unsupported by DirectDraw.";

  0051d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EE@EBAHMOKN@Bitmask?5in?5the?5pixel?5format?5req@
  00522	eb 75		 jmp	 SHORT $LN2@DXErrorToS
$LN91@DXErrorToS:

; 237  : 		case DDERR_VERTICALBLANKINPROGRESS:
; 238  : 			return "Vertical blank is in progress.";

  00524	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BP@BCDIBOGJ@Vertical?5blank?5is?5in?5progress?4@
  00529	eb 6e		 jmp	 SHORT $LN2@DXErrorToS
$LN92@DXErrorToS:

; 239  : 		case DDERR_WASSTILLDRAWING:
; 240  : 			return "Informs DirectDraw that the previous Blt which is transfering information to or from this Surface is incomplete.";

  0052b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0HB@BMJAPBHK@Informs?5DirectDraw?5that?5the?5pre@
  00530	eb 67		 jmp	 SHORT $LN2@DXErrorToS
$LN93@DXErrorToS:

; 241  : 		case DDERR_WRONGMODE:
; 242  : 			return "This surface can not be restored because it was created in a different mode.";

  00532	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EN@IKLJDHPJ@This?5surface?5can?5not?5be?5restore@
  00537	eb 60		 jmp	 SHORT $LN2@DXErrorToS
$LN94@DXErrorToS:

; 243  : 		case DDERR_XALIGN:
; 244  : 			return "Rectangle provided was not horizontally aligned on required boundary.";

  00539	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EG@DIBGAJNH@Rectangle?5provided?5was?5not?5hori@
  0053e	eb 59		 jmp	 SHORT $LN2@DXErrorToS
$LN95@DXErrorToS:

; 245  : 
; 246  : 		//
; 247  : 		// DirectSound errors
; 248  : 		//
; 249  : 		case DSERR_ALLOCATED:
; 250  : 			return "The request failed because resources, such as a priority level, were already in use by another caller.";

  00540	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0GH@DFJEBAPI@The?5request?5failed?5because?5reso@
  00545	eb 52		 jmp	 SHORT $LN2@DXErrorToS
$LN96@DXErrorToS:

; 251  : 		case DSERR_ALREADYINITIALIZED:
; 252  : 			return "The object is already initialized.";

  00547	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CD@DNLBMOFN@The?5object?5is?5already?5initializ@
  0054c	eb 4b		 jmp	 SHORT $LN2@DXErrorToS
$LN97@DXErrorToS:

; 253  : 		case DSERR_BADFORMAT:
; 254  : 			return "The specified wave format is not supported.";

  0054e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CM@KNPHCOJ@The?5specified?5wave?5format?5is?5no@
  00553	eb 44		 jmp	 SHORT $LN2@DXErrorToS
$LN98@DXErrorToS:

; 255  : 		case DSERR_BUFFERLOST:
; 256  : 			return "The buffer memory has been lost and must be restored.";

  00555	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DG@HLKLJHOH@The?5buffer?5memory?5has?5been?5lost@
  0055a	eb 3d		 jmp	 SHORT $LN2@DXErrorToS
$LN99@DXErrorToS:

; 257  : 		case DSERR_CONTROLUNAVAIL:
; 258  : 			return "The control (volume, pan, and so forth) requested by the caller is not available.";

  0055c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FC@PBJOMCAO@The?5control?5?$CIvolume?0?5pan?0?5and?5s@
  00561	eb 36		 jmp	 SHORT $LN2@DXErrorToS
$LN100@DXErrorToS:

; 259  : 		case DSERR_INVALIDCALL:
; 260  : 			return "This function is not valid for the current state of this object.";

  00563	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0EB@PHEFJAFL@This?5function?5is?5not?5valid?5for?5@
  00568	eb 2f		 jmp	 SHORT $LN2@DXErrorToS
$LN101@DXErrorToS:

; 261  : 		case DSERR_NOAGGREGATION:
; 262  : 			return "The object does not support aggregation.";

  0056a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CJ@EGBJFDAI@The?5object?5does?5not?5support?5agg@
  0056f	eb 28		 jmp	 SHORT $LN2@DXErrorToS
$LN102@DXErrorToS:

; 263  : 		case DSERR_NODRIVER:
; 264  : 			return "No sound driver is available for use.";

  00571	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CG@BNICEEDI@No?5sound?5driver?5is?5available?5fo@
  00576	eb 21		 jmp	 SHORT $LN2@DXErrorToS
$LN103@DXErrorToS:

; 265  : 		case DSERR_NOINTERFACE:
; 266  : 			return "The requested COM interface is not available.";

  00578	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CO@IIBIMJJB@The?5requested?5COM?5interface?5is?5@
  0057d	eb 1a		 jmp	 SHORT $LN2@DXErrorToS
$LN104@DXErrorToS:

; 267  : 		case DSERR_OTHERAPPHASPRIO:
; 268  : 			return "Another application has a higher priority level, preventing this call from succeeding";

  0057f	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FG@PKDCOOI@Another?5application?5has?5a?5highe@
  00584	eb 13		 jmp	 SHORT $LN2@DXErrorToS
$LN105@DXErrorToS:

; 269  : 		case DSERR_PRIOLEVELNEEDED:
; 270  : 			return "The caller does not have the priority level required for the function to succeed.";

  00586	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0FC@KMIIFNDE@The?5caller?5does?5not?5have?5the?5pr@
  0058b	eb 0c		 jmp	 SHORT $LN2@DXErrorToS
$LN106@DXErrorToS:

; 271  : 		case DSERR_UNINITIALIZED:
; 272  : 			return "The IDirectSound::Initialize method has not been called or has not been called successfully before other methods were called.";

  0058d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0HO@JKMIBHBO@The?5IDirectSound?3?3Initialize?5me@
  00592	eb 05		 jmp	 SHORT $LN2@DXErrorToS
$LN107@DXErrorToS:

; 273  : 		default:
; 274  : 			return "Unrecognized error value.";

  00594	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BK@EENFNOMH@Unrecognized?5error?5value?4@
$LN2@DXErrorToS:

; 275  : 	}
; 276  : }

  00599	5f		 pop	 edi
  0059a	5e		 pop	 esi
  0059b	5b		 pop	 ebx
  0059c	8b e5		 mov	 esp, ebp
  0059e	5d		 pop	 ebp
  0059f	c3		 ret	 0
$LN117@DXErrorToS:
  005a0	00 00 00 00	 DD	 $LN7@DXErrorToS
  005a4	00 00 00 00	 DD	 $LN8@DXErrorToS
  005a8	00 00 00 00	 DD	 $LN13@DXErrorToS
  005ac	00 00 00 00	 DD	 $LN15@DXErrorToS
  005b0	00 00 00 00	 DD	 $LN18@DXErrorToS
  005b4	00 00 00 00	 DD	 $LN22@DXErrorToS
  005b8	00 00 00 00	 DD	 $LN23@DXErrorToS
  005bc	00 00 00 00	 DD	 $LN24@DXErrorToS
  005c0	00 00 00 00	 DD	 $LN26@DXErrorToS
  005c4	00 00 00 00	 DD	 $LN27@DXErrorToS
  005c8	00 00 00 00	 DD	 $LN29@DXErrorToS
  005cc	00 00 00 00	 DD	 $LN31@DXErrorToS
  005d0	00 00 00 00	 DD	 $LN32@DXErrorToS
  005d4	00 00 00 00	 DD	 $LN33@DXErrorToS
  005d8	00 00 00 00	 DD	 $LN34@DXErrorToS
  005dc	00 00 00 00	 DD	 $LN36@DXErrorToS
  005e0	00 00 00 00	 DD	 $LN38@DXErrorToS
  005e4	00 00 00 00	 DD	 $LN41@DXErrorToS
  005e8	00 00 00 00	 DD	 $LN39@DXErrorToS
  005ec	00 00 00 00	 DD	 $LN40@DXErrorToS
  005f0	00 00 00 00	 DD	 $LN46@DXErrorToS
  005f4	00 00 00 00	 DD	 $LN47@DXErrorToS
  005f8	00 00 00 00	 DD	 $LN48@DXErrorToS
  005fc	00 00 00 00	 DD	 $LN50@DXErrorToS
  00600	00 00 00 00	 DD	 $LN64@DXErrorToS
  00604	00 00 00 00	 DD	 $LN107@DXErrorToS
$LN116@DXErrorToS:
  00608	00		 DB	 0
  00609	19		 DB	 25			; 00000019H
  0060a	19		 DB	 25			; 00000019H
  0060b	19		 DB	 25			; 00000019H
  0060c	19		 DB	 25			; 00000019H
  0060d	19		 DB	 25			; 00000019H
  0060e	19		 DB	 25			; 00000019H
  0060f	19		 DB	 25			; 00000019H
  00610	19		 DB	 25			; 00000019H
  00611	19		 DB	 25			; 00000019H
  00612	01		 DB	 1
  00613	19		 DB	 25			; 00000019H
  00614	19		 DB	 25			; 00000019H
  00615	19		 DB	 25			; 00000019H
  00616	19		 DB	 25			; 00000019H
  00617	19		 DB	 25			; 00000019H
  00618	19		 DB	 25			; 00000019H
  00619	19		 DB	 25			; 00000019H
  0061a	19		 DB	 25			; 00000019H
  0061b	19		 DB	 25			; 00000019H
  0061c	19		 DB	 25			; 00000019H
  0061d	19		 DB	 25			; 00000019H
  0061e	19		 DB	 25			; 00000019H
  0061f	19		 DB	 25			; 00000019H
  00620	19		 DB	 25			; 00000019H
  00621	19		 DB	 25			; 00000019H
  00622	19		 DB	 25			; 00000019H
  00623	19		 DB	 25			; 00000019H
  00624	19		 DB	 25			; 00000019H
  00625	19		 DB	 25			; 00000019H
  00626	02		 DB	 2
  00627	19		 DB	 25			; 00000019H
  00628	19		 DB	 25			; 00000019H
  00629	19		 DB	 25			; 00000019H
  0062a	19		 DB	 25			; 00000019H
  0062b	19		 DB	 25			; 00000019H
  0062c	19		 DB	 25			; 00000019H
  0062d	19		 DB	 25			; 00000019H
  0062e	19		 DB	 25			; 00000019H
  0062f	19		 DB	 25			; 00000019H
  00630	19		 DB	 25			; 00000019H
  00631	19		 DB	 25			; 00000019H
  00632	19		 DB	 25			; 00000019H
  00633	19		 DB	 25			; 00000019H
  00634	19		 DB	 25			; 00000019H
  00635	03		 DB	 3
  00636	19		 DB	 25			; 00000019H
  00637	19		 DB	 25			; 00000019H
  00638	19		 DB	 25			; 00000019H
  00639	19		 DB	 25			; 00000019H
  0063a	19		 DB	 25			; 00000019H
  0063b	19		 DB	 25			; 00000019H
  0063c	19		 DB	 25			; 00000019H
  0063d	19		 DB	 25			; 00000019H
  0063e	19		 DB	 25			; 00000019H
  0063f	19		 DB	 25			; 00000019H
  00640	19		 DB	 25			; 00000019H
  00641	19		 DB	 25			; 00000019H
  00642	19		 DB	 25			; 00000019H
  00643	19		 DB	 25			; 00000019H
  00644	19		 DB	 25			; 00000019H
  00645	19		 DB	 25			; 00000019H
  00646	19		 DB	 25			; 00000019H
  00647	19		 DB	 25			; 00000019H
  00648	19		 DB	 25			; 00000019H
  00649	19		 DB	 25			; 00000019H
  0064a	19		 DB	 25			; 00000019H
  0064b	19		 DB	 25			; 00000019H
  0064c	19		 DB	 25			; 00000019H
  0064d	19		 DB	 25			; 00000019H
  0064e	19		 DB	 25			; 00000019H
  0064f	19		 DB	 25			; 00000019H
  00650	19		 DB	 25			; 00000019H
  00651	19		 DB	 25			; 00000019H
  00652	19		 DB	 25			; 00000019H
  00653	19		 DB	 25			; 00000019H
  00654	19		 DB	 25			; 00000019H
  00655	19		 DB	 25			; 00000019H
  00656	19		 DB	 25			; 00000019H
  00657	19		 DB	 25			; 00000019H
  00658	04		 DB	 4
  00659	19		 DB	 25			; 00000019H
  0065a	19		 DB	 25			; 00000019H
  0065b	19		 DB	 25			; 00000019H
  0065c	19		 DB	 25			; 00000019H
  0065d	05		 DB	 5
  0065e	19		 DB	 25			; 00000019H
  0065f	19		 DB	 25			; 00000019H
  00660	19		 DB	 25			; 00000019H
  00661	19		 DB	 25			; 00000019H
  00662	06		 DB	 6
  00663	19		 DB	 25			; 00000019H
  00664	19		 DB	 25			; 00000019H
  00665	19		 DB	 25			; 00000019H
  00666	19		 DB	 25			; 00000019H
  00667	19		 DB	 25			; 00000019H
  00668	19		 DB	 25			; 00000019H
  00669	19		 DB	 25			; 00000019H
  0066a	19		 DB	 25			; 00000019H
  0066b	19		 DB	 25			; 00000019H
  0066c	07		 DB	 7
  0066d	19		 DB	 25			; 00000019H
  0066e	19		 DB	 25			; 00000019H
  0066f	19		 DB	 25			; 00000019H
  00670	19		 DB	 25			; 00000019H
  00671	19		 DB	 25			; 00000019H
  00672	19		 DB	 25			; 00000019H
  00673	19		 DB	 25			; 00000019H
  00674	19		 DB	 25			; 00000019H
  00675	19		 DB	 25			; 00000019H
  00676	08		 DB	 8
  00677	19		 DB	 25			; 00000019H
  00678	19		 DB	 25			; 00000019H
  00679	19		 DB	 25			; 00000019H
  0067a	19		 DB	 25			; 00000019H
  0067b	19		 DB	 25			; 00000019H
  0067c	19		 DB	 25			; 00000019H
  0067d	19		 DB	 25			; 00000019H
  0067e	19		 DB	 25			; 00000019H
  0067f	19		 DB	 25			; 00000019H
  00680	09		 DB	 9
  00681	19		 DB	 25			; 00000019H
  00682	19		 DB	 25			; 00000019H
  00683	19		 DB	 25			; 00000019H
  00684	19		 DB	 25			; 00000019H
  00685	19		 DB	 25			; 00000019H
  00686	19		 DB	 25			; 00000019H
  00687	19		 DB	 25			; 00000019H
  00688	19		 DB	 25			; 00000019H
  00689	19		 DB	 25			; 00000019H
  0068a	19		 DB	 25			; 00000019H
  0068b	19		 DB	 25			; 00000019H
  0068c	19		 DB	 25			; 00000019H
  0068d	19		 DB	 25			; 00000019H
  0068e	19		 DB	 25			; 00000019H
  0068f	0a		 DB	 10			; 0000000aH
  00690	19		 DB	 25			; 00000019H
  00691	19		 DB	 25			; 00000019H
  00692	19		 DB	 25			; 00000019H
  00693	19		 DB	 25			; 00000019H
  00694	0b		 DB	 11			; 0000000bH
  00695	19		 DB	 25			; 00000019H
  00696	19		 DB	 25			; 00000019H
  00697	19		 DB	 25			; 00000019H
  00698	19		 DB	 25			; 00000019H
  00699	19		 DB	 25			; 00000019H
  0069a	19		 DB	 25			; 00000019H
  0069b	19		 DB	 25			; 00000019H
  0069c	19		 DB	 25			; 00000019H
  0069d	19		 DB	 25			; 00000019H
  0069e	0c		 DB	 12			; 0000000cH
  0069f	19		 DB	 25			; 00000019H
  006a0	19		 DB	 25			; 00000019H
  006a1	19		 DB	 25			; 00000019H
  006a2	19		 DB	 25			; 00000019H
  006a3	19		 DB	 25			; 00000019H
  006a4	19		 DB	 25			; 00000019H
  006a5	19		 DB	 25			; 00000019H
  006a6	19		 DB	 25			; 00000019H
  006a7	19		 DB	 25			; 00000019H
  006a8	0d		 DB	 13			; 0000000dH
  006a9	19		 DB	 25			; 00000019H
  006aa	19		 DB	 25			; 00000019H
  006ab	19		 DB	 25			; 00000019H
  006ac	19		 DB	 25			; 00000019H
  006ad	19		 DB	 25			; 00000019H
  006ae	19		 DB	 25			; 00000019H
  006af	19		 DB	 25			; 00000019H
  006b0	19		 DB	 25			; 00000019H
  006b1	19		 DB	 25			; 00000019H
  006b2	0e		 DB	 14			; 0000000eH
  006b3	19		 DB	 25			; 00000019H
  006b4	19		 DB	 25			; 00000019H
  006b5	19		 DB	 25			; 00000019H
  006b6	19		 DB	 25			; 00000019H
  006b7	19		 DB	 25			; 00000019H
  006b8	19		 DB	 25			; 00000019H
  006b9	19		 DB	 25			; 00000019H
  006ba	19		 DB	 25			; 00000019H
  006bb	19		 DB	 25			; 00000019H
  006bc	19		 DB	 25			; 00000019H
  006bd	19		 DB	 25			; 00000019H
  006be	19		 DB	 25			; 00000019H
  006bf	19		 DB	 25			; 00000019H
  006c0	19		 DB	 25			; 00000019H
  006c1	19		 DB	 25			; 00000019H
  006c2	19		 DB	 25			; 00000019H
  006c3	19		 DB	 25			; 00000019H
  006c4	19		 DB	 25			; 00000019H
  006c5	19		 DB	 25			; 00000019H
  006c6	19		 DB	 25			; 00000019H
  006c7	19		 DB	 25			; 00000019H
  006c8	19		 DB	 25			; 00000019H
  006c9	19		 DB	 25			; 00000019H
  006ca	19		 DB	 25			; 00000019H
  006cb	0f		 DB	 15			; 0000000fH
  006cc	19		 DB	 25			; 00000019H
  006cd	19		 DB	 25			; 00000019H
  006ce	19		 DB	 25			; 00000019H
  006cf	19		 DB	 25			; 00000019H
  006d0	10		 DB	 16			; 00000010H
  006d1	19		 DB	 25			; 00000019H
  006d2	11		 DB	 17			; 00000011H
  006d3	19		 DB	 25			; 00000019H
  006d4	19		 DB	 25			; 00000019H
  006d5	12		 DB	 18			; 00000012H
  006d6	19		 DB	 25			; 00000019H
  006d7	19		 DB	 25			; 00000019H
  006d8	19		 DB	 25			; 00000019H
  006d9	19		 DB	 25			; 00000019H
  006da	13		 DB	 19			; 00000013H
  006db	19		 DB	 25			; 00000019H
  006dc	19		 DB	 25			; 00000019H
  006dd	19		 DB	 25			; 00000019H
  006de	19		 DB	 25			; 00000019H
  006df	14		 DB	 20			; 00000014H
  006e0	19		 DB	 25			; 00000019H
  006e1	19		 DB	 25			; 00000019H
  006e2	19		 DB	 25			; 00000019H
  006e3	19		 DB	 25			; 00000019H
  006e4	15		 DB	 21			; 00000015H
  006e5	19		 DB	 25			; 00000019H
  006e6	19		 DB	 25			; 00000019H
  006e7	19		 DB	 25			; 00000019H
  006e8	19		 DB	 25			; 00000019H
  006e9	19		 DB	 25			; 00000019H
  006ea	19		 DB	 25			; 00000019H
  006eb	19		 DB	 25			; 00000019H
  006ec	19		 DB	 25			; 00000019H
  006ed	19		 DB	 25			; 00000019H
  006ee	16		 DB	 22			; 00000016H
  006ef	19		 DB	 25			; 00000019H
  006f0	19		 DB	 25			; 00000019H
  006f1	19		 DB	 25			; 00000019H
  006f2	19		 DB	 25			; 00000019H
  006f3	19		 DB	 25			; 00000019H
  006f4	19		 DB	 25			; 00000019H
  006f5	19		 DB	 25			; 00000019H
  006f6	19		 DB	 25			; 00000019H
  006f7	19		 DB	 25			; 00000019H
  006f8	17		 DB	 23			; 00000017H
  006f9	19		 DB	 25			; 00000019H
  006fa	19		 DB	 25			; 00000019H
  006fb	19		 DB	 25			; 00000019H
  006fc	19		 DB	 25			; 00000019H
  006fd	18		 DB	 24			; 00000018H
  006fe	66 90		 npad	 2
$LN119@DXErrorToS:
  00700	00 00 00 00	 DD	 $LN55@DXErrorToS
  00704	00 00 00 00	 DD	 $LN56@DXErrorToS
  00708	00 00 00 00	 DD	 $LN57@DXErrorToS
  0070c	00 00 00 00	 DD	 $LN58@DXErrorToS
  00710	00 00 00 00	 DD	 $LN59@DXErrorToS
  00714	00 00 00 00	 DD	 $LN60@DXErrorToS
  00718	00 00 00 00	 DD	 $LN62@DXErrorToS
  0071c	00 00 00 00	 DD	 $LN67@DXErrorToS
  00720	00 00 00 00	 DD	 $LN68@DXErrorToS
  00724	00 00 00 00	 DD	 $LN69@DXErrorToS
  00728	00 00 00 00	 DD	 $LN70@DXErrorToS
  0072c	00 00 00 00	 DD	 $LN72@DXErrorToS
  00730	00 00 00 00	 DD	 $LN73@DXErrorToS
  00734	00 00 00 00	 DD	 $LN74@DXErrorToS
  00738	00 00 00 00	 DD	 $LN76@DXErrorToS
  0073c	00 00 00 00	 DD	 $LN12@DXErrorToS
  00740	00 00 00 00	 DD	 $LN79@DXErrorToS
  00744	00 00 00 00	 DD	 $LN80@DXErrorToS
  00748	00 00 00 00	 DD	 $LN81@DXErrorToS
  0074c	00 00 00 00	 DD	 $LN82@DXErrorToS
  00750	00 00 00 00	 DD	 $LN83@DXErrorToS
  00754	00 00 00 00	 DD	 $LN84@DXErrorToS
  00758	00 00 00 00	 DD	 $LN85@DXErrorToS
  0075c	00 00 00 00	 DD	 $LN86@DXErrorToS
  00760	00 00 00 00	 DD	 $LN87@DXErrorToS
  00764	00 00 00 00	 DD	 $LN89@DXErrorToS
  00768	00 00 00 00	 DD	 $LN90@DXErrorToS
  0076c	00 00 00 00	 DD	 $LN107@DXErrorToS
$LN118@DXErrorToS:
  00770	00		 DB	 0
  00771	1b		 DB	 27			; 0000001bH
  00772	1b		 DB	 27			; 0000001bH
  00773	1b		 DB	 27			; 0000001bH
  00774	1b		 DB	 27			; 0000001bH
  00775	1b		 DB	 27			; 0000001bH
  00776	1b		 DB	 27			; 0000001bH
  00777	1b		 DB	 27			; 0000001bH
  00778	1b		 DB	 27			; 0000001bH
  00779	1b		 DB	 27			; 0000001bH
  0077a	01		 DB	 1
  0077b	1b		 DB	 27			; 0000001bH
  0077c	1b		 DB	 27			; 0000001bH
  0077d	1b		 DB	 27			; 0000001bH
  0077e	1b		 DB	 27			; 0000001bH
  0077f	1b		 DB	 27			; 0000001bH
  00780	1b		 DB	 27			; 0000001bH
  00781	1b		 DB	 27			; 0000001bH
  00782	1b		 DB	 27			; 0000001bH
  00783	1b		 DB	 27			; 0000001bH
  00784	1b		 DB	 27			; 0000001bH
  00785	1b		 DB	 27			; 0000001bH
  00786	1b		 DB	 27			; 0000001bH
  00787	1b		 DB	 27			; 0000001bH
  00788	1b		 DB	 27			; 0000001bH
  00789	1b		 DB	 27			; 0000001bH
  0078a	1b		 DB	 27			; 0000001bH
  0078b	1b		 DB	 27			; 0000001bH
  0078c	1b		 DB	 27			; 0000001bH
  0078d	1b		 DB	 27			; 0000001bH
  0078e	02		 DB	 2
  0078f	1b		 DB	 27			; 0000001bH
  00790	1b		 DB	 27			; 0000001bH
  00791	1b		 DB	 27			; 0000001bH
  00792	1b		 DB	 27			; 0000001bH
  00793	1b		 DB	 27			; 0000001bH
  00794	03		 DB	 3
  00795	04		 DB	 4
  00796	1b		 DB	 27			; 0000001bH
  00797	1b		 DB	 27			; 0000001bH
  00798	05		 DB	 5
  00799	1b		 DB	 27			; 0000001bH
  0079a	1b		 DB	 27			; 0000001bH
  0079b	1b		 DB	 27			; 0000001bH
  0079c	1b		 DB	 27			; 0000001bH
  0079d	1b		 DB	 27			; 0000001bH
  0079e	1b		 DB	 27			; 0000001bH
  0079f	1b		 DB	 27			; 0000001bH
  007a0	1b		 DB	 27			; 0000001bH
  007a1	1b		 DB	 27			; 0000001bH
  007a2	06		 DB	 6
  007a3	1b		 DB	 27			; 0000001bH
  007a4	1b		 DB	 27			; 0000001bH
  007a5	1b		 DB	 27			; 0000001bH
  007a6	1b		 DB	 27			; 0000001bH
  007a7	07		 DB	 7
  007a8	1b		 DB	 27			; 0000001bH
  007a9	1b		 DB	 27			; 0000001bH
  007aa	1b		 DB	 27			; 0000001bH
  007ab	1b		 DB	 27			; 0000001bH
  007ac	08		 DB	 8
  007ad	1b		 DB	 27			; 0000001bH
  007ae	1b		 DB	 27			; 0000001bH
  007af	1b		 DB	 27			; 0000001bH
  007b0	1b		 DB	 27			; 0000001bH
  007b1	1b		 DB	 27			; 0000001bH
  007b2	1b		 DB	 27			; 0000001bH
  007b3	1b		 DB	 27			; 0000001bH
  007b4	1b		 DB	 27			; 0000001bH
  007b5	1b		 DB	 27			; 0000001bH
  007b6	09		 DB	 9
  007b7	1b		 DB	 27			; 0000001bH
  007b8	1b		 DB	 27			; 0000001bH
  007b9	1b		 DB	 27			; 0000001bH
  007ba	1b		 DB	 27			; 0000001bH
  007bb	1b		 DB	 27			; 0000001bH
  007bc	1b		 DB	 27			; 0000001bH
  007bd	1b		 DB	 27			; 0000001bH
  007be	1b		 DB	 27			; 0000001bH
  007bf	1b		 DB	 27			; 0000001bH
  007c0	0a		 DB	 10			; 0000000aH
  007c1	1b		 DB	 27			; 0000001bH
  007c2	1b		 DB	 27			; 0000001bH
  007c3	1b		 DB	 27			; 0000001bH
  007c4	1b		 DB	 27			; 0000001bH
  007c5	1b		 DB	 27			; 0000001bH
  007c6	1b		 DB	 27			; 0000001bH
  007c7	1b		 DB	 27			; 0000001bH
  007c8	1b		 DB	 27			; 0000001bH
  007c9	1b		 DB	 27			; 0000001bH
  007ca	1b		 DB	 27			; 0000001bH
  007cb	1b		 DB	 27			; 0000001bH
  007cc	1b		 DB	 27			; 0000001bH
  007cd	1b		 DB	 27			; 0000001bH
  007ce	1b		 DB	 27			; 0000001bH
  007cf	1b		 DB	 27			; 0000001bH
  007d0	1b		 DB	 27			; 0000001bH
  007d1	1b		 DB	 27			; 0000001bH
  007d2	1b		 DB	 27			; 0000001bH
  007d3	1b		 DB	 27			; 0000001bH
  007d4	0b		 DB	 11			; 0000000bH
  007d5	1b		 DB	 27			; 0000001bH
  007d6	0c		 DB	 12			; 0000000cH
  007d7	1b		 DB	 27			; 0000001bH
  007d8	0d		 DB	 13			; 0000000dH
  007d9	1b		 DB	 27			; 0000001bH
  007da	1b		 DB	 27			; 0000001bH
  007db	0e		 DB	 14			; 0000000eH
  007dc	1b		 DB	 27			; 0000001bH
  007dd	1b		 DB	 27			; 0000001bH
  007de	1b		 DB	 27			; 0000001bH
  007df	1b		 DB	 27			; 0000001bH
  007e0	1b		 DB	 27			; 0000001bH
  007e1	1b		 DB	 27			; 0000001bH
  007e2	1b		 DB	 27			; 0000001bH
  007e3	1b		 DB	 27			; 0000001bH
  007e4	1b		 DB	 27			; 0000001bH
  007e5	1b		 DB	 27			; 0000001bH
  007e6	1b		 DB	 27			; 0000001bH
  007e7	1b		 DB	 27			; 0000001bH
  007e8	0f		 DB	 15			; 0000000fH
  007e9	1b		 DB	 27			; 0000001bH
  007ea	1b		 DB	 27			; 0000001bH
  007eb	1b		 DB	 27			; 0000001bH
  007ec	1b		 DB	 27			; 0000001bH
  007ed	1b		 DB	 27			; 0000001bH
  007ee	1b		 DB	 27			; 0000001bH
  007ef	1b		 DB	 27			; 0000001bH
  007f0	1b		 DB	 27			; 0000001bH
  007f1	1b		 DB	 27			; 0000001bH
  007f2	10		 DB	 16			; 00000010H
  007f3	1b		 DB	 27			; 0000001bH
  007f4	1b		 DB	 27			; 0000001bH
  007f5	1b		 DB	 27			; 0000001bH
  007f6	1b		 DB	 27			; 0000001bH
  007f7	1b		 DB	 27			; 0000001bH
  007f8	1b		 DB	 27			; 0000001bH
  007f9	1b		 DB	 27			; 0000001bH
  007fa	1b		 DB	 27			; 0000001bH
  007fb	1b		 DB	 27			; 0000001bH
  007fc	11		 DB	 17			; 00000011H
  007fd	1b		 DB	 27			; 0000001bH
  007fe	1b		 DB	 27			; 0000001bH
  007ff	1b		 DB	 27			; 0000001bH
  00800	1b		 DB	 27			; 0000001bH
  00801	1b		 DB	 27			; 0000001bH
  00802	1b		 DB	 27			; 0000001bH
  00803	1b		 DB	 27			; 0000001bH
  00804	1b		 DB	 27			; 0000001bH
  00805	1b		 DB	 27			; 0000001bH
  00806	12		 DB	 18			; 00000012H
  00807	1b		 DB	 27			; 0000001bH
  00808	1b		 DB	 27			; 0000001bH
  00809	1b		 DB	 27			; 0000001bH
  0080a	1b		 DB	 27			; 0000001bH
  0080b	1b		 DB	 27			; 0000001bH
  0080c	1b		 DB	 27			; 0000001bH
  0080d	1b		 DB	 27			; 0000001bH
  0080e	1b		 DB	 27			; 0000001bH
  0080f	1b		 DB	 27			; 0000001bH
  00810	13		 DB	 19			; 00000013H
  00811	1b		 DB	 27			; 0000001bH
  00812	1b		 DB	 27			; 0000001bH
  00813	1b		 DB	 27			; 0000001bH
  00814	1b		 DB	 27			; 0000001bH
  00815	1b		 DB	 27			; 0000001bH
  00816	1b		 DB	 27			; 0000001bH
  00817	1b		 DB	 27			; 0000001bH
  00818	1b		 DB	 27			; 0000001bH
  00819	1b		 DB	 27			; 0000001bH
  0081a	14		 DB	 20			; 00000014H
  0081b	1b		 DB	 27			; 0000001bH
  0081c	1b		 DB	 27			; 0000001bH
  0081d	1b		 DB	 27			; 0000001bH
  0081e	1b		 DB	 27			; 0000001bH
  0081f	1b		 DB	 27			; 0000001bH
  00820	1b		 DB	 27			; 0000001bH
  00821	1b		 DB	 27			; 0000001bH
  00822	1b		 DB	 27			; 0000001bH
  00823	1b		 DB	 27			; 0000001bH
  00824	15		 DB	 21			; 00000015H
  00825	1b		 DB	 27			; 0000001bH
  00826	1b		 DB	 27			; 0000001bH
  00827	1b		 DB	 27			; 0000001bH
  00828	1b		 DB	 27			; 0000001bH
  00829	1b		 DB	 27			; 0000001bH
  0082a	1b		 DB	 27			; 0000001bH
  0082b	1b		 DB	 27			; 0000001bH
  0082c	1b		 DB	 27			; 0000001bH
  0082d	1b		 DB	 27			; 0000001bH
  0082e	16		 DB	 22			; 00000016H
  0082f	1b		 DB	 27			; 0000001bH
  00830	1b		 DB	 27			; 0000001bH
  00831	1b		 DB	 27			; 0000001bH
  00832	1b		 DB	 27			; 0000001bH
  00833	1b		 DB	 27			; 0000001bH
  00834	1b		 DB	 27			; 0000001bH
  00835	1b		 DB	 27			; 0000001bH
  00836	1b		 DB	 27			; 0000001bH
  00837	1b		 DB	 27			; 0000001bH
  00838	17		 DB	 23			; 00000017H
  00839	1b		 DB	 27			; 0000001bH
  0083a	1b		 DB	 27			; 0000001bH
  0083b	1b		 DB	 27			; 0000001bH
  0083c	1b		 DB	 27			; 0000001bH
  0083d	1b		 DB	 27			; 0000001bH
  0083e	1b		 DB	 27			; 0000001bH
  0083f	1b		 DB	 27			; 0000001bH
  00840	1b		 DB	 27			; 0000001bH
  00841	1b		 DB	 27			; 0000001bH
  00842	18		 DB	 24			; 00000018H
  00843	1b		 DB	 27			; 0000001bH
  00844	1b		 DB	 27			; 0000001bH
  00845	1b		 DB	 27			; 0000001bH
  00846	1b		 DB	 27			; 0000001bH
  00847	1b		 DB	 27			; 0000001bH
  00848	1b		 DB	 27			; 0000001bH
  00849	1b		 DB	 27			; 0000001bH
  0084a	1b		 DB	 27			; 0000001bH
  0084b	1b		 DB	 27			; 0000001bH
  0084c	1b		 DB	 27			; 0000001bH
  0084d	1b		 DB	 27			; 0000001bH
  0084e	1b		 DB	 27			; 0000001bH
  0084f	1b		 DB	 27			; 0000001bH
  00850	1b		 DB	 27			; 0000001bH
  00851	1b		 DB	 27			; 0000001bH
  00852	1b		 DB	 27			; 0000001bH
  00853	1b		 DB	 27			; 0000001bH
  00854	1b		 DB	 27			; 0000001bH
  00855	1b		 DB	 27			; 0000001bH
  00856	19		 DB	 25			; 00000019H
  00857	1b		 DB	 27			; 0000001bH
  00858	1b		 DB	 27			; 0000001bH
  00859	1b		 DB	 27			; 0000001bH
  0085a	1b		 DB	 27			; 0000001bH
  0085b	1b		 DB	 27			; 0000001bH
  0085c	1b		 DB	 27			; 0000001bH
  0085d	1b		 DB	 27			; 0000001bH
  0085e	1b		 DB	 27			; 0000001bH
  0085f	1b		 DB	 27			; 0000001bH
  00860	1a		 DB	 26			; 0000001aH
  00861	0f 1f 00	 npad	 3
$LN121@DXErrorToS:
  00864	00 00 00 00	 DD	 $LN92@DXErrorToS
  00868	00 00 00 00	 DD	 $LN94@DXErrorToS
  0086c	00 00 00 00	 DD	 $LN25@DXErrorToS
  00870	00 00 00 00	 DD	 $LN14@DXErrorToS
  00874	00 00 00 00	 DD	 $LN44@DXErrorToS
  00878	00 00 00 00	 DD	 $LN77@DXErrorToS
  0087c	00 00 00 00	 DD	 $LN45@DXErrorToS
  00880	00 00 00 00	 DD	 $LN78@DXErrorToS
  00884	00 00 00 00	 DD	 $LN11@DXErrorToS
  00888	00 00 00 00	 DD	 $LN37@DXErrorToS
  0088c	00 00 00 00	 DD	 $LN49@DXErrorToS
  00890	00 00 00 00	 DD	 $LN20@DXErrorToS
  00894	00 00 00 00	 DD	 $LN19@DXErrorToS
  00898	00 00 00 00	 DD	 $LN53@DXErrorToS
  0089c	00 00 00 00	 DD	 $LN54@DXErrorToS
  008a0	00 00 00 00	 DD	 $LN6@DXErrorToS
  008a4	00 00 00 00	 DD	 $LN35@DXErrorToS
  008a8	00 00 00 00	 DD	 $LN43@DXErrorToS
  008ac	00 00 00 00	 DD	 $LN75@DXErrorToS
  008b0	00 00 00 00	 DD	 $LN51@DXErrorToS
  008b4	00 00 00 00	 DD	 $LN30@DXErrorToS
  008b8	00 00 00 00	 DD	 $LN61@DXErrorToS
  008bc	00 00 00 00	 DD	 $LN16@DXErrorToS
  008c0	00 00 00 00	 DD	 $LN63@DXErrorToS
  008c4	00 00 00 00	 DD	 $LN10@DXErrorToS
  008c8	00 00 00 00	 DD	 $LN65@DXErrorToS
  008cc	00 00 00 00	 DD	 $LN9@DXErrorToS
  008d0	00 00 00 00	 DD	 $LN42@DXErrorToS
  008d4	00 00 00 00	 DD	 $LN93@DXErrorToS
  008d8	00 00 00 00	 DD	 $LN21@DXErrorToS
  008dc	00 00 00 00	 DD	 $LN66@DXErrorToS
  008e0	00 00 00 00	 DD	 $LN107@DXErrorToS
$LN120@DXErrorToS:
  008e4	00		 DB	 0
  008e5	1f		 DB	 31			; 0000001fH
  008e6	1f		 DB	 31			; 0000001fH
  008e7	1f		 DB	 31			; 0000001fH
  008e8	1f		 DB	 31			; 0000001fH
  008e9	1f		 DB	 31			; 0000001fH
  008ea	1f		 DB	 31			; 0000001fH
  008eb	1f		 DB	 31			; 0000001fH
  008ec	1f		 DB	 31			; 0000001fH
  008ed	1f		 DB	 31			; 0000001fH
  008ee	1f		 DB	 31			; 0000001fH
  008ef	1f		 DB	 31			; 0000001fH
  008f0	1f		 DB	 31			; 0000001fH
  008f1	1f		 DB	 31			; 0000001fH
  008f2	1f		 DB	 31			; 0000001fH
  008f3	1f		 DB	 31			; 0000001fH
  008f4	1f		 DB	 31			; 0000001fH
  008f5	1f		 DB	 31			; 0000001fH
  008f6	1f		 DB	 31			; 0000001fH
  008f7	1f		 DB	 31			; 0000001fH
  008f8	01		 DB	 1
  008f9	02		 DB	 2
  008fa	03		 DB	 3
  008fb	04		 DB	 4
  008fc	05		 DB	 5
  008fd	06		 DB	 6
  008fe	07		 DB	 7
  008ff	08		 DB	 8
  00900	09		 DB	 9
  00901	0a		 DB	 10			; 0000000aH
  00902	0b		 DB	 11			; 0000000bH
  00903	0c		 DB	 12			; 0000000cH
  00904	0d		 DB	 13			; 0000000dH
  00905	0e		 DB	 14			; 0000000eH
  00906	0f		 DB	 15			; 0000000fH
  00907	10		 DB	 16			; 00000010H
  00908	11		 DB	 17			; 00000011H
  00909	12		 DB	 18			; 00000012H
  0090a	13		 DB	 19			; 00000013H
  0090b	14		 DB	 20			; 00000014H
  0090c	15		 DB	 21			; 00000015H
  0090d	16		 DB	 22			; 00000016H
  0090e	17		 DB	 23			; 00000017H
  0090f	18		 DB	 24			; 00000018H
  00910	19		 DB	 25			; 00000019H
  00911	1a		 DB	 26			; 0000001aH
  00912	1b		 DB	 27			; 0000001bH
  00913	1c		 DB	 28			; 0000001cH
  00914	1d		 DB	 29			; 0000001dH
  00915	1e		 DB	 30			; 0000001eH
  00916	66 90		 npad	 2
$LN123@DXErrorToS:
  00918	00 00 00 00	 DD	 $LN99@DXErrorToS
  0091c	00 00 00 00	 DD	 $LN100@DXErrorToS
  00920	00 00 00 00	 DD	 $LN105@DXErrorToS
  00924	00 00 00 00	 DD	 $LN97@DXErrorToS
  00928	00 00 00 00	 DD	 $LN102@DXErrorToS
  0092c	00 00 00 00	 DD	 $LN107@DXErrorToS
$LN122@DXErrorToS:
  00930	00		 DB	 0
  00931	05		 DB	 5
  00932	05		 DB	 5
  00933	05		 DB	 5
  00934	05		 DB	 5
  00935	05		 DB	 5
  00936	05		 DB	 5
  00937	05		 DB	 5
  00938	05		 DB	 5
  00939	05		 DB	 5
  0093a	05		 DB	 5
  0093b	05		 DB	 5
  0093c	05		 DB	 5
  0093d	05		 DB	 5
  0093e	05		 DB	 5
  0093f	05		 DB	 5
  00940	05		 DB	 5
  00941	05		 DB	 5
  00942	05		 DB	 5
  00943	05		 DB	 5
  00944	01		 DB	 1
  00945	05		 DB	 5
  00946	05		 DB	 5
  00947	05		 DB	 5
  00948	05		 DB	 5
  00949	05		 DB	 5
  0094a	05		 DB	 5
  0094b	05		 DB	 5
  0094c	05		 DB	 5
  0094d	05		 DB	 5
  0094e	05		 DB	 5
  0094f	05		 DB	 5
  00950	05		 DB	 5
  00951	05		 DB	 5
  00952	05		 DB	 5
  00953	05		 DB	 5
  00954	05		 DB	 5
  00955	05		 DB	 5
  00956	05		 DB	 5
  00957	05		 DB	 5
  00958	02		 DB	 2
  00959	05		 DB	 5
  0095a	05		 DB	 5
  0095b	05		 DB	 5
  0095c	05		 DB	 5
  0095d	05		 DB	 5
  0095e	05		 DB	 5
  0095f	05		 DB	 5
  00960	05		 DB	 5
  00961	05		 DB	 5
  00962	05		 DB	 5
  00963	05		 DB	 5
  00964	05		 DB	 5
  00965	05		 DB	 5
  00966	05		 DB	 5
  00967	05		 DB	 5
  00968	05		 DB	 5
  00969	05		 DB	 5
  0096a	05		 DB	 5
  0096b	05		 DB	 5
  0096c	05		 DB	 5
  0096d	05		 DB	 5
  0096e	05		 DB	 5
  0096f	05		 DB	 5
  00970	05		 DB	 5
  00971	05		 DB	 5
  00972	05		 DB	 5
  00973	05		 DB	 5
  00974	05		 DB	 5
  00975	05		 DB	 5
  00976	03		 DB	 3
  00977	05		 DB	 5
  00978	05		 DB	 5
  00979	05		 DB	 5
  0097a	05		 DB	 5
  0097b	05		 DB	 5
  0097c	05		 DB	 5
  0097d	05		 DB	 5
  0097e	05		 DB	 5
  0097f	05		 DB	 5
  00980	05		 DB	 5
  00981	05		 DB	 5
  00982	05		 DB	 5
  00983	05		 DB	 5
  00984	05		 DB	 5
  00985	05		 DB	 5
  00986	05		 DB	 5
  00987	05		 DB	 5
  00988	05		 DB	 5
  00989	05		 DB	 5
  0098a	04		 DB	 4
_DXErrorToString ENDP
_TEXT	ENDS
END
